---
# Source: spark/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-spark-client-headless
  labels:
    app.kubernetes.io/name: spark
    app.kubernetes.io/instance: my-release
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: spark
    app.kubernetes.io/instance: my-release
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-spark-client
spec:
  serviceName: my-release-spark-client-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: client
    spec:
      securityContext:
        fsGroup: 0
        runAsUser: 0
      containers:
        - name: spark-client
          image: docker.io/bitnami/spark:2.4.6-debian-10-r14
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - name: spark-data
              mountPath: '/opt/bitnami/spark/spark_data'
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 1Gi
  volumeClaimTemplates:
  - metadata:
      name: spark-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-storage"
      resources:
        requests:
          storage: 30Gi
