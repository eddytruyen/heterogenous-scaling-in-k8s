apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-04-29T13:30:56Z"
  generateName: spark-client-
  labels:
    controller-revision-hash: spark-client-7595996775
    run: spark-client
    statefulset.kubernetes.io/pod-name: spark-client-0
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:controller-revision-hash: {}
          f:run: {}
          f:statefulset.kubernetes.io/pod-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"d910b3a1-27b5-4e3f-b89f-ce45a706fc85"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:containers:
          k:{"name":"spark-client"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/podinfo"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/opt/bitnami/spark/spark_data"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostname: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
          f:runAsUser: {}
        f:subdomain: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"podinfo"}:
            .: {}
            f:downwardAPI:
              .: {}
              f:defaultMode: {}
              f:items: {}
            f:name: {}
          k:{"name":"spark-data"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-04-29T13:30:56Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.43.0.2"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2021-04-29T13:31:30Z"
  name: spark-client-0
  namespace: silver
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: spark-client
    uid: d910b3a1-27b5-4e3f-b89f-ce45a706fc85
  resourceVersion: "35719453"
  selfLink: /api/v1/namespaces/silver/pods/spark-client-0
  uid: a3937480-450d-44de-ac21-f45cbedc70ff
spec:
  containers:
  - image: docker.io/bitnami/spark:2.4.6-debian-10-r14
    imagePullPolicy: IfNotPresent
    name: spark-client
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: "2"
        memory: 2Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/podinfo
      name: podinfo
    - mountPath: /opt/bitnami/spark/spark_data
      name: spark-data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-7t4wk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: spark-client-0
  nodeName: kube-ub19-3
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 0
    runAsUser: 0
  serviceAccount: default
  serviceAccountName: default
  subdomain: spark-client-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: spark-data
    persistentVolumeClaim:
      claimName: spark-data-spark-client-0
  - downwardAPI:
      defaultMode: 420
      items:
      - path: cpu_limit
        resourceFieldRef:
          containerName: spark-client
          divisor: 1m
          resource: limits.cpu
      - path: cpu_request
        resourceFieldRef:
          containerName: spark-client
          divisor: 1m
          resource: requests.cpu
      - path: mem_limit
        resourceFieldRef:
          containerName: spark-client
          divisor: 1Gi
          resource: limits.memory
      - path: mem_request
        resourceFieldRef:
          containerName: spark-client
          divisor: 1Gi
          resource: requests.memory
    name: podinfo
  - name: default-token-7t4wk
    secret:
      defaultMode: 420
      secretName: default-token-7t4wk
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-04-29T13:30:56Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-04-29T13:31:30Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-04-29T13:31:30Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-04-29T13:30:56Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://58bc0b5cdf05e72a131509b0878fa784c77b84e45054aaa169fecab00ee09620
    image: bitnami/spark:2.4.6-debian-10-r14
    imageID: docker-pullable://bitnami/spark@sha256:466bf61dd153c004d08fccf6f4e3ae9f560664736e4b867230d613d343d767e4
    lastState: {}
    name: spark-client
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-04-29T13:31:29Z"
  hostIP: 172.17.13.122
  phase: Running
  podIP: 10.43.0.2
  podIPs:
  - ip: 10.43.0.2
  qosClass: Guaranteed
  startTime: "2021-04-29T13:30:56Z"
