apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer1
spec:
  replicas: {{.Values.worker1Replicas}}
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
      - name: consumer
        image: decomads/python-consumer:process
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: {{.Values.worker1CPU}}
        env:
        - name: DNS_NAMESPACE
          value: {{.Values.namespace}}
        - name: STRESS_SIZE
          value: "{{.Values.stressSize}}"
        - name: POOL_SIZE
          value: "{{.Values.poolSize1}}"
      priorityClassName: {{.Values.priorityClass}}
      nodeSelector:
        serverlessNode: "yes"
      #tolerations:
      #- key: "node.kubernetes.io/disk-pressure"
      #operator: "Exists"
      #effect: "NoSchedule"   

