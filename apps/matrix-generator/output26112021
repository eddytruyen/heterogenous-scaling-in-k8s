 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;0:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '120', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;0:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '120', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;0:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '120', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;0:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '120', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;0:
Returning adaptive scaler for  1 tenants and 0;1;0;0:
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '216', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '216', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2db8ac490>, <src.sla.WorkerConf object at 0x7fa2db8ac690>, <src.sla.WorkerConf object at 0x7fa2db8ac7d0>, <src.sla.WorkerConf object at 0x7fa2db8aca10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
[0, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 1, 0, 0]
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
Going to 2 tenants
Starting at index 0 with window 10
['0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Getting next batch of experiments for 1 tenants
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 1, 1]
2
[0, 0, 2, 0]
3
[0, 1, 0, 1]
4
[1, 0, 0, 0]
5
[0, 1, 1, 0]
6
[0, 0, 0, 3]
7
[0, 2, 0, 0]
8
[0, 0, 1, 2]
9
[0, 0, 2, 1]
{'0': [[0, 0, 2], [0, 1, 1], [0, 2, 0], [1, 0, 1], [1, 1, 0], [0, 0, 3], [2, 0, 0], [0, 1, 2], [0, 2, 1]], '1': [[0, 0, 0]]}
{'0': [[0, 2, 0], [1, 1, 0], [2, 0, 0], [0, 0, 1], [0, 3, 0], [1, 2, 0], [2, 1, 0]], '1': [[0, 1, 0], [1, 0, 0]], '2': [[0, 0, 0]]}
{'0': [[2, 0, 0], [1, 0, 1], [0, 1, 0], [3, 0, 0], [0, 0, 2]], '1': [[1, 0, 0], [0, 0, 1], [2, 0, 0]], '2': [[0, 0, 0], [1, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1]], '1': [[0, 0, 1], [0, 1, 0], [0, 0, 2]], '0': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 1, 1], [0, 2, 0], [1, 0, 1], [1, 1, 0], [0, 0, 3], [2, 0, 0], [0, 1, 2], [0, 2, 1]], '1': [[0, 0, 0]]}
Elementstr: [[0,0,0,2];[0,0,1,1];[0,0,2,0];[0,1,0,1];[0,1,1,0];[0,0,0,3];[0,2,0,0];[0,0,1,2];[0,0,2,1]]
Min replicacount:0 0 0 2
Max replicacount:0 0 2 1
Elementstr: [[1,0,0,0]]
Min replicacount:1 0 0 0
Max replicacount:1 0 0 0
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 1, 0, 1] -> 1e-09
[0, 0, 2, 1] -> 1e-09
[0, 0, 0, 3] -> 1e-09
[0, 2, 0, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 0] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2db8afa10>, <src.sla.WorkerConf object at 0x7fa2db8af690>, <src.sla.WorkerConf object at 0x7fa2daddd610>, <src.sla.WorkerConf object at 0x7fa2daddd910>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  1 tenants and 0;0;1;2:
1
255
total_cost = 10
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
Getting next batch of experiments for 2 tenants
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
not removed
[0, 0, 2, 0]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 0]
removed
[0, 0, 0, 3]
not removed
[0, 2, 0, 0]
removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
not removed
Going to 2 tenants
Starting at index 0 with window 5
['0002', '0011', '0003', '0012', '0021', '0102', '1001', '0020', '0101', '1000', '0110', '0030', '0200', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 1, 1]
2
[0, 0, 0, 3]
3
[0, 0, 1, 2]
4
[0, 0, 2, 1]
{'0': [[0, 0, 2], [0, 1, 1], [0, 0, 3], [0, 1, 2], [0, 2, 1]]}
{'0': [[0, 2, 0], [1, 1, 0], [0, 3, 0], [1, 2, 0], [2, 1, 0]]}
{'0': [[2, 0, 0], [3, 0, 0]], '1': [[1, 0, 0], [2, 0, 0]], '2': [[1, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1]], '1': [[0, 0, 1], [0, 0, 2]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 1, 1], [0, 0, 3], [0, 1, 2], [0, 2, 1]]}
Elementstr: [[0,0,0,2];[0,0,1,1];[0,0,0,3];[0,0,1,2];[0,0,2,1]]
Min replicacount:0 0 0 2
Max replicacount:0 0 2 1
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 0, 3] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;0;1;2:
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
['0002', '0011', '0003', '0012', '0021', '0102', '1001', '0020', '0101', '1000', '0110', '0030', '0200', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 3..2
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0003', '0012', '0021', '0102', '1001', '0020', '0101', '1000', '0110', '0030', '0200', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
not removed
[0, 1, 0, 2]
not removed
[1, 0, 0, 1]
removed
[0, 0, 2, 0]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
Going to 2 tenants
Starting at index 0 with window 6
['0002', '0011', '0003', '0012', '0021', '0102', '0110', '0030', '0200', '0111', '1010', '0120', '1001', '0020', '0101', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 167
[0, 0, 0, 2] -> 1e-09
[0, 0, 0, 3] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81e50>, <src.sla.WorkerConf object at 0x7fa2dad819d0>, <src.sla.WorkerConf object at 0x7fa2dad81190>, <src.sla.WorkerConf object at 0x7fa2dad81a10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
total_cost = 9
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
Getting next batch of experiments for 3 tenants
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0003', '0012', '0021', '0102', '0110', '0030', '0200', '0111', '1010', '0120', '1001', '0020', '0101', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 2, 0, 0]
removed
[0, 1, 1, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
removed
Going to 3 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '1010', '0011', '0120', '1001', '0021', '0020', '0111', '0101', '1000', '0110', '0030', '0200', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 0, 3]
2
[0, 0, 1, 2]
3
[0, 1, 0, 2]
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
{'0': [[0, 2, 0], [0, 3, 0], [1, 2, 0]], '1': [[0, 2, 0]]}
{'0': [[2, 0, 0], [3, 0, 0], [2, 0, 1]], '1': [[2, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1], [0, 1, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
Elementstr: [[0,0,0,2];[0,0,0,3];[0,0,1,2];[0,1,0,2]]
Min replicacount:0 0 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0002', '0003', '0012', '0102', '1010', '0011', '0120', '1001', '0021', '0020', '0111', '0101', '1000', '0110', '0030', '0200', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '1010', '0011', '0120', '1001', '0021', '0020', '0111', '0101', '1000', '0110', '0030', '0200', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[1, 0, 1, 0]
removed
[0, 0, 1, 1]
not removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
not removed
[0, 0, 2, 0]
removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 1, 1]
removed
[0, 0, 2, 1]
removed
Going to 3 tenants
Going to 4 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '0111', '0101', '1000', '0110', '0011', '0021', '1010', '0030', '0120', '1001', '0200', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 145
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
total_cost = 10
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  4 tenants and 0;0;0;2:
1
255
Getting next batch of experiments for 4 tenants
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '0111', '0101', '1000', '0110', '0011', '0021', '1010', '0030', '0120', '1001', '0200', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 0]
removed
[0, 0, 1, 1]
not removed
[0, 0, 2, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
removed
[0, 0, 1, 1]
removed
[0, 0, 2, 1]
removed
Going to 3 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0111', '0011', '0021', '0200', '0101', '1000', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 0, 3]
2
[0, 0, 1, 2]
3
[0, 1, 0, 2]
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
{'0': [[0, 2, 0], [0, 3, 0], [1, 2, 0]], '1': [[0, 2, 0]]}
{'0': [[2, 0, 0], [3, 0, 0], [2, 0, 1]], '1': [[2, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1], [0, 1, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
Elementstr: [[0,0,0,2];[0,0,0,3];[0,0,1,2];[0,1,0,2]]
Min replicacount:0 0 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;1;0;2:
Returning adaptive scaler for  4 tenants and 0;1;0;2:
1
255
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0111', '0011', '0021', '0200', '0101', '1000', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 5..4
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0111', '0011', '0021', '0200', '0101', '1000', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 1, 1, 1]
not removed
[0, 0, 1, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
removed
[0, 0, 1, 1]
removed
Going to 3 tenants
Going to 5 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '0021', '0200', '0101', '1000', '0111', '0011', '1010', '0030', '0120', '1001', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 152
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad87b90>, <src.sla.WorkerConf object at 0x7fa2dad87f10>, <src.sla.WorkerConf object at 0x7fa2dad87890>, <src.sla.WorkerConf object at 0x7fa2dad87810>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  4 tenants and 0;0;0;2:
1
255
total_cost = 11
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  5 tenants and 0;0;0;2:
1
255
Getting next batch of experiments for 5 tenants
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '0021', '0200', '0101', '1000', '0111', '0011', '1010', '0030', '0120', '1001', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 2, 1]
not removed
[0, 2, 0, 0]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 1]
not removed
[0, 0, 1, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[0, 0, 1, 1]
removed
Going to 3 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0021', '0111', '0011', '0110', '0200', '0101', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 0, 3]
2
[0, 0, 1, 2]
3
[0, 1, 0, 2]
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
{'0': [[0, 2, 0], [0, 3, 0], [1, 2, 0]], '1': [[0, 2, 0]]}
{'0': [[2, 0, 0], [3, 0, 0], [2, 0, 1]], '1': [[2, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1], [0, 1, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
Elementstr: [[0,0,0,2];[0,0,0,3];[0,0,1,2];[0,1,0,2]]
Min replicacount:0 0 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;2:
Returning adaptive scaler for  5 tenants and 0;1;0;2:
1
255
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0021', '0111', '0011', '0110', '0200', '0101', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 6..5
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0021', '0111', '0011', '0110', '0200', '0101', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
Going to 3 tenants
Going to 6 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '0011', '0110', '0200', '0101', '0021', '0111', '1010', '0030', '0120', '1001', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 167
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad64610>, <src.sla.WorkerConf object at 0x7fa2dad64590>, <src.sla.WorkerConf object at 0x7fa2dad64950>, <src.sla.WorkerConf object at 0x7fa2dad644d0>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  5 tenants and 0;0;0;2:
1
255
total_cost = 14
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  6 tenants and 0;0;0;2:
1
255
Getting next batch of experiments for 6 tenants
Moving filtered samples in sorted combinations after the window
['0002', '0003', '0012', '0102', '0011', '0110', '0200', '0101', '0021', '0111', '1010', '0030', '0120', '1001', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 1, 1]
not removed
[0, 1, 1, 0]
removed
[0, 2, 0, 0]
removed
[0, 1, 0, 1]
removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 1, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
Going to 3 tenants
Starting at index 0 with window 4
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0011', '0021', '0111', '1000', '0110', '0200', '0101', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 2
min_conf_dec: 0
0
[0, 0, 0, 2]
1
[0, 0, 0, 3]
2
[0, 0, 1, 2]
3
[0, 1, 0, 2]
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
{'0': [[0, 2, 0], [0, 3, 0], [1, 2, 0]], '1': [[0, 2, 0]]}
{'0': [[2, 0, 0], [3, 0, 0], [2, 0, 1]], '1': [[2, 0, 0]]}
{'2': [[0, 0, 0], [0, 0, 1], [0, 1, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2], [0, 0, 3], [0, 1, 2], [1, 0, 2]]}
Elementstr: [[0,0,0,2];[0,0,0,3];[0,0,1,2];[0,1,0,2]]
Min replicacount:0 0 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;2:
Returning adaptive scaler for  6 tenants and 0;1;0;2:
1
255
['0002', '0003', '0012', '0102', '1010', '0030', '0120', '1001', '0011', '0021', '0111', '1000', '0110', '0200', '0101', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '176', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '176', 'Successfull': 'true'}]
Filtered results
[0, 0, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 1, 0, 2]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 7..6
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 176
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 176
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1733333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '176', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.17333333333333334', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad4c6d0>, <src.sla.WorkerConf object at 0x7fa2dad4cd90>, <src.sla.WorkerConf object at 0x7fa2dad4cfd0>, <src.sla.WorkerConf object at 0x7fa2dad4c950>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad91f10>, <src.sla.WorkerConf object at 0x7fa2dad91250>, <src.sla.WorkerConf object at 0x7fa2dad91cd0>, <src.sla.WorkerConf object at 0x7fa2dad91190>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
Moving filtered samples in sorted combinations after the window
['1010', '0030', '0120', '1001', '0021', '0111', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
[0, 2, 0, 1]
removed
[1, 1, 0, 0]
removed
[0, 0, 1, 3]
not removed
[0, 2, 1, 0]
removed
Going to 2 tenants
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[0, 0, 1, 3]
not removed
Going to 3 tenants
Going to 7 tenants
Starting at index 0 with window 1
['0013', '0021', '0111', '1010', '0030', '0120', '1001', '0022', '0103', '0201', '1100', '0300', '0210', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Getting next batch of experiments for 6 tenants
min_conf: 0 0 1 3
min_conf_dec: 0
0
[0, 0, 1, 3]
{'0': [[0, 1, 3]]}
{'0': [[1, 3, 0]]}
{'1': [[3, 0, 0]]}
{'3': [[0, 0, 1]]}
Next possible experiments for next nb of tenants
{'0': [[0, 1, 3]]}
Elementstr: [[0,0,1,3]]
Min replicacount:0 0 1 3
Max replicacount:0 0 1 3
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad91510>, <src.sla.WorkerConf object at 0x7fa2dad91090>, <src.sla.WorkerConf object at 0x7fa2dad91d10>, <src.sla.WorkerConf object at 0x7fa2dad91610>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad91b50>, <src.sla.WorkerConf object at 0x7fa2dad91490>, <src.sla.WorkerConf object at 0x7fa2dad919d0>, <src.sla.WorkerConf object at 0x7fa2dad91a90>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
total_cost = 15
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  7 tenants and 0;0;1;3:
1
255
Getting next batch of experiments for 7 tenants
Moving filtered samples in sorted combinations after the window
['0013', '0021', '0111', '1010', '0030', '0120', '1001', '0022', '0103', '0201', '1100', '0300', '0210', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 1, 3]
not removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[0, 2, 0, 1]
removed
Going to 2 tenants
[0, 0, 1, 3]
not removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 3 tenants
[0, 0, 1, 3]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 7 tenants
Starting at index 0 with window 3
['0013', '0022', '0103', '1100', '0021', '0111', '0300', '0210', '1010', '0030', '0120', '1001', '1002', '0031', '0201', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 1 3
min_conf_dec: 0
0
[0, 0, 1, 3]
1
[0, 0, 2, 2]
2
[0, 1, 0, 3]
{'0': [[0, 1, 3], [0, 2, 2], [1, 0, 3]]}
{'0': [[1, 3, 0], [2, 2, 0]], '1': [[0, 3, 0]]}
{'1': [[3, 0, 0]], '2': [[2, 0, 0]], '0': [[3, 0, 1]]}
{'3': [[0, 0, 1], [0, 1, 0]], '2': [[0, 0, 2]]}
Next possible experiments for next nb of tenants
{'0': [[0, 1, 3], [0, 2, 2], [1, 0, 3]]}
Elementstr: [[0,0,1,3];[0,0,2,2];[0,1,0,3]]
Min replicacount:0 0 1 3
Max replicacount:0 1 0 3
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 1e-09
[0, 1, 0, 3] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;0;1;3:
Returning adaptive scaler for  7 tenants and 0;0;1;3:
1
255
['0013', '0022', '0103', '1100', '0021', '0111', '0300', '0210', '1010', '0030', '0120', '1001', '1002', '0031', '0201', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '172', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '172', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 8..7
Moving filtered samples in sorted combinations after the window
['0013', '0022', '0103', '1100', '0021', '0111', '0300', '0210', '1010', '0030', '0120', '1001', '1002', '0031', '0201', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 2 with window 10
[0, 1, 0, 3]
not removed
[1, 1, 0, 0]
removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
[0, 3, 0, 0]
removed
[0, 2, 1, 0]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
Going to 2 tenants
[0, 1, 0, 3]
not removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
Going to 3 tenants
[0, 1, 0, 3]
not removed
Going to 7 tenants
Starting at index 2 with window 1
['0013', '0022', '0103', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '1001', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 172
[0, 1, 0, 3] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81910>, <src.sla.WorkerConf object at 0x7fa2dad81150>, <src.sla.WorkerConf object at 0x7fa2dad81d50>, <src.sla.WorkerConf object at 0x7fa2dad81690>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
total_cost = 17
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  8 tenants and 0;0;1;3:
1
255
Getting next batch of experiments for 8 tenants
Moving filtered samples in sorted combinations after the window
['0013', '0022', '0103', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '1001', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 1, 3]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 0, 2, 1]
not removed
[0, 1, 1, 1]
not removed
[1, 1, 0, 0]
removed
[0, 0, 3, 1]
not removed
[0, 2, 0, 1]
removed
[0, 3, 0, 0]
removed
Going to 2 tenants
[0, 0, 1, 3]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[0, 0, 3, 1]
removed
Going to 3 tenants
[0, 0, 1, 3]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
Going to 7 tenants
[0, 0, 1, 3]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
Going to 8 tenants
Starting at index 0 with window 4
['0013', '0022', '0103', '1002', '0210', '1010', '0030', '0120', '0021', '0111', '0031', '1001', '0112', '1100', '1011', '0201', '0300', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 1 3
min_conf_dec: 0
0
[0, 0, 1, 3]
1
[0, 0, 2, 2]
2
[0, 1, 0, 3]
3
[1, 0, 0, 2]
{'0': [[0, 1, 3], [0, 2, 2], [1, 0, 3]], '1': [[0, 0, 2]]}
{'0': [[1, 3, 0], [2, 2, 0], [0, 2, 1]], '1': [[0, 3, 0]]}
{'1': [[3, 0, 0]], '2': [[2, 0, 0]], '0': [[3, 0, 1], [2, 1, 0]]}
{'3': [[0, 0, 1], [0, 1, 0]], '2': [[0, 0, 2], [1, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 1, 3], [0, 2, 2], [1, 0, 3]], '1': [[0, 0, 2]]}
Elementstr: [[0,0,1,3];[0,0,2,2];[0,1,0,3]]
Min replicacount:0 0 1 3
Max replicacount:0 1 0 3
Elementstr: [[1,0,0,2]]
Min replicacount:1 0 0 2
Max replicacount:1 0 0 2
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 1e-09
[0, 1, 0, 3] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;0;1;3:
Returning adaptive scaler for  8 tenants and 0;0;1;3:
1
255
['0013', '0022', '0103', '1002', '0210', '1010', '0030', '0120', '0021', '0111', '0031', '1001', '0112', '1100', '1011', '0201', '0300', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '185', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '185', 'Successfull': 'true'}]
Filtered results
[0, 0, 2, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 3, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 1, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 1, 3]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 9..8
Moving filtered samples in sorted combinations after the window
['0022', '0103', '1002', '0210', '0031', '0112', '1011', '0300', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 2, 1, 0]
removed
[0, 0, 3, 1]
not removed
[0, 1, 1, 2]
not removed
[1, 0, 1, 1]
not removed
[0, 3, 0, 0]
removed
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[1, 0, 2, 0]
removed
Going to 2 tenants
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 0, 3, 1]
removed
[0, 1, 1, 2]
not removed
[1, 0, 1, 1]
removed
[0, 1, 2, 1]
removed
[0, 2, 0, 2]
not removed
Going to 3 tenants
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
Going to 9 tenants
Starting at index 1 with window 4
['0022', '0103', '1002', '0112', '0202', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0211', '1110', '0300', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 185
[0, 1, 0, 3] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2db888150>, <src.sla.WorkerConf object at 0x7fa2db888f10>, <src.sla.WorkerConf object at 0x7fa2db8885d0>, <src.sla.WorkerConf object at 0x7fa2db888190>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
total_cost = 19
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
Getting next batch of experiments for 9 tenants
Moving filtered samples in sorted combinations after the window
['0022', '0103', '1002', '0112', '0202', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0211', '1110', '0300', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 0, 3, 1]
not removed
[0, 2, 1, 0]
removed
[1, 0, 1, 1]
not removed
Going to 2 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 0, 3, 1]
removed
[1, 0, 1, 1]
removed
Going to 3 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
Starting at index 0 with window 5
['0022', '0103', '1002', '0112', '0202', '0121', '0130', '0211', '1110', '0300', '0031', '1011', '1101', '2000', '0023', '0210', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 2 2
min_conf_dec: 0
0
[0, 0, 2, 2]
1
[0, 1, 0, 3]
2
[1, 0, 0, 2]
3
[0, 1, 1, 2]
4
[0, 2, 0, 2]
{'0': [[0, 2, 2], [1, 0, 3], [1, 1, 2], [2, 0, 2]], '1': [[0, 0, 2]]}
{'0': [[2, 2, 0], [0, 2, 1]], '1': [[0, 3, 0], [1, 2, 0]], '2': [[0, 2, 0]]}
{'2': [[2, 0, 0]], '0': [[3, 0, 1], [2, 1, 0], [2, 0, 2]], '1': [[2, 0, 1]]}
{'2': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]], '3': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 2], [1, 0, 3], [1, 1, 2], [2, 0, 2]], '1': [[0, 0, 2]]}
Elementstr: [[0,0,2,2];[0,1,0,3];[0,1,1,2];[0,2,0,2]]
Min replicacount:0 0 2 2
Max replicacount:0 2 0 2
Elementstr: [[1,0,0,2]]
Min replicacount:1 0 0 2
Max replicacount:1 0 0 2
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 1e-09
[0, 1, 1, 2] -> 1e-09
[0, 2, 0, 2] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;1;0;3:
Returning adaptive scaler for  9 tenants and 0;1;0;3:
1
255
['0022', '0103', '1002', '0112', '0202', '0121', '0130', '0211', '1110', '0300', '0031', '1011', '1101', '2000', '0023', '0210', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}]
Filtered results
[0, 2, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 1, 0, 3]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..9
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0112', '0202', '0121', '0130', '0211', '1110', '0300', '0031', '1011', '1101', '2000', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 1, 3, 0]
removed
[0, 2, 1, 1]
not removed
[1, 1, 1, 0]
removed
[0, 3, 0, 0]
removed
[0, 0, 3, 1]
not removed
[1, 0, 1, 1]
not removed
Going to 2 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
[0, 0, 3, 1]
removed
[1, 0, 1, 1]
removed
Going to 3 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
Starting at index 1 with window 3
['0022', '1002', '0112', '0202', '1101', '2000', '0023', '0121', '0211', '0031', '1011', '0220', '0130', '1020', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 174
[0, 1, 1, 2] -> 1e-09
[0, 2, 0, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dd53d390>, <src.sla.WorkerConf object at 0x7fa2dd53d310>, <src.sla.WorkerConf object at 0x7fa2dd53d450>, <src.sla.WorkerConf object at 0x7fa2daf00fd0>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
total_cost = 21
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  10 tenants and 0;0;2;2:
1
255
Getting next batch of experiments for 10 tenants
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0112', '0202', '1101', '2000', '0023', '0121', '0211', '0031', '1011', '0220', '0130', '1020', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 2, 2]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 0, 2, 3]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
not removed
Going to 2 tenants
[0, 0, 2, 2]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 0, 2, 3]
removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
[0, 0, 3, 1]
removed
Going to 3 tenants
[0, 0, 2, 2]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[0, 0, 2, 2]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
[0, 0, 2, 2]
not removed
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 10 tenants
Starting at index 0 with window 4
['0022', '1002', '0112', '0202', '1011', '0220', '0130', '1020', '0023', '0121', '0211', '0031', '1101', '2000', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 2 2
min_conf_dec: 0
0
[0, 0, 2, 2]
1
[1, 0, 0, 2]
2
[0, 1, 1, 2]
3
[0, 2, 0, 2]
{'0': [[0, 2, 2], [1, 1, 2], [2, 0, 2]], '1': [[0, 0, 2]]}
{'0': [[2, 2, 0], [0, 2, 1]], '1': [[1, 2, 0]], '2': [[0, 2, 0]]}
{'2': [[2, 0, 0]], '0': [[2, 1, 0], [2, 0, 2]], '1': [[2, 0, 1]]}
{'2': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]]}
Next possible experiments for next nb of tenants
{'2': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]]}
Elementstr: [[0,0,2,2];[1,0,0,2];[0,1,1,2];[0,2,0,2]]
Min replicacount:0 0 2 2
Max replicacount:0 2 0 2
Generating new experiment. Saving results on Results/exp3/silver/10_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 1e-09
[0, 2, 0, 2] -> 1e-09
[0, 1, 1, 2] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;0;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.17333333333333334', 'config': '0', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;0;1;2:
Returning adaptive scaler for  1 tenants and 0;0;1;2:
1
255
['0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}
Starting at: 8
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 2..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 2
Returning adaptive scaler for  2 tenants and 0;0;0;2:
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 2
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 3
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 4
Returning adaptive scaler for  4 tenants and 0;0;0;2:
Returning adaptive scaler for  4 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 4
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;0;0;2:
Returning adaptive scaler for  5 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
Going to 2 tenants
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
removed
[0, 0, 2, 0]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 0]
removed
[0, 0, 0, 3]
not removed
[0, 2, 0, 0]
removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
removed
Going to 3 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 4 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 5 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 6 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 7 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 8 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 9 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 10 tenants
[0, 0, 0, 2]
not removed
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
Going to 11 tenants
Starting at index 0 with window 3
['0002', '0003', '0012', '0102', '0011', '0020', '0101', '1000', '0110', '1001', '0200', '0030', '0021', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Removing conf 0101 from left experiments in runtime manager
Removing conf 1000 from left experiments in runtime manager
Removing conf 0200 from left experiments in runtime manager
Removing conf 0021 from left experiments in runtime manager
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 156
[0, 0, 0, 2] -> 1e-09
[0, 1, 0, 1] -> 1e-09
[0, 0, 2, 1] -> 1e-09
[0, 0, 0, 3] -> 1e-09
[0, 2, 0, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2daddde50>, <src.sla.WorkerConf object at 0x7fa2daddd4d0>, <src.sla.WorkerConf object at 0x7fa2daddde10>, <src.sla.WorkerConf object at 0x7fa2daddd490>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2daddd150>, <src.sla.WorkerConf object at 0x7fa2dadddd50>, <src.sla.WorkerConf object at 0x7fa2daddd2d0>, <src.sla.WorkerConf object at 0x7fa2daddd890>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
['0002', '0011', '0003', '0012', '0021', '0102', '0110', '0030', '0200', '0111', '1010', '0120', '1001', '0020', '0101', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '236', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '236', 'Successfull': 'true'}]
Filtered results
Removing failed conf
[0, 0, 0, 2]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 3..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 3
Removing failed conf
[0, 0, 0, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 3
Moving filtered samples in sorted combinations after the window
['0003', '0012', '0102', '0111', '0101', '1000', '0110', '0011', '0021', '1010', '0030', '0120', '1001', '0200', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 0]
removed
[0, 0, 1, 1]
removed
[0, 0, 2, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
Going to 2 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 3 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 7 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 8 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 9 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 2
['0003', '0012', '0102', '0120', '1001', '0111', '0101', '1000', '0110', '0011', '0021', '1010', '0030', '0200', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 3 :
[0, 0, 1, 2]
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 4
Returning adaptive scaler for  4 tenants and 0;0;0;2:
Returning adaptive scaler for  4 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 4
Removing failed conf
[0, 0, 0, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 4
Moving filtered samples in sorted combinations after the window
['0003', '0012', '0102', '0021', '0200', '0101', '1000', '0111', '0011', '1010', '0030', '0120', '1001', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 2, 1]
removed
[0, 2, 0, 0]
removed
[0, 1, 0, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 1, 1]
removed
[0, 0, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
Going to 2 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 3 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 4 tenants
Going to 5 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 6 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 7 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 8 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 9 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 2
['0003', '0012', '0102', '0120', '1001', '0021', '0200', '0101', '1000', '0111', '0011', '1010', '0030', '0110', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 4 :
[0, 0, 1, 2]
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;0;0;2:
Returning adaptive scaler for  5 tenants and 0;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
Removing failed conf
[0, 0, 0, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 5
Moving filtered samples in sorted combinations after the window
['0003', '0012', '0102', '0011', '0110', '0200', '0101', '0021', '0111', '1010', '0030', '0120', '1001', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
[0, 0, 1, 1]
removed
[0, 1, 1, 0]
removed
[0, 2, 0, 0]
removed
[0, 1, 0, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
Going to 2 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 3 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 4 tenants
Going to 6 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 7 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 8 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 9 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 2
['0003', '0012', '0102', '0120', '1001', '0011', '0110', '0200', '0101', '0021', '0111', '1010', '0030', '1000', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 5 :
[0, 0, 1, 2]
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0011', '0003', '0012', '0021', '0102', '0110', '0030', '0200', '0111', '1010', '0120', '1001', '0020', '0101', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 0, 2, 1]
removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 2, 0, 0]
removed
[0, 1, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 1, 2, 0]
removed
Going to 2 tenants
Going to 3 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 4 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 5 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 6 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 7 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 8 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 9 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 0, 0, 3]
not removed
[0, 0, 1, 2]
not removed
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 3
['0011', '0003', '0012', '0102', '1001', '0020', '0021', '0101', '0110', '0030', '0200', '0111', '1010', '0120', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 167
[0, 0, 0, 2] -> 236
[0, 0, 0, 3] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81310>, <src.sla.WorkerConf object at 0x7fa2dad81710>, <src.sla.WorkerConf object at 0x7fa2dad81950>, <src.sla.WorkerConf object at 0x7fa2dad81410>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81c50>, <src.sla.WorkerConf object at 0x7fa2dad81f90>, <src.sla.WorkerConf object at 0x7fa2dad81b90>, <src.sla.WorkerConf object at 0x7fa2dad81f50>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  3 tenants and 0;0;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '2', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '2', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '2', 'score': '-0.17333333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;0;1;2:
Returning adaptive scaler for  3 tenants and 0;0;1;2:
1
255
['0003', '0012', '0102', '0120', '1001', '0111', '0101', '1000', '0110', '0011', '0021', '1010', '0030', '0200', '0020', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}]
Filtered results
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 1, 2]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 4..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 4
Returning adaptive scaler for  4 tenants and 0;0;1;2:
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 4
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 1, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 4
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 152
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0133333333333334', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.17333333333333334', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0133333333333334', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
NO SAMPLES LEFT, BUT THERE IS A SAMPLE THAT HAS BEEN EVALUATED
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 4 :
[0, 1, 0, 2]
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;0;1;2:
Returning adaptive scaler for  5 tenants and 0;0;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 1, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 5
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 167
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1133333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.17333333333333334', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1133333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
NO SAMPLES LEFT, BUT THERE IS A SAMPLE THAT HAS BEEN EVALUATED
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 5 :
[0, 1, 0, 2]
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 145
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 174
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 145
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 174
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.16', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '152', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-1', 'config': '0', 'score': '-1.0133333333333334', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '167', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-1', 'config': '0', 'score': '-1.1133333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;1;0;2:
Returning adaptive scaler for  4 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '162', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '162', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 5..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;1;0;2:
Returning adaptive scaler for  5 tenants and 0;1;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 162
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 162
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.08', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '162', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.17333333333333334', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad65450>, <src.sla.WorkerConf object at 0x7fa2dad65550>, <src.sla.WorkerConf object at 0x7fa2dad65e10>, <src.sla.WorkerConf object at 0x7fa2dad65850>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad5bad0>, <src.sla.WorkerConf object at 0x7fa2dad5b310>, <src.sla.WorkerConf object at 0x7fa2dad5bd10>, <src.sla.WorkerConf object at 0x7fa2dad5b1d0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad42750>, <src.sla.WorkerConf object at 0x7fa2dad425d0>, <src.sla.WorkerConf object at 0x7fa2dad42950>, <src.sla.WorkerConf object at 0x7fa2dad42d50>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 0, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
37
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 1, 0, 2]
Moving filtered samples in sorted combinations after the window
['0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 2, 0, 1]
removed
[1, 1, 0, 0]
removed
[0, 0, 1, 3]
not removed
[0, 2, 1, 0]
removed
Going to 2 tenants
[0, 0, 1, 3]
not removed
Going to 4 tenants
[0, 0, 1, 3]
not removed
Going to 7 tenants
[0, 0, 1, 3]
not removed
Going to 8 tenants
[0, 0, 1, 3]
not removed
Going to 9 tenants
[0, 0, 1, 3]
not removed
Going to 10 tenants
[0, 0, 1, 3]
not removed
Going to 11 tenants
Starting at index 0 with window 1
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 1
Getting next batch of experiments for 4 tenants
min_conf: 0 0 1 3
min_conf_dec: 0
0
[0, 0, 1, 3]
{'0': [[0, 1, 3]]}
{'0': [[1, 3, 0]]}
{'1': [[3, 0, 0]]}
{'3': [[0, 0, 1]]}
Next possible experiments for next nb of tenants
{'0': [[0, 1, 3]]}
Elementstr: [[0,0,1,3]]
Min replicacount:0 0 1 3
Max replicacount:0 0 1 3
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '167', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-1', 'config': '0', 'score': '-1.1133333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;2:
Returning adaptive scaler for  5 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 6..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 170
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 170
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 2] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1333333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.17333333333333334', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad30a50>, <src.sla.WorkerConf object at 0x7fa2dad30c50>, <src.sla.WorkerConf object at 0x7fa2dad30b10>, <src.sla.WorkerConf object at 0x7fa2dad30b50>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad9bbd0>, <src.sla.WorkerConf object at 0x7fa2dad9b110>, <src.sla.WorkerConf object at 0x7fa2dad9b490>, <src.sla.WorkerConf object at 0x7fa2dad9b790>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dd4c8410>, <src.sla.WorkerConf object at 0x7fa2dd4c8b90>, <src.sla.WorkerConf object at 0x7fa2dd4c85d0>, <src.sla.WorkerConf object at 0x7fa2dd4c8790>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 0, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
38
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 1, 0, 2]
Moving filtered samples in sorted combinations after the window
['0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 2, 0, 1]
removed
[1, 1, 0, 0]
removed
[0, 0, 1, 3]
not removed
[0, 2, 1, 0]
removed
Going to 2 tenants
[0, 0, 1, 3]
not removed
Going to 4 tenants
[0, 0, 1, 3]
not removed
Going to 5 tenants
Going to 6 tenants
[0, 0, 1, 3]
not removed
Going to 7 tenants
[0, 0, 1, 3]
not removed
Going to 8 tenants
[0, 0, 1, 3]
not removed
Going to 9 tenants
[0, 0, 1, 3]
not removed
Going to 10 tenants
[0, 0, 1, 3]
not removed
Going to 11 tenants
Starting at index 0 with window 1
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 1
Getting next batch of experiments for 5 tenants
min_conf: 0 0 1 3
min_conf_dec: 0
0
[0, 0, 1, 3]
{'0': [[0, 1, 3]]}
{'0': [[1, 3, 0]]}
{'1': [[3, 0, 0]]}
{'3': [[0, 0, 1]]}
Next possible experiments for next nb of tenants
{'0': [[0, 1, 3]]}
Elementstr: [[0,0,1,3]]
Min replicacount:0 0 1 3
Max replicacount:0 0 1 3
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;0;1;3:
Returning adaptive scaler for  6 tenants and 0;0;1;3:
1
255
['0013', '0021', '0111', '1010', '0030', '0120', '1001', '0022', '0103', '0201', '1100', '0300', '0210', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '161', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '161', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 7..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 161
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 161
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0733333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '161', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad91510>, <src.sla.WorkerConf object at 0x7fa2dad91090>, <src.sla.WorkerConf object at 0x7fa2dad91d10>, <src.sla.WorkerConf object at 0x7fa2dad91610>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad91b50>, <src.sla.WorkerConf object at 0x7fa2dad91490>, <src.sla.WorkerConf object at 0x7fa2dad919d0>, <src.sla.WorkerConf object at 0x7fa2dad91a90>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dadc0c90>, <src.sla.WorkerConf object at 0x7fa2dadc07d0>, <src.sla.WorkerConf object at 0x7fa2dadc0950>, <src.sla.WorkerConf object at 0x7fa2dadc0c50>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81ad0>, <src.sla.WorkerConf object at 0x7fa2dad87ed0>, <src.sla.WorkerConf object at 0x7fa2dad87190>, <src.sla.WorkerConf object at 0x7fa2dad87750>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 1, 3]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
38
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 0, 1, 3]
Moving filtered samples in sorted combinations after the window
['0021', '0111', '1010', '0030', '0120', '1001', '0022', '0103', '0201', '1100', '0300', '0210', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[0, 2, 0, 1]
removed
[1, 1, 0, 0]
removed
Going to 2 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 4 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 5 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 8 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 10 tenants
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
Going to 11 tenants
Starting at index 0 with window 2
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 2
Getting next batch of experiments for 6 tenants
min_conf: 0 0 2 2
min_conf_dec: 0
0
[0, 0, 2, 2]
1
[0, 1, 0, 3]
{'0': [[0, 2, 2], [1, 0, 3]]}
{'0': [[2, 2, 0]], '1': [[0, 3, 0]]}
{'2': [[2, 0, 0]], '0': [[3, 0, 1]]}
{'2': [[0, 0, 2]], '3': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 2], [1, 0, 3]]}
Elementstr: [[0,0,2,2];[0,1,0,3]]
Min replicacount:0 0 2 2
Max replicacount:0 1 0 3
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;0;3:
Returning adaptive scaler for  7 tenants and 0;1;0;3:
1
255
['0013', '0022', '0103', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '1001', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '159', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '159', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 8..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 172
[0, 1, 0, 3] -> 159
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 172
[0, 1, 0, 3] -> 159
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1466666666666667', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '172', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.06', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '159', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81910>, <src.sla.WorkerConf object at 0x7fa2dad81150>, <src.sla.WorkerConf object at 0x7fa2dad81d50>, <src.sla.WorkerConf object at 0x7fa2dad81690>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad58810>, <src.sla.WorkerConf object at 0x7fa2dad58b10>, <src.sla.WorkerConf object at 0x7fa2dad58e50>, <src.sla.WorkerConf object at 0x7fa2dad58a10>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad4c750>, <src.sla.WorkerConf object at 0x7fa2dad4cf50>, <src.sla.WorkerConf object at 0x7fa2dad4c3d0>, <src.sla.WorkerConf object at 0x7fa2dad4c310>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 1, 3], [0, 1, 0, 3]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
39
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
38
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 0, 1, 3]
Removing tipped over conf
[0, 1, 0, 3]
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '1001', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 2 with window 10
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
removed
[1, 1, 0, 0]
removed
[0, 0, 3, 1]
removed
[0, 2, 0, 1]
removed
[0, 3, 0, 0]
removed
[0, 2, 1, 0]
removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
Starting at index 12 with window 10
[1, 0, 0, 1]
removed
[0, 1, 1, 2]
not removed
[1, 0, 1, 1]
removed
[0, 1, 2, 1]
removed
[0, 2, 0, 2]
not removed
[1, 0, 2, 0]
removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 1, 3, 0]
removed
[0, 2, 1, 1]
removed
Going to 2 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 4 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 5 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 10 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 11 tenants
Starting at index 12 with window 2
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 12 with window 2
Getting next batch of experiments for 7 tenants
min_conf: 0 1 1 2
min_conf_dec: 12
12
[0, 1, 1, 2]
13
[0, 2, 0, 2]
{'0': [[1, 1, 2], [2, 0, 2]]}
{'1': [[1, 2, 0]], '2': [[0, 2, 0]]}
{'1': [[2, 0, 1]], '0': [[2, 0, 2]]}
{'2': [[0, 1, 1], [0, 2, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 1, 2], [2, 0, 2]]}
Elementstr: [[0,1,1,2];[0,2,0,2]]
Min replicacount:0 1 1 2
Max replicacount:0 2 0 2
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 2] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;1;0;3:
Returning adaptive scaler for  8 tenants and 0;1;0;3:
1
255
['0022', '0103', '1002', '0112', '0202', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0211', '1110', '0300', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 9..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0022', '0103', '1002', '0112', '0202', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0211', '1110', '0300', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 2 with window 10
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 0, 3, 1]
removed
[0, 2, 1, 0]
removed
[1, 0, 1, 1]
removed
[0, 1, 2, 1]
removed
[0, 1, 3, 0]
removed
Going to 2 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 4 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 5 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 10 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 11 tenants
Starting at index 2 with window 3
['0022', '0103', '1002', '0112', '0202', '0211', '1110', '0300', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2daf5a610>, <src.sla.WorkerConf object at 0x7fa2daf62450>, <src.sla.WorkerConf object at 0x7fa2daf62ed0>, <src.sla.WorkerConf object at 0x7fa2daf626d0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2db010890>, <src.sla.WorkerConf object at 0x7fa2db010f90>, <src.sla.WorkerConf object at 0x7fa2db010310>, <src.sla.WorkerConf object at 0x7fa2dae45410>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;1;1;2:
Returning adaptive scaler for  9 tenants and 0;1;1;2:
1
255
['0022', '1002', '0112', '0202', '1101', '2000', '0023', '0121', '0211', '0031', '1011', '0220', '0130', '1020', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0112', '0202', '1101', '2000', '0023', '0121', '0211', '0031', '1011', '0220', '0130', '1020', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 0, 2, 3]
not removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
[0, 0, 3, 1]
removed
[1, 0, 1, 1]
removed
Going to 2 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 0, 2, 3]
removed
Going to 4 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 5 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 9 tenants
Going to 10 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 3
['0022', '1002', '0112', '0202', '0220', '0130', '1020', '0023', '1101', '2000', '1110', '0121', '0211', '0031', '1011', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 174
[0, 1, 1, 2] -> 163
[0, 2, 0, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad4cc90>, <src.sla.WorkerConf object at 0x7fa2dad4ca10>, <src.sla.WorkerConf object at 0x7fa2dad4c4d0>, <src.sla.WorkerConf object at 0x7fa2dad4cb50>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad4c610>, <src.sla.WorkerConf object at 0x7fa2dad4ca50>, <src.sla.WorkerConf object at 0x7fa2dad4c390>, <src.sla.WorkerConf object at 0x7fa2dad4cb90>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;0;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '4', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;0;0;3:
Returning adaptive scaler for  1 tenants and 0;0;0;3:
1
255
['0002', '0003', '0012', '0102', '0011', '0020', '0101', '1000', '0110', '1001', '0200', '0030', '0021', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '165', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '165', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 2..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 2
Returning adaptive scaler for  2 tenants and 0;0;0;3:
Returning adaptive scaler for  2 tenants and 0;0;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 2
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 3
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 3
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 4
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 4
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;0;1;3:
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 1;0;0;2:
Returning adaptive scaler for  8 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 156
[0, 0, 0, 2] -> 1e-09
[0, 1, 0, 1] -> 1e-09
[0, 0, 2, 1] -> 1e-09
[0, 0, 0, 3] -> 165
[0, 2, 0, 0] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 156
[0, 0, 0, 2] -> 1e-09
[0, 1, 0, 1] -> 1e-09
[0, 0, 2, 1] -> 1e-09
[0, 0, 0, 3] -> 165
[0, 2, 0, 0] -> 1e-09
[1, 0, 0, 0] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.04', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.13333333333333333', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '3', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '4', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '165', 'Successfull': 'true'}, {'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.16', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.13333333333333333', 'best_score': '-0.13333333333333333', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2daddde50>, <src.sla.WorkerConf object at 0x7fa2daddd4d0>, <src.sla.WorkerConf object at 0x7fa2daddde10>, <src.sla.WorkerConf object at 0x7fa2daddd490>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2daddd150>, <src.sla.WorkerConf object at 0x7fa2dadddd50>, <src.sla.WorkerConf object at 0x7fa2daddd2d0>, <src.sla.WorkerConf object at 0x7fa2daddd890>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad3b190>, <src.sla.WorkerConf object at 0x7fa2dad3b210>, <src.sla.WorkerConf object at 0x7fa2dad3ba90>, <src.sla.WorkerConf object at 0x7fa2dad3bf50>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2daddded0>, <src.sla.WorkerConf object at 0x7fa2dadddd90>, <src.sla.WorkerConf object at 0x7fa2dadddbd0>, <src.sla.WorkerConf object at 0x7fa2daddd510>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 0, 3], [0, 0, 1, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
37
SCALE UP DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
6
4
3
3
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '1000', '0101', '0110', '0200', '0003', '0012', '1001', '0030', '0021', '1010', '0102', '0111', '0120', '1100', '0201', '0210', '0300', '0013', '0022', '1002', '0031', '1011', '1020', '2000', '0103', '0112', '0121', '1101', '0130', '1110', '0202', '0211', '0220', '1200', '0301', '0310', '0023', '1003', '0032', '1012', '1021', '2001', '1030', '2010', '0113', '0122', '1102', '0131', '1111', '1120', '2100', '0203', '0212', '0221', '1201', '0230', '1210', '0302', '0311', '0320', '1300', '0033', '1013', '1022', '2002', '1031', '2011', '2020', '3000', '0123', '1103', '0132', '1112', '1121', '2101', '1130', '2110', '0213', '0222', '1202', '0231', '1211', '1220', '2200', '0303', '0312', '0321', '1301', '0330', '1310', '1023', '2003', '1032', '2012', '2021', '3001', '2030', '3010', '0133', '1113', '1122', '2102', '1131', '2111', '2120', '3100', '0223', '1203', '0232', '1212', '1221', '2201', '1230', '2210', '0313', '0322', '1302', '0331', '1311', '1320', '2300', '1033', '2013', '2022', '3002', '2031', '3011', '3020', '1123', '2103', '1132', '2112', '2121', '3101', '2130', '3110', '0233', '1213', '1222', '2202', '1231', '2211', '2220', '3200', '0323', '1303', '0332', '1312', '1321', '2301', '1330', '2310', '2023', '3003', '2032', '3012', '3021', '3030', '1133', '2113', '2122', '3102', '2131', '3111', '3120', '1223', '2203', '1232', '2212', '2221', '3201', '2230', '3210', '0333', '1313', '1322', '2302', '1331', '2311', '2320', '3300', '2033', '3013', '3022', '3031', '2123', '3103', '2132', '3112', '3121', '3130', '1233', '2213', '2222', '3202', '2231', '3211', '3220', '1323', '2303', '1332', '2312', '2321', '3301', '2330', '3310', '3023', '3032', '2133', '3113', '3122', '3131', '2223', '3203', '2232', '3212', '3221', '3230', '1333', '2313', '2322', '3302', '2331', '3311', '3320', '3033', '3123', '3132', '2233', '3213', '3222', '3231', '2323', '3303', '2332', '3312', '3321', '3330', '3133', '3223', '3232', '2333', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 1
Going to 2 tenants
[0, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 8 with window 1
Going to 2 tenants
[0, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 9 with window 1
Going to 2 tenants
[1, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 10 with window 1
Going to 2 tenants
[0, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 11 with window 1
Going to 2 tenants
[0, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 12 with window 1
Going to 2 tenants
[1, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 13 with window 1
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 14 with window 1
Going to 2 tenants
[0, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 15 with window 1
Going to 2 tenants
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 16 with window 1
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 1
Going to 2 tenants
[0, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 18 with window 1
Going to 2 tenants
[0, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 19 with window 1
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 20 with window 1
Going to 2 tenants
[0, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 21 with window 1
Going to 2 tenants
[0, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 22 with window 1
Going to 2 tenants
[1, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 23 with window 1
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 24 with window 1
Going to 2 tenants
[1, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 25 with window 1
Going to 2 tenants
[1, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 26 with window 1
Going to 2 tenants
[2, 0, 0, 0]
SCALING INDEX = 3
removed
Starting at index 27 with window 1
Going to 2 tenants
[0, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 28 with window 1
Going to 2 tenants
[0, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 29 with window 1
Going to 2 tenants
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 30 with window 1
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 31 with window 1
Going to 2 tenants
[0, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 32 with window 1
Going to 2 tenants
[1, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 33 with window 1
Going to 2 tenants
[0, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 34 with window 1
Going to 2 tenants
[0, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 35 with window 1
Going to 2 tenants
[0, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 36 with window 1
Going to 2 tenants
[1, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 37 with window 1
Going to 2 tenants
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 38 with window 1
Going to 2 tenants
[0, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 39 with window 1
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 40 with window 1
Going to 2 tenants
[1, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 41 with window 1
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 42 with window 1
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 43 with window 1
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 44 with window 1
Going to 2 tenants
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 45 with window 1
Going to 2 tenants
[1, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 46 with window 1
Going to 2 tenants
[2, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 47 with window 1
Going to 2 tenants
[0, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 48 with window 1
Going to 2 tenants
[0, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 49 with window 1
Going to 2 tenants
[1, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 50 with window 1
Going to 2 tenants
[0, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 51 with window 1
Going to 2 tenants
[1, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 52 with window 1
Going to 2 tenants
[1, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 53 with window 1
Going to 2 tenants
[2, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 54 with window 1
Going to 2 tenants
[0, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 55 with window 1
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 56 with window 1
Going to 2 tenants
[0, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 1
Going to 2 tenants
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 58 with window 1
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 59 with window 1
Going to 2 tenants
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 60 with window 1
Going to 2 tenants
[0, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 61 with window 1
Going to 2 tenants
[0, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 62 with window 1
Going to 2 tenants
[0, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 63 with window 1
Going to 2 tenants
[1, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 64 with window 1
Going to 2 tenants
[0, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 65 with window 1
Going to 2 tenants
[1, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 66 with window 1
Going to 2 tenants
[1, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 67 with window 1
Going to 2 tenants
[2, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 68 with window 1
Going to 2 tenants
[1, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 69 with window 1
Going to 2 tenants
[2, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 70 with window 1
Going to 2 tenants
[2, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 71 with window 1
Going to 2 tenants
[3, 0, 0, 0]
SCALING INDEX = 3
removed
Starting at index 72 with window 1
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 73 with window 1
Going to 2 tenants
[1, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 74 with window 1
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 75 with window 1
Going to 2 tenants
[1, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 76 with window 1
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 1
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 78 with window 1
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 79 with window 1
Going to 2 tenants
[2, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 80 with window 1
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 81 with window 1
Going to 2 tenants
[0, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 82 with window 1
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 83 with window 1
Going to 2 tenants
[0, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 84 with window 1
Going to 2 tenants
[1, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 85 with window 1
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 86 with window 1
Going to 2 tenants
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 87 with window 1
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 88 with window 1
Going to 2 tenants
[0, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 89 with window 1
Going to 2 tenants
[0, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 90 with window 1
Going to 2 tenants
[1, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 91 with window 1
Going to 2 tenants
[0, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 92 with window 1
Going to 2 tenants
[1, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 93 with window 1
Going to 2 tenants
[1, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 94 with window 1
Going to 2 tenants
[2, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 95 with window 1
Going to 2 tenants
[1, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 96 with window 1
Going to 2 tenants
[2, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 97 with window 1
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 98 with window 1
Going to 2 tenants
[3, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 99 with window 1
Going to 2 tenants
[2, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 100 with window 1
Going to 2 tenants
[3, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 101 with window 1
Going to 2 tenants
[0, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 102 with window 1
Going to 2 tenants
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 103 with window 1
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 104 with window 1
Going to 2 tenants
[2, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 105 with window 1
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 106 with window 1
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 1
Going to 2 tenants
[2, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 108 with window 1
Going to 2 tenants
[3, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 109 with window 1
Going to 2 tenants
[0, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 110 with window 1
Going to 2 tenants
[1, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 111 with window 1
Going to 2 tenants
[0, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 112 with window 1
Going to 2 tenants
[1, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 113 with window 1
Going to 2 tenants
[1, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 114 with window 1
Going to 2 tenants
[2, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 115 with window 1
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 116 with window 1
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 117 with window 1
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 118 with window 1
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 119 with window 1
Going to 2 tenants
[1, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 120 with window 1
Going to 2 tenants
[0, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 121 with window 1
Going to 2 tenants
[1, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 122 with window 1
Going to 2 tenants
[1, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 123 with window 1
Going to 2 tenants
[2, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 124 with window 1
Going to 2 tenants
[1, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 125 with window 1
Going to 2 tenants
[2, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 126 with window 1
Going to 2 tenants
[2, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 127 with window 1
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 128 with window 1
Going to 2 tenants
[2, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 129 with window 1
Going to 2 tenants
[3, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 130 with window 1
Going to 2 tenants
[3, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 131 with window 1
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 132 with window 1
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 133 with window 1
Going to 2 tenants
[1, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 134 with window 1
Going to 2 tenants
[2, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 135 with window 1
Going to 2 tenants
[2, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 136 with window 1
Going to 2 tenants
[3, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 137 with window 1
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 138 with window 1
Going to 2 tenants
[3, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 139 with window 1
Going to 2 tenants
[0, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 140 with window 1
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 141 with window 1
Going to 2 tenants
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 142 with window 1
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 143 with window 1
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 144 with window 1
Going to 2 tenants
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 145 with window 1
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 146 with window 1
Going to 2 tenants
[3, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 147 with window 1
Going to 2 tenants
[0, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 148 with window 1
Going to 2 tenants
[1, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 149 with window 1
Going to 2 tenants
[0, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 150 with window 1
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 151 with window 1
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 152 with window 1
Going to 2 tenants
[2, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 153 with window 1
Going to 2 tenants
[1, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 154 with window 1
Going to 2 tenants
[2, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 155 with window 1
Going to 2 tenants
[2, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 156 with window 1
Going to 2 tenants
[3, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 1
Going to 2 tenants
[2, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 158 with window 1
Going to 2 tenants
[3, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 159 with window 1
Going to 2 tenants
[3, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 160 with window 1
Going to 2 tenants
[3, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 161 with window 1
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 162 with window 1
Going to 2 tenants
[2, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 163 with window 1
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 164 with window 1
Going to 2 tenants
[3, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 165 with window 1
Going to 2 tenants
[2, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 166 with window 1
Going to 2 tenants
[3, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 167 with window 1
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 168 with window 1
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 169 with window 1
Going to 2 tenants
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 170 with window 1
Going to 2 tenants
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 171 with window 1
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 172 with window 1
Going to 2 tenants
[2, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 173 with window 1
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 174 with window 1
Going to 2 tenants
[2, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 175 with window 1
Going to 2 tenants
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 176 with window 1
Going to 2 tenants
[0, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 177 with window 1
Going to 2 tenants
[1, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 178 with window 1
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 179 with window 1
Going to 2 tenants
[2, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 180 with window 1
Going to 2 tenants
[1, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 181 with window 1
Going to 2 tenants
[2, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 182 with window 1
Going to 2 tenants
[2, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 183 with window 1
Going to 2 tenants
[3, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 184 with window 1
Going to 2 tenants
[2, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 185 with window 1
Going to 2 tenants
[3, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 186 with window 1
Going to 2 tenants
[3, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 187 with window 1
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 188 with window 1
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 189 with window 1
Going to 2 tenants
[3, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 190 with window 1
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 191 with window 1
Going to 2 tenants
[3, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 192 with window 1
Going to 2 tenants
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 193 with window 1
Going to 2 tenants
[3, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 194 with window 1
Going to 2 tenants
[1, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 195 with window 1
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 196 with window 1
Going to 2 tenants
[2, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 197 with window 1
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 198 with window 1
Going to 2 tenants
[2, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 199 with window 1
Going to 2 tenants
[3, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 200 with window 1
Going to 2 tenants
[3, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 201 with window 1
Going to 2 tenants
[1, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 202 with window 1
Going to 2 tenants
[2, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 203 with window 1
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 204 with window 1
Going to 2 tenants
[2, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 205 with window 1
Going to 2 tenants
[2, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 206 with window 1
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 1
Going to 2 tenants
[2, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 208 with window 1
Going to 2 tenants
[3, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 209 with window 1
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 210 with window 1
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 211 with window 1
Going to 2 tenants
[2, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 212 with window 1
Going to 2 tenants
[3, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 213 with window 1
Going to 2 tenants
[3, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 214 with window 1
Going to 2 tenants
[3, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 215 with window 1
Going to 2 tenants
[2, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 216 with window 1
Going to 2 tenants
[3, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 217 with window 1
Going to 2 tenants
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 218 with window 1
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 219 with window 1
Going to 2 tenants
[3, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 220 with window 1
Going to 2 tenants
[3, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 221 with window 1
Going to 2 tenants
[1, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 222 with window 1
Going to 2 tenants
[2, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 223 with window 1
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 224 with window 1
Going to 2 tenants
[3, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 225 with window 1
Going to 2 tenants
[2, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 226 with window 1
Going to 2 tenants
[3, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 227 with window 1
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 228 with window 1
Going to 2 tenants
[3, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 229 with window 1
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 230 with window 1
Going to 2 tenants
[3, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 231 with window 1
Going to 2 tenants
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 232 with window 1
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 233 with window 1
Going to 2 tenants
[3, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 234 with window 1
Going to 2 tenants
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 235 with window 1
Going to 2 tenants
[2, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 236 with window 1
Going to 2 tenants
[3, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 237 with window 1
Going to 2 tenants
[2, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 238 with window 1
Going to 2 tenants
[3, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 239 with window 1
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 240 with window 1
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 241 with window 1
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 242 with window 1
Going to 2 tenants
[3, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 243 with window 1
Going to 2 tenants
[3, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 244 with window 1
Going to 2 tenants
[2, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 245 with window 1
Going to 2 tenants
[3, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 246 with window 1
Going to 2 tenants
[3, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 247 with window 1
Going to 2 tenants
[3, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 248 with window 1
Going to 2 tenants
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 249 with window 1
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 250 with window 1
Going to 2 tenants
[3, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 251 with window 1
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 252 with window 1
Going to 2 tenants
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
37
Passing over worker in previously failed scaling
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
36
SCALE UP DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '1000', '0101', '0110', '0200', '0003', '0012', '1001', '0030', '0021', '1010', '0102', '0111', '0120', '1100', '0201', '0210', '0300', '0013', '0022', '1002', '0031', '1011', '1020', '2000', '0103', '0112', '0121', '1101', '0130', '1110', '0202', '0211', '0220', '1200', '0301', '0310', '0023', '1003', '0032', '1012', '1021', '2001', '1030', '2010', '0113', '0122', '1102', '0131', '1111', '1120', '2100', '0203', '0212', '0221', '1201', '0230', '1210', '0302', '0311', '0320', '1300', '0033', '1013', '1022', '2002', '1031', '2011', '2020', '3000', '0123', '1103', '0132', '1112', '1121', '2101', '1130', '2110', '0213', '0222', '1202', '0231', '1211', '1220', '2200', '0303', '0312', '0321', '1301', '0330', '1310', '1023', '2003', '1032', '2012', '2021', '3001', '2030', '3010', '0133', '1113', '1122', '2102', '1131', '2111', '2120', '3100', '0223', '1203', '0232', '1212', '1221', '2201', '1230', '2210', '0313', '0322', '1302', '0331', '1311', '1320', '2300', '1033', '2013', '2022', '3002', '2031', '3011', '3020', '1123', '2103', '1132', '2112', '2121', '3101', '2130', '3110', '0233', '1213', '1222', '2202', '1231', '2211', '2220', '3200', '0323', '1303', '0332', '1312', '1321', '2301', '1330', '2310', '2023', '3003', '2032', '3012', '3021', '3030', '1133', '2113', '2122', '3102', '2131', '3111', '3120', '1223', '2203', '1232', '2212', '2221', '3201', '2230', '3210', '0333', '1313', '1322', '2302', '1331', '2311', '2320', '3300', '2033', '3013', '3022', '3031', '2123', '3103', '2132', '3112', '3121', '3130', '1233', '2213', '2222', '3202', '2231', '3211', '3220', '1323', '2303', '1332', '2312', '2321', '3301', '2330', '3310', '3023', '3032', '2133', '3113', '3122', '3131', '2223', '3203', '2232', '3212', '3221', '3230', '1333', '2313', '2322', '3302', '2331', '3311', '3320', '3033', '3123', '3132', '2233', '3213', '3222', '3231', '2323', '3303', '2332', '3312', '3321', '3330', '3133', '3223', '3232', '2333', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 8 with window 1
Going to 2 tenants
[0, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 9 with window 1
Going to 2 tenants
[1, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 10 with window 1
Going to 2 tenants
[0, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 11 with window 1
Going to 2 tenants
[0, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 12 with window 1
Going to 2 tenants
[1, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 13 with window 1
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 14 with window 1
Going to 2 tenants
[0, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 15 with window 1
Going to 2 tenants
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 16 with window 1
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 1
Going to 2 tenants
[0, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 18 with window 1
Going to 2 tenants
[0, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 19 with window 1
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 20 with window 1
Going to 2 tenants
[0, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 21 with window 1
Going to 2 tenants
[0, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 22 with window 1
Going to 2 tenants
[1, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 23 with window 1
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 24 with window 1
Going to 2 tenants
[1, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 25 with window 1
Going to 2 tenants
[1, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 26 with window 1
Going to 2 tenants
[2, 0, 0, 0]
SCALING INDEX = 3
removed
Starting at index 27 with window 1
Going to 2 tenants
[0, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 28 with window 1
Going to 2 tenants
[0, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 29 with window 1
Going to 2 tenants
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 30 with window 1
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 31 with window 1
Going to 2 tenants
[0, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 32 with window 1
Going to 2 tenants
[1, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 33 with window 1
Going to 2 tenants
[0, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 34 with window 1
Going to 2 tenants
[0, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 35 with window 1
Going to 2 tenants
[0, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 36 with window 1
Going to 2 tenants
[1, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 37 with window 1
Going to 2 tenants
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 38 with window 1
Going to 2 tenants
[0, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 39 with window 1
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 40 with window 1
Going to 2 tenants
[1, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 41 with window 1
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 42 with window 1
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 43 with window 1
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 44 with window 1
Going to 2 tenants
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 45 with window 1
Going to 2 tenants
[1, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 46 with window 1
Going to 2 tenants
[2, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 47 with window 1
Going to 2 tenants
[0, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 48 with window 1
Going to 2 tenants
[0, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 49 with window 1
Going to 2 tenants
[1, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 50 with window 1
Going to 2 tenants
[0, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 51 with window 1
Going to 2 tenants
[1, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 52 with window 1
Going to 2 tenants
[1, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 53 with window 1
Going to 2 tenants
[2, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 54 with window 1
Going to 2 tenants
[0, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 55 with window 1
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 56 with window 1
Going to 2 tenants
[0, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 1
Going to 2 tenants
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 58 with window 1
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 59 with window 1
Going to 2 tenants
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 60 with window 1
Going to 2 tenants
[0, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 61 with window 1
Going to 2 tenants
[0, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 62 with window 1
Going to 2 tenants
[0, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 63 with window 1
Going to 2 tenants
[1, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 64 with window 1
Going to 2 tenants
[0, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 65 with window 1
Going to 2 tenants
[1, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 66 with window 1
Going to 2 tenants
[1, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 67 with window 1
Going to 2 tenants
[2, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 68 with window 1
Going to 2 tenants
[1, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 69 with window 1
Going to 2 tenants
[2, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 70 with window 1
Going to 2 tenants
[2, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 71 with window 1
Going to 2 tenants
[3, 0, 0, 0]
SCALING INDEX = 3
removed
Starting at index 72 with window 1
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 73 with window 1
Going to 2 tenants
[1, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 74 with window 1
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 75 with window 1
Going to 2 tenants
[1, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 76 with window 1
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 1
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 78 with window 1
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 79 with window 1
Going to 2 tenants
[2, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 80 with window 1
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 81 with window 1
Going to 2 tenants
[0, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 82 with window 1
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 83 with window 1
Going to 2 tenants
[0, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 84 with window 1
Going to 2 tenants
[1, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 85 with window 1
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 86 with window 1
Going to 2 tenants
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 87 with window 1
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 88 with window 1
Going to 2 tenants
[0, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 89 with window 1
Going to 2 tenants
[0, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 90 with window 1
Going to 2 tenants
[1, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 91 with window 1
Going to 2 tenants
[0, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 92 with window 1
Going to 2 tenants
[1, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 93 with window 1
Going to 2 tenants
[1, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 94 with window 1
Going to 2 tenants
[2, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 95 with window 1
Going to 2 tenants
[1, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 96 with window 1
Going to 2 tenants
[2, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 97 with window 1
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 98 with window 1
Going to 2 tenants
[3, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 99 with window 1
Going to 2 tenants
[2, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 100 with window 1
Going to 2 tenants
[3, 0, 1, 0]
SCALING INDEX = 3
removed
Starting at index 101 with window 1
Going to 2 tenants
[0, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 102 with window 1
Going to 2 tenants
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 103 with window 1
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 104 with window 1
Going to 2 tenants
[2, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 105 with window 1
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 106 with window 1
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 1
Going to 2 tenants
[2, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 108 with window 1
Going to 2 tenants
[3, 1, 0, 0]
SCALING INDEX = 3
removed
Starting at index 109 with window 1
Going to 2 tenants
[0, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 110 with window 1
Going to 2 tenants
[1, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 111 with window 1
Going to 2 tenants
[0, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 112 with window 1
Going to 2 tenants
[1, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 113 with window 1
Going to 2 tenants
[1, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 114 with window 1
Going to 2 tenants
[2, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 115 with window 1
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 116 with window 1
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 117 with window 1
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 118 with window 1
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 119 with window 1
Going to 2 tenants
[1, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 120 with window 1
Going to 2 tenants
[0, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 121 with window 1
Going to 2 tenants
[1, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 122 with window 1
Going to 2 tenants
[1, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 123 with window 1
Going to 2 tenants
[2, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 124 with window 1
Going to 2 tenants
[1, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 125 with window 1
Going to 2 tenants
[2, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 126 with window 1
Going to 2 tenants
[2, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 127 with window 1
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 3
removed
Starting at index 128 with window 1
Going to 2 tenants
[2, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 129 with window 1
Going to 2 tenants
[3, 0, 1, 1]
SCALING INDEX = 3
removed
Starting at index 130 with window 1
Going to 2 tenants
[3, 0, 2, 0]
SCALING INDEX = 3
removed
Starting at index 131 with window 1
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 132 with window 1
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 133 with window 1
Going to 2 tenants
[1, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 134 with window 1
Going to 2 tenants
[2, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 135 with window 1
Going to 2 tenants
[2, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 136 with window 1
Going to 2 tenants
[3, 1, 0, 1]
SCALING INDEX = 3
removed
Starting at index 137 with window 1
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 138 with window 1
Going to 2 tenants
[3, 1, 1, 0]
SCALING INDEX = 3
removed
Starting at index 139 with window 1
Going to 2 tenants
[0, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 140 with window 1
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 141 with window 1
Going to 2 tenants
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 142 with window 1
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 143 with window 1
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 144 with window 1
Going to 2 tenants
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 145 with window 1
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 146 with window 1
Going to 2 tenants
[3, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 147 with window 1
Going to 2 tenants
[0, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 148 with window 1
Going to 2 tenants
[1, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 149 with window 1
Going to 2 tenants
[0, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 150 with window 1
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 151 with window 1
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 152 with window 1
Going to 2 tenants
[2, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 153 with window 1
Going to 2 tenants
[1, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 154 with window 1
Going to 2 tenants
[2, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 155 with window 1
Going to 2 tenants
[2, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 156 with window 1
Going to 2 tenants
[3, 0, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 1
Going to 2 tenants
[2, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 158 with window 1
Going to 2 tenants
[3, 0, 1, 2]
SCALING INDEX = 3
removed
Starting at index 159 with window 1
Going to 2 tenants
[3, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 160 with window 1
Going to 2 tenants
[3, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 161 with window 1
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 162 with window 1
Going to 2 tenants
[2, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 163 with window 1
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 164 with window 1
Going to 2 tenants
[3, 1, 0, 2]
SCALING INDEX = 3
removed
Starting at index 165 with window 1
Going to 2 tenants
[2, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 166 with window 1
Going to 2 tenants
[3, 1, 1, 1]
SCALING INDEX = 3
removed
Starting at index 167 with window 1
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 168 with window 1
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 169 with window 1
Going to 2 tenants
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 170 with window 1
Going to 2 tenants
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 171 with window 1
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 172 with window 1
Going to 2 tenants
[2, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 173 with window 1
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 174 with window 1
Going to 2 tenants
[2, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 175 with window 1
Going to 2 tenants
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 176 with window 1
Going to 2 tenants
[0, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 177 with window 1
Going to 2 tenants
[1, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 178 with window 1
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 179 with window 1
Going to 2 tenants
[2, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 180 with window 1
Going to 2 tenants
[1, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 181 with window 1
Going to 2 tenants
[2, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 182 with window 1
Going to 2 tenants
[2, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 183 with window 1
Going to 2 tenants
[3, 3, 0, 0]
SCALING INDEX = 3
removed
Starting at index 184 with window 1
Going to 2 tenants
[2, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 185 with window 1
Going to 2 tenants
[3, 0, 1, 3]
SCALING INDEX = 3
removed
Starting at index 186 with window 1
Going to 2 tenants
[3, 0, 2, 2]
SCALING INDEX = 3
removed
Starting at index 187 with window 1
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 188 with window 1
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 189 with window 1
Going to 2 tenants
[3, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 190 with window 1
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 191 with window 1
Going to 2 tenants
[3, 1, 1, 2]
SCALING INDEX = 3
removed
Starting at index 192 with window 1
Going to 2 tenants
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 193 with window 1
Going to 2 tenants
[3, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 194 with window 1
Going to 2 tenants
[1, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 195 with window 1
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 196 with window 1
Going to 2 tenants
[2, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 197 with window 1
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 198 with window 1
Going to 2 tenants
[2, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 199 with window 1
Going to 2 tenants
[3, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 200 with window 1
Going to 2 tenants
[3, 2, 2, 0]
SCALING INDEX = 3
removed
Starting at index 201 with window 1
Going to 2 tenants
[1, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 202 with window 1
Going to 2 tenants
[2, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 203 with window 1
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 204 with window 1
Going to 2 tenants
[2, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 205 with window 1
Going to 2 tenants
[2, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 206 with window 1
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 1
Going to 2 tenants
[2, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 208 with window 1
Going to 2 tenants
[3, 3, 1, 0]
SCALING INDEX = 3
removed
Starting at index 209 with window 1
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 3
removed
Starting at index 210 with window 1
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 211 with window 1
Going to 2 tenants
[2, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 212 with window 1
Going to 2 tenants
[3, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 213 with window 1
Going to 2 tenants
[3, 1, 2, 2]
SCALING INDEX = 3
removed
Starting at index 214 with window 1
Going to 2 tenants
[3, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 215 with window 1
Going to 2 tenants
[2, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 216 with window 1
Going to 2 tenants
[3, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 217 with window 1
Going to 2 tenants
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 218 with window 1
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
Starting at index 219 with window 1
Going to 2 tenants
[3, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 220 with window 1
Going to 2 tenants
[3, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 221 with window 1
Going to 2 tenants
[1, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 222 with window 1
Going to 2 tenants
[2, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 223 with window 1
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 224 with window 1
Going to 2 tenants
[3, 3, 0, 2]
SCALING INDEX = 3
removed
Starting at index 225 with window 1
Going to 2 tenants
[2, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 226 with window 1
Going to 2 tenants
[3, 3, 1, 1]
SCALING INDEX = 3
removed
Starting at index 227 with window 1
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 3
removed
Starting at index 228 with window 1
Going to 2 tenants
[3, 0, 3, 3]
SCALING INDEX = 3
removed
Starting at index 229 with window 1
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 230 with window 1
Going to 2 tenants
[3, 1, 3, 2]
SCALING INDEX = 3
removed
Starting at index 231 with window 1
Going to 2 tenants
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 232 with window 1
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
Starting at index 233 with window 1
Going to 2 tenants
[3, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 234 with window 1
Going to 2 tenants
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 235 with window 1
Going to 2 tenants
[2, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 236 with window 1
Going to 2 tenants
[3, 3, 0, 3]
SCALING INDEX = 3
removed
Starting at index 237 with window 1
Going to 2 tenants
[2, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 238 with window 1
Going to 2 tenants
[3, 3, 1, 2]
SCALING INDEX = 3
removed
Starting at index 239 with window 1
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 3
removed
Starting at index 240 with window 1
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 241 with window 1
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
Starting at index 242 with window 1
Going to 2 tenants
[3, 2, 2, 3]
SCALING INDEX = 3
removed
Starting at index 243 with window 1
Going to 2 tenants
[3, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 244 with window 1
Going to 2 tenants
[2, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 245 with window 1
Going to 2 tenants
[3, 3, 1, 3]
SCALING INDEX = 3
removed
Starting at index 246 with window 1
Going to 2 tenants
[3, 3, 2, 2]
SCALING INDEX = 3
removed
Starting at index 247 with window 1
Going to 2 tenants
[3, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 248 with window 1
Going to 2 tenants
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 249 with window 1
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 250 with window 1
Going to 2 tenants
[3, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 251 with window 1
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 3
removed
Starting at index 252 with window 1
Going to 2 tenants
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
36
Passing over worker in previously failed scaling
SCALE UP DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '1000', '0101', '0020', '0110', '0200', '0003', '0012', '1001', '0102', '0021', '1010', '0111', '1100', '0201', '0030', '0120', '0210', '0300', '0013', '1002', '0103', '0022', '1011', '2000', '0112', '1101', '0202', '0031', '1020', '0121', '1110', '0211', '1200', '0301', '1003', '0130', '0220', '0310', '0023', '1012', '2001', '0113', '1102', '0203', '0032', '1021', '2010', '0122', '1111', '2100', '0212', '1201', '0302', '1030', '0131', '1120', '0221', '1210', '0311', '1300', '1013', '2002', '1103', '0230', '0320', '0033', '1022', '2011', '3000', '0123', '1112', '2101', '0213', '1202', '0303', '1031', '2020', '0132', '1121', '2110', '0222', '1211', '2200', '0312', '1301', '2003', '1130', '0231', '1220', '0321', '1310', '1023', '2012', '3001', '1113', '2102', '1203', '0330', '1032', '2021', '3010', '0133', '1122', '2111', '3100', '0223', '1212', '2201', '0313', '1302', '2030', '1131', '2120', '0232', '1221', '2210', '0322', '1311', '2300', '2013', '3002', '2103', '1230', '0331', '1320', '1033', '2022', '3011', '1123', '2112', '3101', '1213', '2202', '1303', '2031', '3020', '1132', '2121', '3110', '0233', '1222', '2211', '3200', '0323', '1312', '2301', '3003', '2130', '1231', '2220', '0332', '1321', '2310', '2023', '3012', '2113', '3102', '2203', '1330', '2032', '3021', '1133', '2122', '3111', '1223', '2212', '3201', '1313', '2302', '3030', '2131', '3120', '1232', '2221', '3210', '0333', '1322', '2311', '3300', '3013', '3103', '2230', '1331', '2320', '2033', '3022', '2123', '3112', '2213', '3202', '2303', '3031', '2132', '3121', '1233', '2222', '3211', '1323', '2312', '3301', '3130', '2231', '3220', '1332', '2321', '3310', '3023', '3113', '3203', '2330', '3032', '2133', '3122', '2223', '3212', '2313', '3302', '3131', '2232', '3221', '1333', '2322', '3311', '3230', '2331', '3320', '3033', '3123', '3213', '3303', '3132', '2233', '3222', '2323', '3312', '3231', '2332', '3321', '3330', '3133', '3223', '3313', '3232', '2333', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 8 with window 1
Going to 2 tenants
[0, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 9 with window 1
Going to 2 tenants
[1, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 10 with window 1
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 11 with window 1
Going to 2 tenants
[0, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 12 with window 1
Going to 2 tenants
[1, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 13 with window 1
Going to 2 tenants
[0, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 14 with window 1
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 15 with window 1
Going to 2 tenants
[0, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 16 with window 1
Going to 2 tenants
[0, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 17 with window 1
Going to 2 tenants
[0, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 18 with window 1
Going to 2 tenants
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 1
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 20 with window 1
Going to 2 tenants
[0, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 21 with window 1
Going to 2 tenants
[1, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 22 with window 1
Going to 2 tenants
[0, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 23 with window 1
Going to 2 tenants
[0, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 24 with window 1
Going to 2 tenants
[1, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 25 with window 1
Going to 2 tenants
[2, 0, 0, 0]
SCALING INDEX = 2
removed
Starting at index 26 with window 1
Going to 2 tenants
[0, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 27 with window 1
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 28 with window 1
Going to 2 tenants
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 1
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 30 with window 1
Going to 2 tenants
[1, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 31 with window 1
Going to 2 tenants
[0, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 32 with window 1
Going to 2 tenants
[1, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 33 with window 1
Going to 2 tenants
[0, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 34 with window 1
Going to 2 tenants
[1, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 35 with window 1
Going to 2 tenants
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 36 with window 1
Going to 2 tenants
[1, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 37 with window 1
Going to 2 tenants
[0, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 38 with window 1
Going to 2 tenants
[0, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 39 with window 1
Going to 2 tenants
[0, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 40 with window 1
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 41 with window 1
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 42 with window 1
Going to 2 tenants
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 43 with window 1
Going to 2 tenants
[0, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 44 with window 1
Going to 2 tenants
[1, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 45 with window 1
Going to 2 tenants
[0, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 46 with window 1
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 47 with window 1
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 48 with window 1
Going to 2 tenants
[2, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 49 with window 1
Going to 2 tenants
[0, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 50 with window 1
Going to 2 tenants
[1, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 51 with window 1
Going to 2 tenants
[2, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 52 with window 1
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 53 with window 1
Going to 2 tenants
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 54 with window 1
Going to 2 tenants
[0, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 55 with window 1
Going to 2 tenants
[1, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 56 with window 1
Going to 2 tenants
[0, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 57 with window 1
Going to 2 tenants
[1, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 58 with window 1
Going to 2 tenants
[0, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 1
Going to 2 tenants
[1, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 60 with window 1
Going to 2 tenants
[0, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 61 with window 1
Going to 2 tenants
[1, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 62 with window 1
Going to 2 tenants
[1, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 63 with window 1
Going to 2 tenants
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 64 with window 1
Going to 2 tenants
[1, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 65 with window 1
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 66 with window 1
Going to 2 tenants
[0, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 67 with window 1
Going to 2 tenants
[0, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 68 with window 1
Going to 2 tenants
[1, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 1
Going to 2 tenants
[2, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 70 with window 1
Going to 2 tenants
[3, 0, 0, 0]
SCALING INDEX = 2
removed
Starting at index 71 with window 1
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 72 with window 1
Going to 2 tenants
[1, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 73 with window 1
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 74 with window 1
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 75 with window 1
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 76 with window 1
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 77 with window 1
Going to 2 tenants
[1, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 78 with window 1
Going to 2 tenants
[2, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 79 with window 1
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 80 with window 1
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 81 with window 1
Going to 2 tenants
[2, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 82 with window 1
Going to 2 tenants
[0, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 83 with window 1
Going to 2 tenants
[1, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 84 with window 1
Going to 2 tenants
[2, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 85 with window 1
Going to 2 tenants
[0, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 86 with window 1
Going to 2 tenants
[1, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 87 with window 1
Going to 2 tenants
[2, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 88 with window 1
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 89 with window 1
Going to 2 tenants
[0, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 90 with window 1
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 91 with window 1
Going to 2 tenants
[0, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 92 with window 1
Going to 2 tenants
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 93 with window 1
Going to 2 tenants
[1, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 94 with window 1
Going to 2 tenants
[2, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 95 with window 1
Going to 2 tenants
[3, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 96 with window 1
Going to 2 tenants
[1, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 97 with window 1
Going to 2 tenants
[2, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 98 with window 1
Going to 2 tenants
[1, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 99 with window 1
Going to 2 tenants
[0, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 100 with window 1
Going to 2 tenants
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 101 with window 1
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 102 with window 1
Going to 2 tenants
[3, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 103 with window 1
Going to 2 tenants
[0, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 104 with window 1
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 105 with window 1
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 106 with window 1
Going to 2 tenants
[3, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 107 with window 1
Going to 2 tenants
[0, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 108 with window 1
Going to 2 tenants
[1, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 109 with window 1
Going to 2 tenants
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 110 with window 1
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 111 with window 1
Going to 2 tenants
[1, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 112 with window 1
Going to 2 tenants
[2, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 113 with window 1
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 114 with window 1
Going to 2 tenants
[2, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 115 with window 1
Going to 2 tenants
[0, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 116 with window 1
Going to 2 tenants
[1, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 117 with window 1
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 118 with window 1
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 119 with window 1
Going to 2 tenants
[1, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 120 with window 1
Going to 2 tenants
[2, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 121 with window 1
Going to 2 tenants
[2, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 122 with window 1
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 123 with window 1
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 124 with window 1
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 125 with window 1
Going to 2 tenants
[0, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 126 with window 1
Going to 2 tenants
[1, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 127 with window 1
Going to 2 tenants
[1, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 128 with window 1
Going to 2 tenants
[2, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 129 with window 1
Going to 2 tenants
[3, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 130 with window 1
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 131 with window 1
Going to 2 tenants
[2, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 132 with window 1
Going to 2 tenants
[3, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 133 with window 1
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 134 with window 1
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 135 with window 1
Going to 2 tenants
[1, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 136 with window 1
Going to 2 tenants
[2, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 137 with window 1
Going to 2 tenants
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 138 with window 1
Going to 2 tenants
[1, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 139 with window 1
Going to 2 tenants
[2, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 140 with window 1
Going to 2 tenants
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 141 with window 1
Going to 2 tenants
[0, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 142 with window 1
Going to 2 tenants
[1, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 143 with window 1
Going to 2 tenants
[2, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 144 with window 1
Going to 2 tenants
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 145 with window 1
Going to 2 tenants
[0, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 146 with window 1
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 147 with window 1
Going to 2 tenants
[2, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 148 with window 1
Going to 2 tenants
[3, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 149 with window 1
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 150 with window 1
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 151 with window 1
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 152 with window 1
Going to 2 tenants
[0, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 153 with window 1
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 154 with window 1
Going to 2 tenants
[2, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 155 with window 1
Going to 2 tenants
[2, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 156 with window 1
Going to 2 tenants
[3, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 157 with window 1
Going to 2 tenants
[2, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 158 with window 1
Going to 2 tenants
[3, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 159 with window 1
Going to 2 tenants
[2, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 160 with window 1
Going to 2 tenants
[1, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 161 with window 1
Going to 2 tenants
[2, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 162 with window 1
Going to 2 tenants
[3, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 163 with window 1
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 164 with window 1
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 165 with window 1
Going to 2 tenants
[3, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 166 with window 1
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 167 with window 1
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 168 with window 1
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 169 with window 1
Going to 2 tenants
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 170 with window 1
Going to 2 tenants
[2, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 171 with window 1
Going to 2 tenants
[3, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 172 with window 1
Going to 2 tenants
[2, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 173 with window 1
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 174 with window 1
Going to 2 tenants
[1, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 175 with window 1
Going to 2 tenants
[2, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 176 with window 1
Going to 2 tenants
[3, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 177 with window 1
Going to 2 tenants
[0, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 178 with window 1
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 179 with window 1
Going to 2 tenants
[2, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 180 with window 1
Going to 2 tenants
[3, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 181 with window 1
Going to 2 tenants
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 182 with window 1
Going to 2 tenants
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 183 with window 1
Going to 2 tenants
[2, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 184 with window 1
Going to 2 tenants
[1, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 185 with window 1
Going to 2 tenants
[2, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 186 with window 1
Going to 2 tenants
[2, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 187 with window 1
Going to 2 tenants
[3, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 188 with window 1
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 1
Going to 2 tenants
[3, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 190 with window 1
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 191 with window 1
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 192 with window 1
Going to 2 tenants
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 193 with window 1
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 194 with window 1
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 195 with window 1
Going to 2 tenants
[3, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 196 with window 1
Going to 2 tenants
[1, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 197 with window 1
Going to 2 tenants
[2, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 198 with window 1
Going to 2 tenants
[3, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 199 with window 1
Going to 2 tenants
[1, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 200 with window 1
Going to 2 tenants
[2, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 201 with window 1
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 202 with window 1
Going to 2 tenants
[3, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 203 with window 1
Going to 2 tenants
[2, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 204 with window 1
Going to 2 tenants
[3, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 205 with window 1
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 206 with window 1
Going to 2 tenants
[2, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 207 with window 1
Going to 2 tenants
[3, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 208 with window 1
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 1
Going to 2 tenants
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 210 with window 1
Going to 2 tenants
[3, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 211 with window 1
Going to 2 tenants
[2, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 212 with window 1
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 213 with window 1
Going to 2 tenants
[2, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 214 with window 1
Going to 2 tenants
[3, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 215 with window 1
Going to 2 tenants
[2, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 216 with window 1
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 217 with window 1
Going to 2 tenants
[2, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 218 with window 1
Going to 2 tenants
[3, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 1
Going to 2 tenants
[3, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 220 with window 1
Going to 2 tenants
[2, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 221 with window 1
Going to 2 tenants
[3, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 222 with window 1
Going to 2 tenants
[1, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 223 with window 1
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 224 with window 1
Going to 2 tenants
[3, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 225 with window 1
Going to 2 tenants
[3, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 226 with window 1
Going to 2 tenants
[2, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 227 with window 1
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 228 with window 1
Going to 2 tenants
[3, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 229 with window 1
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 230 with window 1
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 231 with window 1
Going to 2 tenants
[3, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 232 with window 1
Going to 2 tenants
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 233 with window 1
Going to 2 tenants
[2, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 234 with window 1
Going to 2 tenants
[3, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 235 with window 1
Going to 2 tenants
[2, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 236 with window 1
Going to 2 tenants
[3, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 237 with window 1
Going to 2 tenants
[3, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 238 with window 1
Going to 2 tenants
[2, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 239 with window 1
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 240 with window 1
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 241 with window 1
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 242 with window 1
Going to 2 tenants
[3, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 243 with window 1
Going to 2 tenants
[3, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 244 with window 1
Going to 2 tenants
[3, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 245 with window 1
Going to 2 tenants
[2, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 246 with window 1
Going to 2 tenants
[3, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 247 with window 1
Going to 2 tenants
[3, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 248 with window 1
Going to 2 tenants
[3, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 1
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 250 with window 1
Going to 2 tenants
[3, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 251 with window 1
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 252 with window 1
Going to 2 tenants
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
36
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 0, 0, 3]
Removing tipped over conf
[0, 0, 1, 2]
Moving filtered samples in sorted combinations after the window
['0002', '0011', '1000', '0101', '0020', '0110', '0200', '1001', '0102', '0021', '1010', '0111', '1100', '0201', '0030', '0120', '0210', '0300', '0013', '1002', '0103', '0022', '1011', '2000', '0112', '1101', '0202', '0031', '1020', '0121', '1110', '0211', '1200', '0301', '1003', '0130', '0220', '0310', '0023', '1012', '2001', '0113', '1102', '0203', '0032', '1021', '2010', '0122', '1111', '2100', '0212', '1201', '0302', '1030', '0131', '1120', '0221', '1210', '0311', '1300', '1013', '2002', '1103', '0230', '0320', '0033', '1022', '2011', '3000', '0123', '1112', '2101', '0213', '1202', '0303', '1031', '2020', '0132', '1121', '2110', '0222', '1211', '2200', '0312', '1301', '2003', '1130', '0231', '1220', '0321', '1310', '1023', '2012', '3001', '1113', '2102', '1203', '0330', '1032', '2021', '3010', '0133', '1122', '2111', '3100', '0223', '1212', '2201', '0313', '1302', '2030', '1131', '2120', '0232', '1221', '2210', '0322', '1311', '2300', '2013', '3002', '2103', '1230', '0331', '1320', '1033', '2022', '3011', '1123', '2112', '3101', '1213', '2202', '1303', '2031', '3020', '1132', '2121', '3110', '0233', '1222', '2211', '3200', '0323', '1312', '2301', '3003', '2130', '1231', '2220', '0332', '1321', '2310', '2023', '3012', '2113', '3102', '2203', '1330', '2032', '3021', '1133', '2122', '3111', '1223', '2212', '3201', '1313', '2302', '3030', '2131', '3120', '1232', '2221', '3210', '0333', '1322', '2311', '3300', '3013', '3103', '2230', '1331', '2320', '2033', '3022', '2123', '3112', '2213', '3202', '2303', '3031', '2132', '3121', '1233', '2222', '3211', '1323', '2312', '3301', '3130', '2231', '3220', '1332', '2321', '3310', '3023', '3113', '3203', '2330', '3032', '2133', '3122', '2223', '3212', '2313', '3302', '3131', '2232', '3221', '1333', '2322', '3311', '3230', '2331', '3320', '3033', '3123', '3213', '3303', '3132', '2233', '3222', '2323', '3312', '3231', '2332', '3321', '3330', '3133', '3223', '3313', '3232', '2333', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
Going to 2 tenants
[0, 0, 1, 1]
removed
[1, 0, 0, 0]
removed
[0, 1, 0, 1]
removed
[0, 0, 2, 0]
removed
[0, 1, 1, 0]
removed
[0, 2, 0, 0]
removed
[1, 0, 0, 1]
removed
[0, 1, 0, 2]
not removed
[0, 0, 2, 1]
removed
[1, 0, 1, 0]
removed
Going to 3 tenants
[0, 1, 0, 2]
not removed
Going to 4 tenants
[0, 1, 0, 2]
not removed
Going to 5 tenants
[0, 1, 0, 2]
not removed
Going to 6 tenants
[0, 1, 0, 2]
not removed
Going to 7 tenants
[0, 1, 0, 2]
not removed
Going to 8 tenants
[0, 1, 0, 2]
not removed
Going to 9 tenants
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 1
['0002', '0102', '0011', '1000', '0101', '0020', '0110', '0200', '1001', '0111', '0021', '1010', '1100', '0201', '0030', '0120', '0210', '0300', '0013', '1002', '0103', '0022', '1011', '2000', '0112', '1101', '0202', '0031', '1020', '0121', '1110', '0211', '1200', '0301', '1003', '0130', '0220', '0310', '0023', '1012', '2001', '0113', '1102', '0203', '0032', '1021', '2010', '0122', '1111', '2100', '0212', '1201', '0302', '1030', '0131', '1120', '0221', '1210', '0311', '1300', '1013', '2002', '1103', '0230', '0320', '0033', '1022', '2011', '3000', '0123', '1112', '2101', '0213', '1202', '0303', '1031', '2020', '0132', '1121', '2110', '0222', '1211', '2200', '0312', '1301', '2003', '1130', '0231', '1220', '0321', '1310', '1023', '2012', '3001', '1113', '2102', '1203', '0330', '1032', '2021', '3010', '0133', '1122', '2111', '3100', '0223', '1212', '2201', '0313', '1302', '2030', '1131', '2120', '0232', '1221', '2210', '0322', '1311', '2300', '2013', '3002', '2103', '1230', '0331', '1320', '1033', '2022', '3011', '1123', '2112', '3101', '1213', '2202', '1303', '2031', '3020', '1132', '2121', '3110', '0233', '1222', '2211', '3200', '0323', '1312', '2301', '3003', '2130', '1231', '2220', '0332', '1321', '2310', '2023', '3012', '2113', '3102', '2203', '1330', '2032', '3021', '1133', '2122', '3111', '1223', '2212', '3201', '1313', '2302', '3030', '2131', '3120', '1232', '2221', '3210', '0333', '1322', '2311', '3300', '3013', '3103', '2230', '1331', '2320', '2033', '3022', '2123', '3112', '2213', '3202', '2303', '3031', '2132', '3121', '1233', '2222', '3211', '1323', '2312', '3301', '3130', '2231', '3220', '1332', '2321', '3310', '3023', '3113', '3203', '2330', '3032', '2133', '3122', '2223', '3212', '2313', '3302', '3131', '2232', '3221', '1333', '2322', '3311', '3230', '2331', '3320', '3033', '3123', '3213', '3303', '3132', '2233', '3222', '2323', '3312', '3231', '2332', '3321', '3330', '3133', '3223', '3313', '3232', '2333', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 1
Getting next batch of experiments for 1 tenants
min_conf: 0 1 0 2
min_conf_dec: 1
1
[0, 1, 0, 2]
{'0': [[1, 0, 2]]}
{'1': [[0, 2, 0]]}
{'0': [[2, 0, 1]]}
{'2': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 2]]}
Elementstr: [[0,1,0,2]]
Min replicacount:0 1 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;0;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '2', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;0;0;3:
Returning adaptive scaler for  2 tenants and 0;0;0;3:
1
255
['0011', '0003', '0012', '0102', '1001', '0020', '0021', '0101', '0110', '0030', '0200', '0111', '1010', '0120', '1000', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 3..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 3
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 3
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 4
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 4
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 5
Returning adaptive scaler for  5 tenants and 0;0;1;3:
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 5
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 6
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
REMOVING CONFS FOR NB OF TENANTS: 6
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 1;0;0;2:
Returning adaptive scaler for  8 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 167
[0, 0, 0, 2] -> 236
[0, 0, 0, 3] -> 170
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 167
[0, 0, 0, 2] -> 236
[0, 0, 0, 3] -> 170
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1133333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.5733333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '236', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1333333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '170', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81310>, <src.sla.WorkerConf object at 0x7fa2dad81710>, <src.sla.WorkerConf object at 0x7fa2dad81950>, <src.sla.WorkerConf object at 0x7fa2dad81410>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad81c50>, <src.sla.WorkerConf object at 0x7fa2dad81f90>, <src.sla.WorkerConf object at 0x7fa2dad81b90>, <src.sla.WorkerConf object at 0x7fa2dad81f50>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2daeed5d0>, <src.sla.WorkerConf object at 0x7fa2daeede10>, <src.sla.WorkerConf object at 0x7fa2dad9bd10>, <src.sla.WorkerConf object at 0x7fa2dad9b3d0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad44a10>, <src.sla.WorkerConf object at 0x7fa2dad44ad0>, <src.sla.WorkerConf object at 0x7fa2dad44290>, <src.sla.WorkerConf object at 0x7fa2dad44050>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 0, 3], [0, 0, 1, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
39
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
38
SCALE UP DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
4
2
Moving filtered samples in sorted combinations after the window
['0011', '0101', '1000', '0003', '0020', '0110', '0200', '0012', '0102', '1001', '0021', '0111', '1010', '0201', '1100', '0030', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 1
[0, 0, 1, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 8 with window 1
[0, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 9 with window 1
[1, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 10 with window 1
[0, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 11 with window 1
[0, 1, 1, 1]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 12 with window 1
[1, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 13 with window 1
[0, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 14 with window 1
[1, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 15 with window 1
[0, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 16 with window 1
[0, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 17 with window 1
[0, 0, 1, 3]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 18 with window 1
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 1
[0, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 20 with window 1
[0, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 21 with window 1
[1, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 22 with window 1
[0, 0, 2, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 23 with window 1
[0, 1, 1, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 24 with window 1
[1, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 25 with window 1
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 26 with window 1
[1, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 27 with window 1
[2, 0, 0, 0]
SCALING INDEX = 2
removed
Starting at index 28 with window 1
[0, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 29 with window 1
[0, 1, 2, 1]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 30 with window 1
[1, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 31 with window 1
[0, 2, 1, 1]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 32 with window 1
[1, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 33 with window 1
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 34 with window 1
[1, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 35 with window 1
[1, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 36 with window 1
[0, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 37 with window 1
[0, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 38 with window 1
[0, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 39 with window 1
[0, 1, 1, 3]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 40 with window 1
[0, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 41 with window 1
[1, 0, 1, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 42 with window 1
[0, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 43 with window 1
[1, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 44 with window 1
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 45 with window 1
[0, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 46 with window 1
[0, 1, 2, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 47 with window 1
[1, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 48 with window 1
[0, 2, 1, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 49 with window 1
[1, 1, 1, 1]
not removed
Going to 2 tenants
Going to 3 tenants
[1, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 50 with window 1
[2, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 51 with window 1
[0, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 52 with window 1
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 53 with window 1
[2, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 54 with window 1
[0, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 55 with window 1
[1, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 56 with window 1
[0, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 57 with window 1
[1, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 58 with window 1
[0, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 1
[1, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 60 with window 1
[1, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 61 with window 1
[1, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 62 with window 1
[1, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 63 with window 1
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 64 with window 1
[0, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 65 with window 1
[0, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 66 with window 1
[0, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 67 with window 1
[0, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 68 with window 1
[1, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 1
[0, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 70 with window 1
[1, 1, 1, 2]
not removed
Going to 2 tenants
Going to 3 tenants
[1, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 71 with window 1
[2, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 72 with window 1
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 73 with window 1
[1, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 74 with window 1
[2, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 75 with window 1
[3, 0, 0, 0]
SCALING INDEX = 2
removed
Starting at index 76 with window 1
[0, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 77 with window 1
[1, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 78 with window 1
[0, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 79 with window 1
[1, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 80 with window 1
[2, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 81 with window 1
[0, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 82 with window 1
[1, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 83 with window 1
[2, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 84 with window 1
[1, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 85 with window 1
[2, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 86 with window 1
[2, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 87 with window 1
[0, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 88 with window 1
[1, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 89 with window 1
[0, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 90 with window 1
[1, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 91 with window 1
[1, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 92 with window 1
[1, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 93 with window 1
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 94 with window 1
[2, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 95 with window 1
[1, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 96 with window 1
[2, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 97 with window 1
[3, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 98 with window 1
[0, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 99 with window 1
[0, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 100 with window 1
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 101 with window 1
[0, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 102 with window 1
[1, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 103 with window 1
[2, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 104 with window 1
[0, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 105 with window 1
[1, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 106 with window 1
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 107 with window 1
[3, 0, 1, 0]
SCALING INDEX = 2
removed
Starting at index 108 with window 1
[1, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 109 with window 1
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 110 with window 1
[3, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 111 with window 1
[0, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 112 with window 1
[1, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 113 with window 1
[2, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 114 with window 1
[0, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 115 with window 1
[1, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 116 with window 1
[2, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 117 with window 1
[1, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 118 with window 1
[2, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 119 with window 1
[2, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 120 with window 1
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 121 with window 1
[2, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 122 with window 1
[3, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 123 with window 1
[0, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 124 with window 1
[1, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 125 with window 1
[1, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 126 with window 1
[1, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 127 with window 1
[1, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 128 with window 1
[2, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 129 with window 1
[1, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 130 with window 1
[2, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 131 with window 1
[3, 0, 1, 1]
SCALING INDEX = 2
removed
Starting at index 132 with window 1
[1, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 133 with window 1
[2, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 134 with window 1
[3, 1, 0, 1]
SCALING INDEX = 2
removed
Starting at index 135 with window 1
[0, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 136 with window 1
[1, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 137 with window 1
[2, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 138 with window 1
[0, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 139 with window 1
[1, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 140 with window 1
[2, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 141 with window 1
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 142 with window 1
[1, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 143 with window 1
[2, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 144 with window 1
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 145 with window 1
[2, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 146 with window 1
[3, 0, 0, 3]
SCALING INDEX = 2
removed
Starting at index 147 with window 1
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 148 with window 1
[0, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 149 with window 1
[1, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 150 with window 1
[2, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 151 with window 1
[1, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 152 with window 1
[2, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 153 with window 1
[2, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 154 with window 1
[2, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 155 with window 1
[2, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 156 with window 1
[3, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 157 with window 1
[2, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 158 with window 1
[3, 1, 0, 2]
SCALING INDEX = 2
removed
Starting at index 159 with window 1
[1, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 160 with window 1
[1, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 161 with window 1
[2, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 162 with window 1
[1, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 163 with window 1
[2, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 164 with window 1
[3, 0, 2, 1]
SCALING INDEX = 2
removed
Starting at index 165 with window 1
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 166 with window 1
[2, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 167 with window 1
[3, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 168 with window 1
[2, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 169 with window 1
[3, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 170 with window 1
[0, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 171 with window 1
[1, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 172 with window 1
[2, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 173 with window 1
[3, 0, 3, 0]
SCALING INDEX = 2
removed
Starting at index 174 with window 1
[1, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 175 with window 1
[2, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 176 with window 1
[3, 1, 2, 0]
SCALING INDEX = 2
removed
Starting at index 177 with window 1
[2, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 178 with window 1
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 1
[3, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 180 with window 1
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 181 with window 1
[3, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 182 with window 1
[1, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 183 with window 1
[2, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 184 with window 1
[2, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 185 with window 1
[2, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 186 with window 1
[2, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 187 with window 1
[3, 0, 2, 2]
SCALING INDEX = 2
removed
Starting at index 188 with window 1
[2, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 1
[3, 1, 1, 2]
SCALING INDEX = 2
removed
Starting at index 190 with window 1
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 191 with window 1
[3, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 192 with window 1
[1, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 193 with window 1
[2, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 194 with window 1
[3, 0, 3, 1]
SCALING INDEX = 2
removed
Starting at index 195 with window 1
[1, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 196 with window 1
[2, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 197 with window 1
[3, 1, 2, 1]
SCALING INDEX = 2
removed
Starting at index 198 with window 1
[2, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 199 with window 1
[3, 2, 1, 1]
SCALING INDEX = 2
removed
Starting at index 200 with window 1
[3, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 201 with window 1
[1, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 202 with window 1
[2, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 203 with window 1
[3, 1, 3, 0]
SCALING INDEX = 2
removed
Starting at index 204 with window 1
[2, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 205 with window 1
[3, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 206 with window 1
[3, 2, 2, 0]
SCALING INDEX = 2
removed
Starting at index 207 with window 1
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 208 with window 1
[3, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 209 with window 1
[3, 2, 0, 3]
SCALING INDEX = 2
removed
Starting at index 210 with window 1
[2, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 211 with window 1
[2, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 212 with window 1
[3, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 213 with window 1
[2, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 214 with window 1
[3, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 215 with window 1
[2, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 216 with window 1
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 217 with window 1
[3, 3, 0, 2]
SCALING INDEX = 2
removed
Starting at index 218 with window 1
[1, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 219 with window 1
[2, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 220 with window 1
[3, 1, 3, 1]
SCALING INDEX = 2
removed
Starting at index 221 with window 1
[2, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 222 with window 1
[3, 2, 2, 1]
SCALING INDEX = 2
removed
Starting at index 223 with window 1
[3, 3, 1, 1]
SCALING INDEX = 2
removed
Starting at index 224 with window 1
[2, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 225 with window 1
[3, 0, 3, 3]
SCALING INDEX = 2
removed
Starting at index 226 with window 1
[3, 2, 3, 0]
SCALING INDEX = 2
removed
Starting at index 227 with window 1
[3, 1, 2, 3]
SCALING INDEX = 2
removed
Starting at index 228 with window 1
[3, 3, 2, 0]
SCALING INDEX = 2
removed
Starting at index 229 with window 1
[3, 2, 1, 3]
SCALING INDEX = 2
removed
Starting at index 230 with window 1
[3, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 231 with window 1
[2, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 232 with window 1
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 233 with window 1
[2, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 234 with window 1
[3, 2, 2, 2]
SCALING INDEX = 2
removed
Starting at index 235 with window 1
[3, 3, 1, 2]
SCALING INDEX = 2
removed
Starting at index 236 with window 1
[2, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 237 with window 1
[3, 2, 3, 1]
SCALING INDEX = 2
removed
Starting at index 238 with window 1
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 1
[3, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 240 with window 1
[3, 3, 3, 0]
SCALING INDEX = 2
removed
Starting at index 241 with window 1
[3, 2, 2, 3]
SCALING INDEX = 2
removed
Starting at index 242 with window 1
[3, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 243 with window 1
[2, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 244 with window 1
[3, 2, 3, 2]
SCALING INDEX = 2
removed
Starting at index 245 with window 1
[3, 3, 2, 2]
SCALING INDEX = 2
removed
Starting at index 246 with window 1
[3, 3, 3, 1]
SCALING INDEX = 2
removed
Starting at index 247 with window 1
[3, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 248 with window 1
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 1
[3, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 250 with window 1
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 251 with window 1
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
38
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 0, 0, 3]
Removing tipped over conf
[0, 0, 1, 2]
Moving filtered samples in sorted combinations after the window
['0011', '0101', '1000', '0020', '0110', '0200', '0102', '1001', '0021', '0111', '1010', '0201', '1100', '0030', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 1, 0, 1]
not removed
[1, 0, 0, 0]
removed
[0, 0, 2, 0]
removed
[0, 1, 1, 0]
removed
[0, 2, 0, 0]
removed
[0, 1, 0, 2]
not removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
not removed
[1, 0, 1, 0]
removed
Going to 2 tenants
Going to 3 tenants
[0, 1, 0, 1]
not removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
Going to 4 tenants
[0, 1, 0, 1]
removed
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
Going to 5 tenants
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
Going to 6 tenants
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
Going to 7 tenants
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
not removed
Going to 8 tenants
[0, 1, 0, 2]
not removed
[0, 1, 1, 1]
removed
Going to 9 tenants
[0, 1, 0, 2]
not removed
Going to 10 tenants
[0, 1, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 1
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 1
Getting next batch of experiments for 2 tenants
min_conf: 0 1 0 2
min_conf_dec: 1
1
[0, 1, 0, 2]
{'0': [[1, 0, 2]]}
{'1': [[0, 2, 0]]}
{'0': [[2, 0, 1]]}
{'2': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 2]]}
Elementstr: [[0,1,0,2]]
Min replicacount:0 1 0 2
Max replicacount:0 1 0 2
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 137
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 137
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 137.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;1;3:
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 150
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 150
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 150.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 146
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 146
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 3]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 2] -> 146
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 2] -> 146
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.25333333333333335', 'best_score': '-0.25333333333333335', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.25333333333333335', 'best_score': '-0.25333333333333335', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 1;0;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 1;0;0;2:
Returning adaptive scaler for  8 tenants and 1;0;0;2:
1
255
['0022', '0103', '1002', '0112', '0202', '0211', '1110', '0300', '1101', '2000', '0031', '0210', '1011', '0121', '0130', '0023', '0220', '1020', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 9..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 163
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 1, 3] -> 185
[0, 1, 0, 3] -> 1e-09
[1, 0, 0, 2] -> 163
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.2333333333333334', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '185', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0866666666666667', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2daf5a610>, <src.sla.WorkerConf object at 0x7fa2daf62450>, <src.sla.WorkerConf object at 0x7fa2daf62ed0>, <src.sla.WorkerConf object at 0x7fa2daf626d0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2db010890>, <src.sla.WorkerConf object at 0x7fa2db010f90>, <src.sla.WorkerConf object at 0x7fa2db010310>, <src.sla.WorkerConf object at 0x7fa2dae45410>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad1e310>, <src.sla.WorkerConf object at 0x7fa2dad1e510>, <src.sla.WorkerConf object at 0x7fa2dad1edd0>, <src.sla.WorkerConf object at 0x7fa2dad1e950>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dacc0350>, <src.sla.WorkerConf object at 0x7fa2dacc0490>, <src.sla.WorkerConf object at 0x7fa2dacc0f50>, <src.sla.WorkerConf object at 0x7fa2dacc0710>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[1, 0, 0, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
40
SCALE UP DIFF
Rescaling worker 1
{'cpu': 7, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
7
4
3
2
Moving filtered samples in sorted combinations after the window
['0210', '0022', '0103', '0300', '1002', '0112', '0031', '0202', '1011', '0121', '0211', '1101', '0130', '1020', '1110', '2000', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 4 with window 1
[1, 0, 0, 2]
not removed
Going to 2 tenants
[1, 0, 0, 2]
not removed
Going to 5 tenants
[1, 0, 0, 2]
not removed
Going to 7 tenants
[1, 0, 0, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 0, 0, 2]
SCALING INDEX = 0
removed
Starting at index 5 with window 1
[0, 1, 1, 2]
SCALING INDEX = 0
removed
Starting at index 6 with window 1
[0, 0, 3, 1]
SCALING INDEX = 0
removed
Starting at index 7 with window 1
[0, 2, 0, 2]
SCALING INDEX = 0
removed
Starting at index 8 with window 1
[1, 0, 1, 1]
SCALING INDEX = 0
removed
Starting at index 9 with window 1
[0, 1, 2, 1]
SCALING INDEX = 0
removed
Starting at index 10 with window 1
[0, 2, 1, 1]
SCALING INDEX = 0
removed
Starting at index 11 with window 1
[1, 1, 0, 1]
not removed
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 0
removed
Starting at index 12 with window 1
[0, 1, 3, 0]
SCALING INDEX = 0
removed
Starting at index 13 with window 1
[1, 0, 2, 0]
SCALING INDEX = 0
removed
Starting at index 14 with window 1
[1, 1, 1, 0]
SCALING INDEX = 0
removed
Starting at index 15 with window 1
[2, 0, 0, 0]
SCALING INDEX = 0
removed
Starting at index 16 with window 1
[0, 0, 2, 3]
SCALING INDEX = 0
removed
Starting at index 17 with window 1
[0, 2, 2, 0]
SCALING INDEX = 0
removed
Starting at index 18 with window 1
[0, 3, 0, 1]
SCALING INDEX = 0
removed
Starting at index 19 with window 1
[1, 0, 0, 3]
not removed
Going to 2 tenants
[1, 0, 0, 3]
not removed
Going to 5 tenants
[1, 0, 0, 3]
not removed
Going to 7 tenants
[1, 0, 0, 3]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 0, 0, 3]
SCALING INDEX = 0
removed
Starting at index 20 with window 1
[1, 2, 0, 0]
SCALING INDEX = 0
removed
Starting at index 21 with window 1
[0, 0, 3, 2]
SCALING INDEX = 0
removed
Starting at index 22 with window 1
[0, 1, 1, 3]
SCALING INDEX = 0
removed
Starting at index 23 with window 1
[0, 3, 1, 0]
SCALING INDEX = 0
removed
Starting at index 24 with window 1
[1, 0, 1, 2]
not removed
Going to 2 tenants
[1, 0, 1, 2]
not removed
Going to 5 tenants
[1, 0, 1, 2]
not removed
Going to 7 tenants
[1, 0, 1, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 0, 1, 2]
SCALING INDEX = 0
removed
Starting at index 25 with window 1
[0, 1, 2, 2]
SCALING INDEX = 0
removed
Starting at index 26 with window 1
[0, 2, 0, 3]
SCALING INDEX = 0
removed
Starting at index 27 with window 1
[1, 0, 2, 1]
SCALING INDEX = 0
removed
Starting at index 28 with window 1
[1, 1, 0, 2]
not removed
Going to 2 tenants
[1, 1, 0, 2]
not removed
Going to 5 tenants
[1, 1, 0, 2]
not removed
Going to 7 tenants
[1, 1, 0, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 1, 0, 2]
SCALING INDEX = 0
removed
Starting at index 29 with window 1
[0, 1, 3, 1]
SCALING INDEX = 0
removed
Starting at index 30 with window 1
[0, 2, 1, 2]
SCALING INDEX = 0
removed
Starting at index 31 with window 1
[2, 0, 0, 1]
SCALING INDEX = 0
removed
Starting at index 32 with window 1
[1, 0, 3, 0]
SCALING INDEX = 0
removed
Starting at index 33 with window 1
[1, 1, 1, 1]
not removed
Going to 2 tenants
[1, 1, 1, 1]
not removed
Going to 5 tenants
[1, 1, 1, 1]
not removed
Going to 7 tenants
[1, 1, 1, 1]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 1, 1, 1]
SCALING INDEX = 0
removed
Starting at index 34 with window 1
[0, 2, 2, 1]
SCALING INDEX = 0
removed
Starting at index 35 with window 1
[0, 3, 0, 2]
SCALING INDEX = 0
removed
Starting at index 36 with window 1
[2, 0, 1, 0]
SCALING INDEX = 0
removed
Starting at index 37 with window 1
[1, 1, 2, 0]
SCALING INDEX = 0
removed
Starting at index 38 with window 1
[1, 2, 0, 1]
not removed
Going to 2 tenants
[1, 2, 0, 1]
SCALING INDEX = 0
removed
Starting at index 39 with window 1
[0, 0, 3, 3]
SCALING INDEX = 0
removed
Starting at index 40 with window 1
[0, 2, 3, 0]
SCALING INDEX = 0
removed
Starting at index 41 with window 1
[0, 3, 1, 1]
SCALING INDEX = 0
removed
Starting at index 42 with window 1
[2, 1, 0, 0]
SCALING INDEX = 0
removed
Starting at index 43 with window 1
[1, 0, 1, 3]
SCALING INDEX = 0
removed
Starting at index 44 with window 1
[1, 2, 1, 0]
SCALING INDEX = 0
removed
Starting at index 45 with window 1
[0, 1, 2, 3]
SCALING INDEX = 0
removed
Starting at index 46 with window 1
[0, 3, 2, 0]
SCALING INDEX = 0
removed
Starting at index 47 with window 1
[1, 0, 2, 2]
SCALING INDEX = 0
removed
Starting at index 48 with window 1
[1, 1, 0, 3]
not removed
Going to 2 tenants
[1, 1, 0, 3]
not removed
Going to 5 tenants
[1, 1, 0, 3]
not removed
Going to 7 tenants
[1, 1, 0, 3]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 1, 0, 3]
SCALING INDEX = 0
removed
Starting at index 49 with window 1
[1, 3, 0, 0]
SCALING INDEX = 0
removed
Starting at index 50 with window 1
[0, 1, 3, 2]
SCALING INDEX = 0
removed
Starting at index 51 with window 1
[0, 2, 1, 3]
SCALING INDEX = 0
removed
Starting at index 52 with window 1
[2, 0, 0, 2]
not removed
Going to 2 tenants
[2, 0, 0, 2]
not removed
Going to 5 tenants
[2, 0, 0, 2]
not removed
Going to 7 tenants
[2, 0, 0, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[2, 0, 0, 2]
SCALING INDEX = 0
removed
Starting at index 53 with window 1
[1, 0, 3, 1]
SCALING INDEX = 0
removed
Starting at index 54 with window 1
[1, 1, 1, 2]
not removed
Going to 2 tenants
[1, 1, 1, 2]
not removed
Going to 5 tenants
[1, 1, 1, 2]
not removed
Going to 7 tenants
[1, 1, 1, 2]
not removed
Going to 8 tenants
Going to 9 tenants
[1, 1, 1, 2]
SCALING INDEX = 0
removed
Starting at index 55 with window 1
[0, 2, 2, 2]
SCALING INDEX = 0
removed
Starting at index 56 with window 1
[0, 3, 0, 3]
SCALING INDEX = 0
removed
Starting at index 57 with window 1
[2, 0, 1, 1]
SCALING INDEX = 0
removed
Starting at index 58 with window 1
[1, 1, 2, 1]
SCALING INDEX = 0
removed
Starting at index 59 with window 1
[1, 2, 0, 2]
not removed
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 0
removed
Starting at index 60 with window 1
[0, 2, 3, 1]
SCALING INDEX = 0
removed
Starting at index 61 with window 1
[0, 3, 1, 2]
SCALING INDEX = 0
removed
Starting at index 62 with window 1
[2, 0, 2, 0]
SCALING INDEX = 0
removed
Starting at index 63 with window 1
[2, 1, 0, 1]
not removed
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 0
removed
Starting at index 64 with window 1
[1, 1, 3, 0]
SCALING INDEX = 0
removed
Starting at index 65 with window 1
[1, 2, 1, 1]
SCALING INDEX = 0
removed
Starting at index 66 with window 1
[0, 3, 2, 1]
SCALING INDEX = 0
removed
Starting at index 67 with window 1
[3, 0, 0, 0]
SCALING INDEX = 0
removed
Starting at index 68 with window 1
[2, 1, 1, 0]
SCALING INDEX = 0
removed
Starting at index 69 with window 1
[1, 0, 2, 3]
SCALING INDEX = 0
removed
Starting at index 70 with window 1
[1, 2, 2, 0]
SCALING INDEX = 0
removed
Starting at index 71 with window 1
[1, 3, 0, 1]
SCALING INDEX = 0
removed
Starting at index 72 with window 1
[0, 1, 3, 3]
SCALING INDEX = 0
removed
Starting at index 73 with window 1
[0, 3, 3, 0]
SCALING INDEX = 0
removed
Starting at index 74 with window 1
[2, 0, 0, 3]
SCALING INDEX = 0
removed
Starting at index 75 with window 1
[2, 2, 0, 0]
SCALING INDEX = 0
removed
Starting at index 76 with window 1
[1, 0, 3, 2]
SCALING INDEX = 0
removed
Starting at index 77 with window 1
[1, 1, 1, 3]
SCALING INDEX = 0
removed
Starting at index 78 with window 1
[1, 3, 1, 0]
SCALING INDEX = 0
removed
Starting at index 79 with window 1
[0, 2, 2, 3]
SCALING INDEX = 0
removed
Starting at index 80 with window 1
[2, 0, 1, 2]
SCALING INDEX = 0
removed
Starting at index 81 with window 1
[1, 1, 2, 2]
SCALING INDEX = 0
removed
Starting at index 82 with window 1
[1, 2, 0, 3]
SCALING INDEX = 0
removed
Starting at index 83 with window 1
[0, 2, 3, 2]
SCALING INDEX = 0
removed
Starting at index 84 with window 1
[0, 3, 1, 3]
SCALING INDEX = 0
removed
Starting at index 85 with window 1
[2, 0, 2, 1]
SCALING INDEX = 0
removed
Starting at index 86 with window 1
[2, 1, 0, 2]
not removed
Going to 2 tenants
[2, 1, 0, 2]
SCALING INDEX = 0
removed
Starting at index 87 with window 1
[1, 1, 3, 1]
SCALING INDEX = 0
removed
Starting at index 88 with window 1
[1, 2, 1, 2]
SCALING INDEX = 0
removed
Starting at index 89 with window 1
[0, 3, 2, 2]
SCALING INDEX = 0
removed
Starting at index 90 with window 1
[3, 0, 0, 1]
SCALING INDEX = 0
removed
Starting at index 91 with window 1
[2, 0, 3, 0]
SCALING INDEX = 0
removed
Starting at index 92 with window 1
[2, 1, 1, 1]
SCALING INDEX = 0
removed
Starting at index 93 with window 1
[1, 2, 2, 1]
SCALING INDEX = 0
removed
Starting at index 94 with window 1
[1, 3, 0, 2]
SCALING INDEX = 0
removed
Starting at index 95 with window 1
[0, 3, 3, 1]
SCALING INDEX = 0
removed
Starting at index 96 with window 1
[3, 0, 1, 0]
SCALING INDEX = 0
removed
Starting at index 97 with window 1
[2, 1, 2, 0]
SCALING INDEX = 0
removed
Starting at index 98 with window 1
[2, 2, 0, 1]
SCALING INDEX = 0
removed
Starting at index 99 with window 1
[1, 0, 3, 3]
SCALING INDEX = 0
removed
Starting at index 100 with window 1
[1, 2, 3, 0]
SCALING INDEX = 0
removed
Starting at index 101 with window 1
[1, 3, 1, 1]
SCALING INDEX = 0
removed
Starting at index 102 with window 1
[3, 1, 0, 0]
SCALING INDEX = 0
removed
Starting at index 103 with window 1
[2, 0, 1, 3]
SCALING INDEX = 0
removed
Starting at index 104 with window 1
[2, 2, 1, 0]
SCALING INDEX = 0
removed
Starting at index 105 with window 1
[1, 1, 2, 3]
SCALING INDEX = 0
removed
Starting at index 106 with window 1
[1, 3, 2, 0]
SCALING INDEX = 0
removed
Starting at index 107 with window 1
[0, 2, 3, 3]
SCALING INDEX = 0
removed
Starting at index 108 with window 1
[2, 0, 2, 2]
SCALING INDEX = 0
removed
Starting at index 109 with window 1
[2, 1, 0, 3]
SCALING INDEX = 0
removed
Starting at index 110 with window 1
[2, 3, 0, 0]
SCALING INDEX = 0
removed
Starting at index 111 with window 1
[1, 1, 3, 2]
SCALING INDEX = 0
removed
Starting at index 112 with window 1
[1, 2, 1, 3]
SCALING INDEX = 0
removed
Starting at index 113 with window 1
[0, 3, 2, 3]
SCALING INDEX = 0
removed
Starting at index 114 with window 1
[3, 0, 0, 2]
SCALING INDEX = 0
removed
Starting at index 115 with window 1
[2, 0, 3, 1]
SCALING INDEX = 0
removed
Starting at index 116 with window 1
[2, 1, 1, 2]
SCALING INDEX = 0
removed
Starting at index 117 with window 1
[1, 2, 2, 2]
SCALING INDEX = 0
removed
Starting at index 118 with window 1
[1, 3, 0, 3]
SCALING INDEX = 0
removed
Starting at index 119 with window 1
[0, 3, 3, 2]
SCALING INDEX = 0
removed
Starting at index 120 with window 1
[3, 0, 1, 1]
SCALING INDEX = 0
removed
Starting at index 121 with window 1
[2, 1, 2, 1]
SCALING INDEX = 0
removed
Starting at index 122 with window 1
[2, 2, 0, 2]
SCALING INDEX = 0
removed
Starting at index 123 with window 1
[1, 2, 3, 1]
SCALING INDEX = 0
removed
Starting at index 124 with window 1
[1, 3, 1, 2]
SCALING INDEX = 0
removed
Starting at index 125 with window 1
[3, 0, 2, 0]
SCALING INDEX = 0
removed
Starting at index 126 with window 1
[3, 1, 0, 1]
SCALING INDEX = 0
removed
Starting at index 127 with window 1
[2, 1, 3, 0]
SCALING INDEX = 0
removed
Starting at index 128 with window 1
[2, 2, 1, 1]
SCALING INDEX = 0
removed
Starting at index 129 with window 1
[1, 3, 2, 1]
SCALING INDEX = 0
removed
Starting at index 130 with window 1
[3, 1, 1, 0]
SCALING INDEX = 0
removed
Starting at index 131 with window 1
[2, 0, 2, 3]
SCALING INDEX = 0
removed
Starting at index 132 with window 1
[2, 2, 2, 0]
SCALING INDEX = 0
removed
Starting at index 133 with window 1
[2, 3, 0, 1]
SCALING INDEX = 0
removed
Starting at index 134 with window 1
[1, 1, 3, 3]
SCALING INDEX = 0
removed
Starting at index 135 with window 1
[1, 3, 3, 0]
SCALING INDEX = 0
removed
Starting at index 136 with window 1
[3, 0, 0, 3]
SCALING INDEX = 0
removed
Starting at index 137 with window 1
[3, 2, 0, 0]
SCALING INDEX = 0
removed
Starting at index 138 with window 1
[2, 0, 3, 2]
SCALING INDEX = 0
removed
Starting at index 139 with window 1
[2, 1, 1, 3]
SCALING INDEX = 0
removed
Starting at index 140 with window 1
[2, 3, 1, 0]
SCALING INDEX = 0
removed
Starting at index 141 with window 1
[1, 2, 2, 3]
SCALING INDEX = 0
removed
Starting at index 142 with window 1
[0, 3, 3, 3]
SCALING INDEX = 0
removed
Starting at index 143 with window 1
[3, 0, 1, 2]
SCALING INDEX = 0
removed
Starting at index 144 with window 1
[2, 1, 2, 2]
SCALING INDEX = 0
removed
Starting at index 145 with window 1
[2, 2, 0, 3]
SCALING INDEX = 0
removed
Starting at index 146 with window 1
[1, 2, 3, 2]
SCALING INDEX = 0
removed
Starting at index 147 with window 1
[1, 3, 1, 3]
SCALING INDEX = 0
removed
Starting at index 148 with window 1
[3, 0, 2, 1]
SCALING INDEX = 0
removed
Starting at index 149 with window 1
[3, 1, 0, 2]
SCALING INDEX = 0
removed
Starting at index 150 with window 1
[2, 1, 3, 1]
SCALING INDEX = 0
removed
Starting at index 151 with window 1
[2, 2, 1, 2]
SCALING INDEX = 0
removed
Starting at index 152 with window 1
[1, 3, 2, 2]
SCALING INDEX = 0
removed
Starting at index 153 with window 1
[3, 0, 3, 0]
SCALING INDEX = 0
removed
Starting at index 154 with window 1
[3, 1, 1, 1]
SCALING INDEX = 0
removed
Starting at index 155 with window 1
[2, 2, 2, 1]
SCALING INDEX = 0
removed
Starting at index 156 with window 1
[2, 3, 0, 2]
SCALING INDEX = 0
removed
Starting at index 157 with window 1
[1, 3, 3, 1]
SCALING INDEX = 0
removed
Starting at index 158 with window 1
[3, 1, 2, 0]
SCALING INDEX = 0
removed
Starting at index 159 with window 1
[3, 2, 0, 1]
SCALING INDEX = 0
removed
Starting at index 160 with window 1
[2, 0, 3, 3]
SCALING INDEX = 0
removed
Starting at index 161 with window 1
[2, 2, 3, 0]
SCALING INDEX = 0
removed
Starting at index 162 with window 1
[2, 3, 1, 1]
SCALING INDEX = 0
removed
Starting at index 163 with window 1
[3, 0, 1, 3]
SCALING INDEX = 0
removed
Starting at index 164 with window 1
[3, 2, 1, 0]
SCALING INDEX = 0
removed
Starting at index 165 with window 1
[2, 1, 2, 3]
SCALING INDEX = 0
removed
Starting at index 166 with window 1
[2, 3, 2, 0]
SCALING INDEX = 0
removed
Starting at index 167 with window 1
[1, 2, 3, 3]
SCALING INDEX = 0
removed
Starting at index 168 with window 1
[3, 0, 2, 2]
SCALING INDEX = 0
removed
Starting at index 169 with window 1
[3, 1, 0, 3]
SCALING INDEX = 0
removed
Starting at index 170 with window 1
[3, 3, 0, 0]
SCALING INDEX = 0
removed
Starting at index 171 with window 1
[2, 1, 3, 2]
SCALING INDEX = 0
removed
Starting at index 172 with window 1
[2, 2, 1, 3]
SCALING INDEX = 0
removed
Starting at index 173 with window 1
[1, 3, 2, 3]
SCALING INDEX = 0
removed
Starting at index 174 with window 1
[3, 0, 3, 1]
SCALING INDEX = 0
removed
Starting at index 175 with window 1
[3, 1, 1, 2]
SCALING INDEX = 0
removed
Starting at index 176 with window 1
[2, 2, 2, 2]
SCALING INDEX = 0
removed
Starting at index 177 with window 1
[2, 3, 0, 3]
SCALING INDEX = 0
removed
Starting at index 178 with window 1
[1, 3, 3, 2]
SCALING INDEX = 0
removed
Starting at index 179 with window 1
[3, 1, 2, 1]
SCALING INDEX = 0
removed
Starting at index 180 with window 1
[3, 2, 0, 2]
SCALING INDEX = 0
removed
Starting at index 181 with window 1
[2, 2, 3, 1]
SCALING INDEX = 0
removed
Starting at index 182 with window 1
[2, 3, 1, 2]
SCALING INDEX = 0
removed
Starting at index 183 with window 1
[3, 1, 3, 0]
SCALING INDEX = 0
removed
Starting at index 184 with window 1
[3, 2, 1, 1]
SCALING INDEX = 0
removed
Starting at index 185 with window 1
[2, 3, 2, 1]
SCALING INDEX = 0
removed
Starting at index 186 with window 1
[3, 0, 2, 3]
SCALING INDEX = 0
removed
Starting at index 187 with window 1
[3, 2, 2, 0]
SCALING INDEX = 0
removed
Starting at index 188 with window 1
[3, 3, 0, 1]
SCALING INDEX = 0
removed
Starting at index 189 with window 1
[2, 1, 3, 3]
SCALING INDEX = 0
removed
Starting at index 190 with window 1
[2, 3, 3, 0]
SCALING INDEX = 0
removed
Starting at index 191 with window 1
[3, 0, 3, 2]
SCALING INDEX = 0
removed
Starting at index 192 with window 1
[3, 1, 1, 3]
SCALING INDEX = 0
removed
Starting at index 193 with window 1
[3, 3, 1, 0]
SCALING INDEX = 0
removed
Starting at index 194 with window 1
[2, 2, 2, 3]
SCALING INDEX = 0
removed
Starting at index 195 with window 1
[1, 3, 3, 3]
SCALING INDEX = 0
removed
Starting at index 196 with window 1
[3, 1, 2, 2]
SCALING INDEX = 0
removed
Starting at index 197 with window 1
[3, 2, 0, 3]
SCALING INDEX = 0
removed
Starting at index 198 with window 1
[2, 2, 3, 2]
SCALING INDEX = 0
removed
Starting at index 199 with window 1
[2, 3, 1, 3]
SCALING INDEX = 0
removed
Starting at index 200 with window 1
[3, 1, 3, 1]
SCALING INDEX = 0
removed
Starting at index 201 with window 1
[3, 2, 1, 2]
SCALING INDEX = 0
removed
Starting at index 202 with window 1
[2, 3, 2, 2]
SCALING INDEX = 0
removed
Starting at index 203 with window 1
[3, 2, 2, 1]
SCALING INDEX = 0
removed
Starting at index 204 with window 1
[3, 3, 0, 2]
SCALING INDEX = 0
removed
Starting at index 205 with window 1
[2, 3, 3, 1]
SCALING INDEX = 0
removed
Starting at index 206 with window 1
[3, 0, 3, 3]
SCALING INDEX = 0
removed
Starting at index 207 with window 1
[3, 2, 3, 0]
SCALING INDEX = 0
removed
Starting at index 208 with window 1
[3, 3, 1, 1]
SCALING INDEX = 0
removed
Starting at index 209 with window 1
[3, 1, 2, 3]
SCALING INDEX = 0
removed
Starting at index 210 with window 1
[3, 3, 2, 0]
SCALING INDEX = 0
removed
Starting at index 211 with window 1
[2, 2, 3, 3]
SCALING INDEX = 0
removed
Starting at index 212 with window 1
[3, 1, 3, 2]
SCALING INDEX = 0
removed
Starting at index 213 with window 1
[3, 2, 1, 3]
SCALING INDEX = 0
removed
Starting at index 214 with window 1
[2, 3, 2, 3]
SCALING INDEX = 0
removed
Starting at index 215 with window 1
[3, 2, 2, 2]
SCALING INDEX = 0
removed
Starting at index 216 with window 1
[3, 3, 0, 3]
SCALING INDEX = 0
removed
Starting at index 217 with window 1
[2, 3, 3, 2]
SCALING INDEX = 0
removed
Starting at index 218 with window 1
[3, 2, 3, 1]
SCALING INDEX = 0
removed
Starting at index 219 with window 1
[3, 3, 1, 2]
SCALING INDEX = 0
removed
Starting at index 220 with window 1
[3, 3, 2, 1]
SCALING INDEX = 0
removed
Starting at index 221 with window 1
[3, 1, 3, 3]
SCALING INDEX = 0
removed
Starting at index 222 with window 1
[3, 3, 3, 0]
SCALING INDEX = 0
removed
Starting at index 223 with window 1
[3, 2, 2, 3]
SCALING INDEX = 0
removed
Starting at index 224 with window 1
[2, 3, 3, 3]
SCALING INDEX = 0
removed
Starting at index 225 with window 1
[3, 2, 3, 2]
SCALING INDEX = 0
removed
Starting at index 226 with window 1
[3, 3, 1, 3]
SCALING INDEX = 0
removed
Starting at index 227 with window 1
[3, 3, 2, 2]
SCALING INDEX = 0
removed
Starting at index 228 with window 1
[3, 3, 3, 1]
SCALING INDEX = 0
removed
Starting at index 229 with window 1
[3, 2, 3, 3]
SCALING INDEX = 0
removed
Starting at index 230 with window 1
[3, 3, 2, 3]
SCALING INDEX = 0
removed
Starting at index 231 with window 1
[3, 3, 3, 2]
SCALING INDEX = 0
removed
Starting at index 232 with window 1
[3, 3, 3, 3]
SCALING INDEX = 0
removed
Starting at index 233 with window 1
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
40
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[1, 0, 0, 2]
Moving filtered samples in sorted combinations after the window
['0210', '0022', '0103', '0300', '0112', '0031', '0202', '1011', '0121', '0211', '1101', '0130', '1020', '1110', '2000', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 2 with window 10
[0, 1, 0, 3]
not removed
[0, 3, 0, 0]
removed
[0, 1, 1, 2]
not removed
[0, 0, 3, 1]
removed
[0, 2, 0, 2]
not removed
[1, 0, 1, 1]
removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
not removed
[0, 1, 3, 0]
removed
Going to 2 tenants
[0, 1, 0, 3]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
removed
Going to 5 tenants
[0, 1, 0, 3]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 7 tenants
[0, 1, 0, 3]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 8 tenants
Going to 9 tenants
[0, 1, 0, 3]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 10 tenants
[0, 1, 0, 3]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
Going to 11 tenants
Starting at index 2 with window 3
['0210', '0022', '0103', '0112', '0202', '1020', '0300', '1110', '0121', '0211', '0031', '2000', '1101', '1011', '0023', '0220', '0301', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 2 with window 3
Getting next batch of experiments for 8 tenants
min_conf: 0 1 0 3
min_conf_dec: 2
2
[0, 1, 0, 3]
3
[0, 1, 1, 2]
4
[0, 2, 0, 2]
{'0': [[1, 0, 3], [1, 1, 2], [2, 0, 2]]}
{'1': [[0, 3, 0], [1, 2, 0]], '2': [[0, 2, 0]]}
{'0': [[3, 0, 1], [2, 0, 2]], '1': [[2, 0, 1]]}
{'3': [[0, 1, 0]], '2': [[0, 1, 1], [0, 2, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 3], [1, 1, 2], [2, 0, 2]]}
Elementstr: [[0,1,0,3];[0,1,1,2];[0,2,0,2]]
Min replicacount:0 1 0 3
Max replicacount:0 2 0 2
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 1e-09
[0, 1, 1, 2] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '2', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
['0022', '1002', '0112', '0202', '0220', '0130', '1020', '0023', '1101', '2000', '1110', '0121', '0211', '0031', '1011', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0112', '0202', '0220', '0130', '1020', '0023', '1101', '2000', '1110', '0121', '0211', '0031', '1011', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 2, 2, 0]
removed
[0, 1, 3, 0]
removed
[1, 0, 2, 0]
removed
[0, 0, 2, 3]
removed
[1, 1, 0, 1]
not removed
[2, 0, 0, 0]
removed
[1, 1, 1, 0]
removed
Going to 2 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
Going to 5 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 7 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 8 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 9 tenants
[1, 0, 0, 2]
not removed
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 11 tenants
Starting at index 1 with window 3
['0022', '1002', '0112', '0202', '0121', '0211', '0031', '1101', '0220', '0130', '1020', '0023', '1011', '2000', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0102', '0011', '1000', '0101', '0020', '0110', '0200', '1001', '0111', '0021', '1010', '1100', '0201', '0030', '0120', '0210', '0300', '0013', '1002', '0103', '0022', '1011', '2000', '0112', '1101', '0202', '0031', '1020', '0121', '1110', '0211', '1200', '0301', '1003', '0130', '0220', '0310', '0023', '1012', '2001', '0113', '1102', '0203', '0032', '1021', '2010', '0122', '1111', '2100', '0212', '1201', '0302', '1030', '0131', '1120', '0221', '1210', '0311', '1300', '1013', '2002', '1103', '0230', '0320', '0033', '1022', '2011', '3000', '0123', '1112', '2101', '0213', '1202', '0303', '1031', '2020', '0132', '1121', '2110', '0222', '1211', '2200', '0312', '1301', '2003', '1130', '0231', '1220', '0321', '1310', '1023', '2012', '3001', '1113', '2102', '1203', '0330', '1032', '2021', '3010', '0133', '1122', '2111', '3100', '0223', '1212', '2201', '0313', '1302', '2030', '1131', '2120', '0232', '1221', '2210', '0322', '1311', '2300', '2013', '3002', '2103', '1230', '0331', '1320', '1033', '2022', '3011', '1123', '2112', '3101', '1213', '2202', '1303', '2031', '3020', '1132', '2121', '3110', '0233', '1222', '2211', '3200', '0323', '1312', '2301', '3003', '2130', '1231', '2220', '0332', '1321', '2310', '2023', '3012', '2113', '3102', '2203', '1330', '2032', '3021', '1133', '2122', '3111', '1223', '2212', '3201', '1313', '2302', '3030', '2131', '3120', '1232', '2221', '3210', '0333', '1322', '2311', '3300', '3013', '3103', '2230', '1331', '2320', '2033', '3022', '2123', '3112', '2213', '3202', '2303', '3031', '2132', '3121', '1233', '2222', '3211', '1323', '2312', '3301', '3130', '2231', '3220', '1332', '2321', '3310', '3023', '3113', '3203', '2330', '3032', '2133', '3122', '2223', '3212', '2313', '3302', '3131', '2232', '3221', '1333', '2322', '3311', '3230', '2331', '3320', '3033', '3123', '3213', '3303', '3132', '2233', '3222', '2323', '3312', '3231', '2332', '3321', '3330', '3133', '3223', '3313', '3232', '2333', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 134
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 134
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 134.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 135
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 2] -> 135
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.18666666666666668', 'best_score': '-0.18666666666666668', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 140.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.22666666666666666', 'config': '0', 'score': '-0.22666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;1;3:
Returning adaptive scaler for  5 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '157', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '157', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dadc07d0>, <src.sla.WorkerConf object at 0x7fa2dadc0b90>, <src.sla.WorkerConf object at 0x7fa2dadc0990>, <src.sla.WorkerConf object at 0x7fa2dadc0f10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 1, 3]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
35
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 0, 1, 3]
Moving filtered samples in sorted combinations after the window
['0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 10
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 2, 0, 1]
not removed
[1, 1, 0, 0]
removed
[0, 0, 2, 2]
not removed
[0, 2, 1, 0]
removed
Going to 2 tenants
[0, 1, 1, 1]
not removed
[0, 2, 0, 1]
removed
[0, 0, 2, 2]
not removed
Going to 5 tenants
[0, 1, 1, 1]
not removed
[0, 0, 2, 2]
not removed
Going to 7 tenants
[0, 1, 1, 1]
not removed
[0, 0, 2, 2]
not removed
Going to 8 tenants
[0, 1, 1, 1]
not removed
[0, 0, 2, 2]
not removed
Going to 9 tenants
[0, 1, 1, 1]
removed
[0, 0, 2, 2]
not removed
Going to 10 tenants
[0, 0, 2, 2]
not removed
Going to 11 tenants
Starting at index 0 with window 1
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 0 with window 1
Getting next batch of experiments for 5 tenants
min_conf: 0 0 2 2
min_conf_dec: 0
0
[0, 0, 2, 2]
{'0': [[0, 2, 2]]}
{'0': [[2, 2, 0]]}
{'2': [[2, 0, 0]]}
{'2': [[0, 0, 2]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 2]]}
Elementstr: [[0,0,2,2]]
Min replicacount:0 0 2 2
Max replicacount:0 0 2 2
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 2] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 3]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0112', '0202', '1020', '0300', '1110', '0121', '0211', '0031', '2000', '1101', '1011', '0023', '0220', '0301', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}
Starting at: 4
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Moving filtered samples in sorted combinations after the window
['0210', '0022', '0103', '0112', '0202', '1020', '0300', '1110', '0121', '0211', '0031', '2000', '1101', '1011', '0023', '0220', '0301', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 3 with window 10
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 0, 2, 0]
removed
[0, 3, 0, 0]
removed
[1, 1, 1, 0]
removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
removed
[2, 0, 0, 0]
removed
[1, 1, 0, 1]
not removed
Going to 2 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
removed
Going to 5 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 6 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 7 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 8 tenants
Going to 9 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
Going to 10 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
Going to 11 tenants
Starting at index 3 with window 2
['0210', '0022', '0103', '0112', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 143
[0, 1, 1, 2] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 1;0;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;0;0;2:
Returning adaptive scaler for  9 tenants and 1;0;0;2:
1
255
['0022', '1002', '0112', '0202', '0121', '0211', '0031', '1101', '0220', '0130', '1020', '0023', '1011', '2000', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '181', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '181', 'Successfull': 'true'}]
Filtered results
Removing failed conf
[1, 0, 0, 2]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 1;0;0;2:
Returning adaptive scaler for  10 tenants and 1;0;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Removing failed conf
[1, 0, 0, 2]
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0022', '0112', '0202', '1011', '0220', '0130', '1020', '0023', '0121', '0211', '0031', '1101', '2000', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[1, 0, 1, 1]
removed
[0, 2, 2, 0]
removed
[0, 1, 3, 0]
removed
[1, 0, 2, 0]
removed
[0, 0, 2, 3]
removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
removed
Going to 2 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 5 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 6 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 7 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 8 tenants
[0, 1, 1, 2]
not removed
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
removed
[0, 2, 1, 1]
removed
Going to 10 tenants
Starting at index 1 with window 2
['0022', '0112', '0202', '1101', '2000', '0121', '0211', '1011', '0220', '0130', '1020', '0023', '1110', '0300', '0031', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 10 :
[0, 2, 0, 2]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 2] -> 181
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[0, 1, 0, 3] -> 174
[0, 1, 1, 2] -> 163
[0, 2, 0, 2] -> 1e-09
[1, 0, 0, 2] -> 181
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.16', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '174', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0866666666666667', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.2066666666666666', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '181', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dd4cd190>, <src.sla.WorkerConf object at 0x7fa2dd4cdf90>, <src.sla.WorkerConf object at 0x7fa2dd4cd210>, <src.sla.WorkerConf object at 0x7fa2dd4cd8d0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dd4cdcd0>, <src.sla.WorkerConf object at 0x7fa2dd51ec10>, <src.sla.WorkerConf object at 0x7fa2daf13850>, <src.sla.WorkerConf object at 0x7fa2daf13c90>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 1, 2]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
41
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 1, 1, 2]
Moving filtered samples in sorted combinations after the window
['0022', '0202', '0121', '0211', '0031', '1101', '0220', '0130', '1020', '0023', '1011', '2000', '1110', '0300', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
removed
[1, 1, 0, 1]
not removed
[0, 2, 2, 0]
removed
[0, 1, 3, 0]
removed
[1, 0, 2, 0]
removed
[0, 0, 2, 3]
removed
[1, 0, 1, 1]
removed
Going to 2 tenants
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
removed
Going to 5 tenants
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 6 tenants
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 7 tenants
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 8 tenants
Going to 10 tenants
[0, 2, 0, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 1, 1]
not removed
Going to 11 tenants
Starting at index 1 with window 3
['0022', '0202', '0121', '0211', '2000', '1110', '0300', '1101', '0031', '0301', '0220', '0130', '1020', '0023', '1011', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 3
Getting next batch of experiments for 9 tenants
min_conf: 0 2 0 2
min_conf_dec: 1
1
[0, 2, 0, 2]
2
[0, 1, 2, 1]
3
[0, 2, 1, 1]
{'0': [[2, 0, 2], [1, 2, 1], [2, 1, 1]]}
{'2': [[0, 2, 0], [1, 1, 0]], '1': [[2, 1, 0]]}
{'0': [[2, 0, 2]], '2': [[1, 0, 1]], '1': [[1, 0, 2]]}
{'2': [[0, 2, 0]], '1': [[0, 1, 2], [0, 2, 1]]}
Next possible experiments for next nb of tenants
{'0': [[2, 0, 2], [1, 2, 1], [2, 1, 1]]}
Elementstr: [[0,2,0,2];[0,1,2,1];[0,2,1,1]]
Min replicacount:0 2 0 2
Max replicacount:0 2 1 1
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 1e-09
[0, 2, 1, 1] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0102', '0011', '1000', '0101', '0020', '0110', '0200', '1001', '0111', '0021', '1010', '1100', '0201', '0030', '0120', '0210', '0300', '0013', '1002', '0103', '0022', '1011', '2000', '0112', '1101', '0202', '0031', '1020', '0121', '1110', '0211', '1200', '0301', '1003', '0130', '0220', '0310', '0023', '1012', '2001', '0113', '1102', '0203', '0032', '1021', '2010', '0122', '1111', '2100', '0212', '1201', '0302', '1030', '0131', '1120', '0221', '1210', '0311', '1300', '1013', '2002', '1103', '0230', '0320', '0033', '1022', '2011', '3000', '0123', '1112', '2101', '0213', '1202', '0303', '1031', '2020', '0132', '1121', '2110', '0222', '1211', '2200', '0312', '1301', '2003', '1130', '0231', '1220', '0321', '1310', '1023', '2012', '3001', '1113', '2102', '1203', '0330', '1032', '2021', '3010', '0133', '1122', '2111', '3100', '0223', '1212', '2201', '0313', '1302', '2030', '1131', '2120', '0232', '1221', '2210', '0322', '1311', '2300', '2013', '3002', '2103', '1230', '0331', '1320', '1033', '2022', '3011', '1123', '2112', '3101', '1213', '2202', '1303', '2031', '3020', '1132', '2121', '3110', '0233', '1222', '2211', '3200', '0323', '1312', '2301', '3003', '2130', '1231', '2220', '0332', '1321', '2310', '2023', '3012', '2113', '3102', '2203', '1330', '2032', '3021', '1133', '2122', '3111', '1223', '2212', '3201', '1313', '2302', '3030', '2131', '3120', '1232', '2221', '3210', '0333', '1322', '2311', '3300', '3013', '3103', '2230', '1331', '2320', '2033', '3022', '2123', '3112', '2213', '3202', '2303', '3031', '2132', '3121', '1233', '2222', '3211', '1323', '2312', '3301', '3130', '2231', '3220', '1332', '2321', '3310', '3023', '3113', '3203', '2330', '3032', '2133', '3122', '2223', '3212', '2313', '3302', '3131', '2232', '3221', '1333', '2322', '3311', '3230', '2331', '3320', '3033', '3123', '3213', '3303', '3132', '2233', '3222', '2323', '3312', '3231', '2332', '3321', '3330', '3133', '3223', '3313', '3232', '2333', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 129.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad65390>, <src.sla.WorkerConf object at 0x7fa2dad65e90>, <src.sla.WorkerConf object at 0x7fa2dad65d50>, <src.sla.WorkerConf object at 0x7fa2dad65dd0>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '1000', '0020', '0110', '0102', '0200', '1001', '0021', '0111', '0013', '1010', '0201', '0030', '0103', '1100', '0120', '1002', '0022', '0210', '0112', '0300', '1011', '0202', '0031', '1101', '0121', '1003', '0023', '2000', '1020', '0211', '0113', '1110', '0301', '0130', '1012', '0203', '0032', '1200', '0220', '1102', '0122', '0310', '2001', '1021', '0212', '1111', '0302', '0131', '1013', '0033', '2010', '1201', '1030', '0221', '1103', '0123', '2100', '1120', '0311', '2002', '1022', '0213', '1210', '0230', '1112', '0303', '0132', '1300', '0320', '2011', '1202', '1031', '0222', '2101', '1121', '0312', '2003', '1023', '3000', '2020', '1211', '0231', '1113', '0133', '2110', '1301', '1130', '0321', '2012', '1203', '1032', '0223', '2200', '1220', '2102', '1122', '0313', '1310', '3001', '0330', '2021', '1212', '0232', '2111', '1302', '1131', '0322', '2013', '1033', '3010', '2201', '2030', '1221', '2103', '1123', '3100', '2120', '1311', '3002', '0331', '2022', '1213', '0233', '2210', '1230', '2112', '1303', '1132', '0323', '2300', '1320', '3011', '2202', '2031', '1222', '3101', '2121', '1312', '3003', '0332', '2023', '3020', '2211', '1231', '2113', '1133', '3110', '2301', '2130', '1321', '3012', '2203', '2032', '1223', '3200', '2220', '3102', '2122', '1313', '0333', '2310', '1330', '3021', '2212', '1232', '3111', '2302', '2131', '1322', '3013', '2033', '3201', '3030', '2221', '3103', '2123', '3120', '2311', '1331', '3022', '2213', '1233', '3210', '2230', '3112', '2303', '2132', '1323', '3300', '2320', '3202', '3031', '2222', '3121', '2312', '1332', '3023', '3211', '2231', '3113', '2133', '3301', '3130', '2321', '3203', '3032', '2223', '3220', '3122', '2313', '1333', '3310', '2330', '3212', '2232', '3302', '3131', '2322', '3033', '3221', '3123', '3311', '2331', '3213', '2233', '3230', '3303', '3132', '2323', '3320', '3222', '3312', '2332', '3231', '3133', '3321', '3223', '3313', '2333', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 6 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
Starting at index 16 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
Starting at index 26 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 36 with window 10
Going to 2 tenants
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 46 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 56 with window 10
Going to 2 tenants
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 66 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 76 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 86 with window 10
Going to 2 tenants
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 96 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 106 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
Starting at index 116 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 126 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 2]
SCALING INDEX = 3
removed
Starting at index 136 with window 10
Going to 2 tenants
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 146 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
Starting at index 156 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
Starting at index 166 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
Starting at index 176 with window 10
Going to 2 tenants
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 186 with window 10
Going to 2 tenants
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 196 with window 10
Going to 2 tenants
[3, 1, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
Starting at index 206 with window 10
Going to 2 tenants
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
Starting at index 216 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 226 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
Starting at index 236 with window 10
Going to 2 tenants
[3, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
Starting at index 246 with window 10
Going to 2 tenants
[3, 2, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 256 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad65390>, <src.sla.WorkerConf object at 0x7fa2dad65e90>, <src.sla.WorkerConf object at 0x7fa2dad65d50>, <src.sla.WorkerConf object at 0x7fa2dad65dd0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2daca1310>, <src.sla.WorkerConf object at 0x7fa2daca1c50>, <src.sla.WorkerConf object at 0x7fa2daca1f90>, <src.sla.WorkerConf object at 0x7fa2daca1490>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac371d0>, <src.sla.WorkerConf object at 0x7fa2dac37610>, <src.sla.WorkerConf object at 0x7fa2dac37a50>, <src.sla.WorkerConf object at 0x7fa2dac37590>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad877d0>, <src.sla.WorkerConf object at 0x7fa2dad87350>, <src.sla.WorkerConf object at 0x7fa2dad876d0>, <src.sla.WorkerConf object at 0x7fa2dad87d10>]]]
Conf 0:
129
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18666666666666668', 'config': '0', 'score': '-0.18666666666666668', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 144.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 2] -> 137
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 2] -> 137
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 137.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 3]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '1', 'score': '-0.25333333333333335', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;1;1;2:
Returning adaptive scaler for  8 tenants and 0;1;1;2:
1
255
['0210', '0022', '0103', '0112', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 9..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 0;2;0;2:
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 143
[0, 1, 1, 2] -> 152
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 143
[0, 1, 1, 2] -> 152
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0133333333333334', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 143.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
Removing tipped over conf
[0, 1, 1, 2]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;0;2:
Returning adaptive scaler for  9 tenants and 0;2;0;2:
1
255
['0022', '0202', '0121', '0211', '2000', '1110', '0300', '1101', '0031', '0301', '0220', '0130', '1020', '0023', '1011', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 0;2;0;2:
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
Moving filtered samples in sorted combinations after the window
['0022', '0202', '0121', '0211', '2000', '1110', '0300', '1101', '0031', '0301', '0220', '0130', '1020', '0023', '1011', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 3 with window 10
[0, 2, 1, 1]
not removed
[2, 0, 0, 0]
removed
[1, 1, 1, 0]
removed
[0, 3, 0, 0]
removed
[1, 1, 0, 1]
not removed
[0, 0, 3, 1]
removed
[0, 3, 0, 1]
not removed
[0, 2, 2, 0]
removed
[0, 1, 3, 0]
removed
[1, 0, 2, 0]
removed
Going to 2 tenants
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
removed
[0, 3, 0, 1]
removed
Going to 5 tenants
[0, 2, 1, 1]
not removed
Going to 6 tenants
[0, 2, 1, 1]
not removed
Going to 7 tenants
[0, 2, 1, 1]
not removed
Going to 8 tenants
[0, 2, 1, 1]
not removed
Going to 9 tenants
Starting at index 3 with window 1
['0022', '0202', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 153
[0, 2, 1, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad5bb90>, <src.sla.WorkerConf object at 0x7fa2dad5bb10>, <src.sla.WorkerConf object at 0x7fa2dad5b410>, <src.sla.WorkerConf object at 0x7fa2dad5b090>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 128.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad359d0>, <src.sla.WorkerConf object at 0x7fa2dad35d10>, <src.sla.WorkerConf object at 0x7fa2dad35250>, <src.sla.WorkerConf object at 0x7fa2dad35950>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad359d0>, <src.sla.WorkerConf object at 0x7fa2dad35d10>, <src.sla.WorkerConf object at 0x7fa2dad35250>, <src.sla.WorkerConf object at 0x7fa2dad35950>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac83790>, <src.sla.WorkerConf object at 0x7fa2dac83050>, <src.sla.WorkerConf object at 0x7fa2dac83ed0>, <src.sla.WorkerConf object at 0x7fa2dac83210>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad22d90>, <src.sla.WorkerConf object at 0x7fa2dad22990>, <src.sla.WorkerConf object at 0x7fa2dad22910>, <src.sla.WorkerConf object at 0x7fa2dad224d0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad87610>, <src.sla.WorkerConf object at 0x7fa2dad879d0>, <src.sla.WorkerConf object at 0x7fa2dad87e10>, <src.sla.WorkerConf object at 0x7fa2dad87510>]]]
Conf 0:
128
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 133.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '0', 'score': '-0.24', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 136.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 3]
Measured completion time is 148.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0202', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 153
[0, 2, 1, 1] -> 144
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 153
[0, 2, 1, 1] -> 144
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.02', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.28', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
Filtered results
[{'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.28', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 144.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
Removing tipped over conf
[0, 2, 0, 2]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 129.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db888410>, <src.sla.WorkerConf object at 0x7fa2db888b50>, <src.sla.WorkerConf object at 0x7fa2db8b5850>, <src.sla.WorkerConf object at 0x7fa2dc0d1790>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db888410>, <src.sla.WorkerConf object at 0x7fa2db888b50>, <src.sla.WorkerConf object at 0x7fa2db8b5850>, <src.sla.WorkerConf object at 0x7fa2dc0d1790>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dd4c8510>, <src.sla.WorkerConf object at 0x7fa2dd4c8650>, <src.sla.WorkerConf object at 0x7fa2dd4c8910>, <src.sla.WorkerConf object at 0x7fa2dd4c8d50>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac83590>, <src.sla.WorkerConf object at 0x7fa2dac83dd0>, <src.sla.WorkerConf object at 0x7fa2dac83550>, <src.sla.WorkerConf object at 0x7fa2dac838d0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac33990>, <src.sla.WorkerConf object at 0x7fa2dac33890>, <src.sla.WorkerConf object at 0x7fa2dac33b50>, <src.sla.WorkerConf object at 0x7fa2dac338d0>]]]
Conf 0:
129
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 139.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 144.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '144', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 144.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;3:
Returning adaptive scaler for  6 tenants and 0;1;0;3:
1
255
['0022', '0103', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '159', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '159', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2dad5c7d0>, <src.sla.WorkerConf object at 0x7fa2dad5cf10>, <src.sla.WorkerConf object at 0x7fa2dad5cc90>, <src.sla.WorkerConf object at 0x7fa2dad5cb50>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 0, 3]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
37
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 1, 0, 3]
Moving filtered samples in sorted combinations after the window
['0022', '0021', '0111', '1010', '0030', '0120', '1001', '0300', '0210', '0201', '1100', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 2, 1]
removed
[0, 1, 1, 1]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 3, 0, 0]
removed
[0, 2, 1, 0]
removed
[0, 2, 0, 1]
not removed
[1, 1, 0, 0]
removed
Going to 2 tenants
[0, 1, 1, 1]
not removed
[0, 2, 0, 1]
removed
Going to 5 tenants
[0, 1, 1, 1]
not removed
Going to 6 tenants
Going to 7 tenants
[0, 1, 1, 1]
not removed
Going to 8 tenants
[0, 1, 1, 1]
not removed
Going to 9 tenants
[0, 1, 1, 1]
not removed
Going to 10 tenants
[0, 1, 1, 1]
not removed
Going to 11 tenants
Starting at index 1 with window 1
['0022', '0111', '0021', '0201', '1002', '1010', '0030', '0120', '1001', '0300', '0210', '0031', '1100', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 1
Getting next batch of experiments for 6 tenants
min_conf: 0 1 1 1
min_conf_dec: 1
1
[0, 1, 1, 1]
{'0': [[1, 1, 1]]}
{'1': [[1, 1, 0]]}
{'1': [[1, 0, 1]]}
{'1': [[0, 1, 1]]}
Next possible experiments for next nb of tenants
{'0': [[1, 1, 1]]}
Elementstr: [[0,1,1,1]]
Min replicacount:0 1 1 1
Max replicacount:0 1 1 1
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 1] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 143.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 123.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad4cc10>, <src.sla.WorkerConf object at 0x7fa2dad4c790>, <src.sla.WorkerConf object at 0x7fa2dad4ca50>, <src.sla.WorkerConf object at 0x7fa2dad4cc50>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad4cc10>, <src.sla.WorkerConf object at 0x7fa2dad4c790>, <src.sla.WorkerConf object at 0x7fa2dad4ca50>, <src.sla.WorkerConf object at 0x7fa2dad4cc50>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac33c50>, <src.sla.WorkerConf object at 0x7fa2dac33950>, <src.sla.WorkerConf object at 0x7fa2dac33ad0>, <src.sla.WorkerConf object at 0x7fa2dac33bd0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2daca1710>, <src.sla.WorkerConf object at 0x7fa2daca14d0>, <src.sla.WorkerConf object at 0x7fa2daca1390>, <src.sla.WorkerConf object at 0x7fa2daca1410>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad58990>, <src.sla.WorkerConf object at 0x7fa2dad58d50>, <src.sla.WorkerConf object at 0x7fa2dad4cd10>, <src.sla.WorkerConf object at 0x7fa2dd4c4390>]]]
Conf 0:
123
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0102', '0101', '0111', '0201', '1000', '0020', '0110', '0200', '1100', '1001', '0021', '0030', '1010', '0120', '0013', '0210', '0103', '0300', '1002', '0022', '0112', '1011', '0202', '1101', '2000', '0031', '0121', '1020', '0211', '1110', '0301', '1003', '1200', '0130', '0023', '0220', '0113', '0310', '1012', '0203', '1102', '2001', '0032', '0122', '1021', '0212', '1111', '2010', '0302', '1201', '2100', '0131', '1030', '0221', '1120', '0311', '1013', '1210', '1103', '1300', '2002', '0033', '0230', '0123', '0320', '1022', '0213', '1112', '2011', '0303', '1202', '2101', '3000', '0132', '1031', '0222', '1121', '2020', '0312', '1211', '2110', '1301', '2003', '2200', '0231', '1130', '0321', '1023', '1220', '1113', '1310', '2012', '1203', '2102', '3001', '0133', '0330', '1032', '0223', '1122', '2021', '0313', '1212', '2111', '3010', '1302', '2201', '3100', '0232', '1131', '2030', '0322', '1221', '2120', '1311', '2013', '2210', '2103', '2300', '3002', '0331', '1033', '1230', '1123', '1320', '2022', '1213', '2112', '3011', '1303', '2202', '3101', '0233', '1132', '2031', '0323', '1222', '2121', '3020', '1312', '2211', '3110', '2301', '3003', '3200', '0332', '1231', '2130', '1321', '2023', '2220', '2113', '2310', '3012', '2203', '3102', '1133', '1330', '2032', '1223', '2122', '3021', '1313', '2212', '3111', '2302', '3201', '0333', '1232', '2131', '3030', '1322', '2221', '3120', '2311', '3013', '3210', '3103', '3300', '1331', '2033', '2230', '2123', '2320', '3022', '2213', '3112', '2303', '3202', '1233', '2132', '3031', '1323', '2222', '3121', '2312', '3211', '3301', '1332', '2231', '3130', '2321', '3023', '3220', '3113', '3310', '3203', '2133', '2330', '3032', '2223', '3122', '2313', '3212', '3302', '1333', '2232', '3131', '2322', '3221', '3311', '2331', '3033', '3230', '3123', '3320', '3213', '3303', '2233', '3132', '2323', '3222', '3312', '2332', '3231', '3321', '3133', '3330', '3223', '3313', '2333', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 128.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db8af150>, <src.sla.WorkerConf object at 0x7fa2db8af910>, <src.sla.WorkerConf object at 0x7fa2db8afcd0>, <src.sla.WorkerConf object at 0x7fa2db8afb10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
3
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
2
2
Moving filtered samples in sorted combinations after the window
['0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '0111', '1001', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0031', '0103', '0300', '1002', '0112', '1011', '0121', '1020', '0130', '0202', '1101', '2000', '0211', '1110', '0023', '0220', '0032', '0301', '1003', '1200', '0113', '0310', '1012', '0122', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '2010', '0221', '1120', '0033', '0230', '0302', '1201', '2100', '0311', '1013', '1210', '0123', '0320', '1022', '0132', '1031', '1103', '1300', '2002', '0213', '1112', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '3000', '0312', '1211', '2110', '0321', '1023', '1220', '0133', '0330', '1032', '1301', '2003', '2200', '1113', '1310', '2012', '0223', '1122', '2021', '0232', '1131', '2030', '1203', '2102', '3001', '0313', '1212', '2111', '3010', '0322', '1221', '2120', '0331', '1033', '1230', '1302', '2201', '3100', '1311', '2013', '2210', '1123', '1320', '2022', '0233', '1132', '2031', '2103', '2300', '3002', '1213', '2112', '3011', '0323', '1222', '2121', '3020', '0332', '1231', '2130', '1303', '2202', '3101', '1312', '2211', '3110', '1321', '2023', '2220', '1133', '1330', '2032', '2301', '3003', '3200', '2113', '2310', '3012', '1223', '2122', '3021', '0333', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2221', '3120', '1331', '2033', '2230', '2302', '3201', '2311', '3013', '3210', '2123', '2320', '3022', '1233', '2132', '3031', '3103', '3300', '2213', '3112', '1323', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3211', '2321', '3023', '3220', '2133', '2330', '3032', '3301', '3113', '3310', '2223', '3122', '1333', '2232', '3131', '3203', '2313', '3212', '2322', '3221', '2331', '3033', '3230', '3302', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 8 with window 10
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
not removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
Going to 2 tenants
[0, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 18 with window 10
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 28 with window 10
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 38 with window 10
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 48 with window 10
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 58 with window 10
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
Starting at index 68 with window 10
[2, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 78 with window 10
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 88 with window 10
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
Starting at index 98 with window 10
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 108 with window 10
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
Starting at index 118 with window 10
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 128 with window 10
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 138 with window 10
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
Starting at index 148 with window 10
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
Starting at index 158 with window 10
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 168 with window 10
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 178 with window 10
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 188 with window 10
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 198 with window 10
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 208 with window 10
[3, 1, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 218 with window 10
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
Starting at index 228 with window 10
[3, 1, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
Starting at index 238 with window 10
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
Starting at index 248 with window 10
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 258 with window 10
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
3
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db8af150>, <src.sla.WorkerConf object at 0x7fa2db8af910>, <src.sla.WorkerConf object at 0x7fa2db8afcd0>, <src.sla.WorkerConf object at 0x7fa2db8afb10>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad4c3d0>, <src.sla.WorkerConf object at 0x7fa2dad4c690>, <src.sla.WorkerConf object at 0x7fa2dad4cf10>, <src.sla.WorkerConf object at 0x7fa2dad4ca10>]]]
Conf 0:
128
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 140.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '144', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;1;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;1;1:
Returning adaptive scaler for  6 tenants and 0;1;1;1:
1
255
['0022', '0111', '0021', '0201', '1002', '1010', '0030', '0120', '1001', '0300', '0210', '0031', '1100', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '158', 'Successfull': 'true'}
Starting at: 1
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '158', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 7..10
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 7
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 7
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 8
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 8
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 9
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
REMOVING CONFS FOR NB OF TENANTS: 9
UPDATING RUNTIME MANAGER FOR NB OF TENANTS: 10
Returning adaptive scaler for  10 tenants and 0;2;0;2:
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
REMOVING CONFS FOR NB OF TENANTS: 10
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 1] -> 158
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 1, 1] -> 158
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0533333333333332', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '158', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7fa2daddd650>, <src.sla.WorkerConf object at 0x7fa2dadddf90>, <src.sla.WorkerConf object at 0x7fa2dadddcd0>, <src.sla.WorkerConf object at 0x7fa2daddde90>]], [{}, [], [<src.sla.WorkerConf object at 0x7fa2dad42890>, <src.sla.WorkerConf object at 0x7fa2dad422d0>, <src.sla.WorkerConf object at 0x7fa2dad42c90>, <src.sla.WorkerConf object at 0x7fa2dad423d0>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 1, 1]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
40
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[0, 1, 1, 1]
Moving filtered samples in sorted combinations after the window
['0022', '0021', '0201', '1002', '1010', '0030', '0120', '1001', '0300', '0210', '0031', '1100', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 1 with window 10
[0, 0, 2, 1]
removed
[0, 2, 0, 1]
not removed
[1, 0, 0, 2]
not removed
[1, 0, 1, 0]
removed
[0, 0, 3, 0]
removed
[0, 1, 2, 0]
removed
[1, 0, 0, 1]
removed
[0, 3, 0, 0]
removed
[0, 2, 1, 0]
removed
[0, 0, 3, 1]
removed
Going to 2 tenants
[0, 2, 0, 1]
removed
[1, 0, 0, 2]
not removed
Going to 5 tenants
[1, 0, 0, 2]
not removed
Going to 6 tenants
Going to 7 tenants
[1, 0, 0, 2]
not removed
Going to 8 tenants
[1, 0, 0, 2]
not removed
Going to 9 tenants
[1, 0, 0, 2]
removed
Starting at index 11 with window 10
[0, 2, 1, 0]
removed
[0, 0, 3, 1]
removed
[1, 0, 1, 1]
removed
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[1, 0, 2, 0]
removed
[1, 1, 0, 1]
not removed
[2, 0, 0, 0]
removed
[0, 1, 3, 0]
removed
[0, 2, 1, 1]
not removed
Going to 2 tenants
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[1, 1, 0, 1]
removed
[0, 2, 1, 1]
not removed
Going to 5 tenants
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[0, 2, 1, 1]
not removed
Going to 6 tenants
Going to 7 tenants
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[0, 2, 1, 1]
not removed
Going to 8 tenants
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[0, 2, 1, 1]
not removed
Going to 9 tenants
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
not removed
[0, 2, 1, 1]
not removed
Going to 11 tenants
Starting at index 11 with window 3
['0022', '1002', '0201', '0021', '1100', '0112', '1010', '0030', '0120', '1001', '0300', '0121', '0202', '0211', '0210', '0031', '1101', '1011', '1110', '0023', '1020', '0220', '2000', '0130', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 11 with window 3
Getting next batch of experiments for 6 tenants
min_conf: 0 1 2 1
min_conf_dec: 11
11
[0, 1, 2, 1]
12
[0, 2, 0, 2]
13
[0, 2, 1, 1]
{'0': [[1, 2, 1], [2, 0, 2], [2, 1, 1]]}
{'1': [[2, 1, 0]], '2': [[0, 2, 0], [1, 1, 0]]}
{'2': [[1, 0, 1]], '0': [[2, 0, 2]], '1': [[1, 0, 2]]}
{'1': [[0, 1, 2], [0, 2, 1]], '2': [[0, 2, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 2, 1], [2, 0, 2], [2, 1, 1]]}
Elementstr: [[0,1,2,1];[0,2,0,2];[0,2,1,1]]
Min replicacount:0 1 2 1
Max replicacount:0 2 1 1
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 1e-09
[0, 2, 1, 1] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 129.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dade2950>, <src.sla.WorkerConf object at 0x7fa2dade2ed0>, <src.sla.WorkerConf object at 0x7fa2dade2b90>, <src.sla.WorkerConf object at 0x7fa2dade2450>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dade2950>, <src.sla.WorkerConf object at 0x7fa2dade2ed0>, <src.sla.WorkerConf object at 0x7fa2dade2b90>, <src.sla.WorkerConf object at 0x7fa2dade2450>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dadc09d0>, <src.sla.WorkerConf object at 0x7fa2dadc0990>, <src.sla.WorkerConf object at 0x7fa2dad580d0>, <src.sla.WorkerConf object at 0x7fa2dad58790>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad3d5d0>, <src.sla.WorkerConf object at 0x7fa2dad3d290>, <src.sla.WorkerConf object at 0x7fa2dad3d4d0>, <src.sla.WorkerConf object at 0x7fa2dad3d0d0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad58490>, <src.sla.WorkerConf object at 0x7fa2dad58890>, <src.sla.WorkerConf object at 0x7fa2dad58e10>, <src.sla.WorkerConf object at 0x7fa2dad58150>]]]
Conf 0:
129
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0020', '0101', '1000', '0110', '0200', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '1020', '0202', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '1021', '0203', '1102', '2001', '0131', '1030', '0212', '1111', '2010', '0221', '1120', '0302', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '1031', '0213', '1112', '2011', '0222', '1121', '2020', '0303', '1202', '2101', '3000', '0231', '1130', '0312', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '2021', '1203', '2102', '3001', '0232', '1131', '2030', '0313', '1212', '2111', '3010', '0322', '1221', '2120', '1302', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '2031', '1213', '2112', '3011', '0323', '1222', '2121', '3020', '1303', '2202', '3101', '0332', '1231', '2130', '1312', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '3021', '2203', '3102', '0333', '1232', '2131', '3030', '1313', '2212', '3111', '1322', '2221', '3120', '2302', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '3031', '2213', '3112', '1323', '2222', '3121', '2303', '3202', '1332', '2231', '3130', '2312', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '3131', '2313', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '134', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 134.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '0', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;2;0;2:
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
['0022', '1002', '0201', '0021', '1100', '0112', '1010', '0030', '0120', '1001', '0300', '0121', '0202', '0211', '0210', '0031', '1101', '1011', '1110', '0023', '1020', '0220', '2000', '0130', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}]
Moving filtered samples in sorted combinations after the window
['0022', '1002', '0201', '0021', '1100', '0112', '1010', '0030', '0120', '1001', '0300', '0121', '0202', '0211', '0210', '0031', '1101', '1011', '1110', '0023', '1020', '0220', '2000', '0130', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 13 with window 10
[0, 2, 1, 1]
not removed
[0, 2, 1, 0]
removed
[0, 0, 3, 1]
removed
[1, 1, 0, 1]
not removed
[1, 0, 1, 1]
removed
[1, 1, 1, 0]
removed
[0, 0, 2, 3]
removed
[1, 0, 2, 0]
removed
[0, 2, 2, 0]
removed
[2, 0, 0, 0]
removed
Going to 2 tenants
[0, 2, 1, 1]
not removed
[1, 1, 0, 1]
removed
Going to 5 tenants
[0, 2, 1, 1]
not removed
Going to 6 tenants
Going to 7 tenants
[0, 2, 1, 1]
not removed
Going to 8 tenants
[0, 2, 1, 1]
not removed
Going to 9 tenants
[0, 2, 1, 1]
not removed
Going to 11 tenants
Starting at index 13 with window 1
['0022', '1002', '0201', '0021', '1100', '0112', '1010', '0030', '0120', '1001', '0300', '0121', '0202', '0211', '0130', '1101', '0210', '0031', '0301', '1011', '1110', '0023', '1020', '0220', '2000', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 123
[0, 2, 1, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad87610>, <src.sla.WorkerConf object at 0x7fa2dad87290>, <src.sla.WorkerConf object at 0x7fa2dad87510>, <src.sla.WorkerConf object at 0x7fa2dad87350>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 129.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad48e90>, <src.sla.WorkerConf object at 0x7fa2dad48fd0>, <src.sla.WorkerConf object at 0x7fa2dad48150>, <src.sla.WorkerConf object at 0x7fa2dad48890>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad48e90>, <src.sla.WorkerConf object at 0x7fa2dad48fd0>, <src.sla.WorkerConf object at 0x7fa2dad48150>, <src.sla.WorkerConf object at 0x7fa2dad48890>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad5bc90>, <src.sla.WorkerConf object at 0x7fa2dad5b090>, <src.sla.WorkerConf object at 0x7fa2dad5bc50>, <src.sla.WorkerConf object at 0x7fa2dad5bf10>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad65510>, <src.sla.WorkerConf object at 0x7fa2dad65c50>, <src.sla.WorkerConf object at 0x7fa2dad65c90>, <src.sla.WorkerConf object at 0x7fa2dad65650>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad4ccd0>, <src.sla.WorkerConf object at 0x7fa2dad4c210>, <src.sla.WorkerConf object at 0x7fa2dad4c450>, <src.sla.WorkerConf object at 0x7fa2dad4ce90>]]]
Conf 0:
129
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '134', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0020', '0101', '1000', '0110', '0200', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '1020', '0202', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '1021', '0203', '1102', '2001', '0131', '1030', '0212', '1111', '2010', '0221', '1120', '0302', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '1031', '0213', '1112', '2011', '0222', '1121', '2020', '0303', '1202', '2101', '3000', '0231', '1130', '0312', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '2021', '1203', '2102', '3001', '0232', '1131', '2030', '0313', '1212', '2111', '3010', '0322', '1221', '2120', '1302', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '2031', '1213', '2112', '3011', '0323', '1222', '2121', '3020', '1303', '2202', '3101', '0332', '1231', '2130', '1312', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '3021', '2203', '3102', '0333', '1232', '2131', '3030', '1313', '2212', '3111', '1322', '2221', '3120', '2302', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '3031', '2213', '3112', '1323', '2222', '3121', '2303', '3202', '1332', '2231', '3130', '2312', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '3131', '2313', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '137', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 137.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.28', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;2;1;1:
Returning adaptive scaler for  6 tenants and 0;2;1;1:
1
255
['0022', '1002', '0201', '0021', '1100', '0112', '1010', '0030', '0120', '1001', '0300', '0121', '0202', '0211', '0130', '1101', '0210', '0031', '0301', '1011', '1110', '0023', '1020', '0220', '2000', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 123
[0, 2, 1, 1] -> 120
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 2, 0, 2] -> 123
[0, 2, 1, 1] -> 120
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 123.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad87610>, <src.sla.WorkerConf object at 0x7fa2dad87290>, <src.sla.WorkerConf object at 0x7fa2dad87510>, <src.sla.WorkerConf object at 0x7fa2dad87350>]], [{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}, [0, 2, 1, 1], [<src.sla.WorkerConf object at 0x7fa2daddd510>, <src.sla.WorkerConf object at 0x7fa2daddd650>, <src.sla.WorkerConf object at 0x7fa2dadddb10>, <src.sla.WorkerConf object at 0x7fa2dadddd10>]], [{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac83790>, <src.sla.WorkerConf object at 0x7fa2dac830d0>, <src.sla.WorkerConf object at 0x7fa2dac83f50>, <src.sla.WorkerConf object at 0x7fa2dac83f10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_2_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad87610>, <src.sla.WorkerConf object at 0x7fa2dad87290>, <src.sla.WorkerConf object at 0x7fa2dad87510>, <src.sla.WorkerConf object at 0x7fa2dad87350>]], [{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '120', 'Successfull': 'true'}, [0, 2, 1, 1], [<src.sla.WorkerConf object at 0x7fa2daddd510>, <src.sla.WorkerConf object at 0x7fa2daddd650>, <src.sla.WorkerConf object at 0x7fa2dadddb10>, <src.sla.WorkerConf object at 0x7fa2dadddd10>]], [{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac83790>, <src.sla.WorkerConf object at 0x7fa2dac830d0>, <src.sla.WorkerConf object at 0x7fa2dac83f50>, <src.sla.WorkerConf object at 0x7fa2dac83f10>]]]
Conf 0:
123
Conf 1:
120
Conf 2:
123
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;2;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '123', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking scaling function:
[]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 15 with window 1
[0, 2, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 148.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 149.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 130.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad42c90>, <src.sla.WorkerConf object at 0x7fa2dad42290>, <src.sla.WorkerConf object at 0x7fa2dad42cd0>, <src.sla.WorkerConf object at 0x7fa2dad42450>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad42c90>, <src.sla.WorkerConf object at 0x7fa2dad42290>, <src.sla.WorkerConf object at 0x7fa2dad42cd0>, <src.sla.WorkerConf object at 0x7fa2dad42450>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2daca1450>, <src.sla.WorkerConf object at 0x7fa2daca1d50>, <src.sla.WorkerConf object at 0x7fa2daca1e90>, <src.sla.WorkerConf object at 0x7fa2daca11d0>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad22510>, <src.sla.WorkerConf object at 0x7fa2dad22350>, <src.sla.WorkerConf object at 0x7fa2dad22950>, <src.sla.WorkerConf object at 0x7fa2dad22a10>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad5c050>, <src.sla.WorkerConf object at 0x7fa2dad5ced0>, <src.sla.WorkerConf object at 0x7fa2dd4cd950>, <src.sla.WorkerConf object at 0x7fa2dd4c4710>]]]
Conf 0:
130
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '137', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0020', '0101', '1000', '0110', '0200', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '1020', '0202', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '1021', '0203', '1102', '2001', '0131', '1030', '0212', '1111', '2010', '0221', '1120', '0302', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '1031', '0213', '1112', '2011', '0222', '1121', '2020', '0303', '1202', '2101', '3000', '0231', '1130', '0312', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '2021', '1203', '2102', '3001', '0232', '1131', '2030', '0313', '1212', '2111', '3010', '0322', '1221', '2120', '1302', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '2031', '1213', '2112', '3011', '0323', '1222', '2121', '3020', '1303', '2202', '3101', '0332', '1231', '2130', '1312', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '3021', '2203', '3102', '0333', '1232', '2131', '3030', '1313', '2212', '3111', '1322', '2221', '3120', '2302', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '3031', '2213', '3112', '1323', '2222', '3121', '2303', '3202', '1332', '2231', '3130', '2312', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '3131', '2313', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '149', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 149.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '123', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;2;0;2:
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
['0021', '1001', '1010', '0030', '0201', '1100', '0120', '0210', '0022', '1002', '0300', '0112', '0031', '1011', '0121', '0202', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0023', '0220', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}
Starting at: 15
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 130.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db8af390>, <src.sla.WorkerConf object at 0x7fa2db8afb90>, <src.sla.WorkerConf object at 0x7fa2db8af350>, <src.sla.WorkerConf object at 0x7fa2db8afc10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_2_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db8af390>, <src.sla.WorkerConf object at 0x7fa2db8afb90>, <src.sla.WorkerConf object at 0x7fa2db8af350>, <src.sla.WorkerConf object at 0x7fa2db8afc10>]]]
Conf 0:
130
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;2;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '130', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking scaling function:
[]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 15 with window 1
[0, 2, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '148', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '147', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 147.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Starting at: 0
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;2:
Returning adaptive scaler for  1 tenants and 0;1;0;2:
1
255
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0210', '0013', '0300', '0103', '0022', '1002', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0220', '1200', '0023', '1003', '0310', '0113', '0032', '1012', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0311', '0230', '1210', '0033', '1013', '0320', '1300', '0123', '1103', '1022', '2002', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '0321', '1301', '1220', '2200', '1023', '2003', '0330', '1310', '0133', '1113', '1032', '2012', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '0331', '1311', '1230', '2210', '1033', '2013', '1320', '2300', '1123', '2103', '2022', '3002', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '1321', '2301', '2220', '3200', '2023', '3003', '1330', '2310', '1133', '2113', '2032', '3012', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '1331', '2311', '2230', '3210', '2033', '3013', '2320', '3300', '2123', '3103', '3022', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '2321', '3301', '3220', '3023', '2330', '3310', '2133', '3113', '3032', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '2331', '3311', '3230', '3033', '3320', '3123', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 127.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dd4c4850>, <src.sla.WorkerConf object at 0x7fa2dd4c4b90>, <src.sla.WorkerConf object at 0x7fa2dd4c47d0>, <src.sla.WorkerConf object at 0x7fa2dd4c4a90>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_1_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
SCALE DOWN DIFF
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0112', '0300', '0031', '1011', '0202', '0121', '1101', '0023', '1003', '1020', '2000', '0211', '0113', '0130', '1110', '0301', '0032', '1012', '0203', '0220', '1200', '0122', '1102', '0310', '1021', '2001', '0212', '0131', '1111', '0302', '0033', '1013', '1030', '2010', '0221', '1201', '0123', '1103', '1120', '2100', '0311', '1022', '2002', '0213', '0230', '1210', '0132', '1112', '0303', '0320', '1300', '1031', '2011', '0222', '1202', '1121', '2101', '0312', '1023', '2003', '2020', '3000', '0231', '1211', '0133', '1113', '1130', '2110', '0321', '1301', '1032', '2012', '0223', '1203', '1220', '2200', '1122', '2102', '0313', '0330', '1310', '2021', '3001', '0232', '1212', '1131', '2111', '0322', '1302', '1033', '2013', '2030', '3010', '1221', '2201', '1123', '2103', '2120', '3100', '0331', '1311', '2022', '3002', '0233', '1213', '1230', '2210', '1132', '2112', '0323', '1303', '1320', '2300', '2031', '3011', '1222', '2202', '2121', '3101', '0332', '1312', '2023', '3003', '3020', '1231', '2211', '1133', '2113', '2130', '3110', '1321', '2301', '2032', '3012', '1223', '2203', '2220', '3200', '2122', '3102', '0333', '1313', '1330', '2310', '3021', '1232', '2212', '2131', '3111', '1322', '2302', '2033', '3013', '3030', '2221', '3201', '2123', '3103', '3120', '1331', '2311', '3022', '1233', '2213', '2230', '3210', '2132', '3112', '1323', '2303', '2320', '3300', '3031', '2222', '3202', '3121', '1332', '2312', '3023', '2231', '3211', '2133', '3113', '3130', '2321', '3301', '3032', '2223', '3203', '3220', '3122', '1333', '2313', '2330', '3310', '2232', '3212', '3131', '2322', '3302', '3033', '3221', '3123', '2331', '3311', '2233', '3213', '3230', '3132', '2323', '3303', '3320', '3222', '2332', '3312', '3231', '3133', '3321', '3223', '2333', '3313', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 0, 1, 3]
SCALING INDEX = 3
removed
[0, 0, 3, 0]
SCALING INDEX = 3
removed
[1, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 0, 1]
SCALING INDEX = 3
removed
[0, 1, 0, 3]
SCALING INDEX = 3
removed
[0, 1, 2, 0]
SCALING INDEX = 3
removed
Starting at index 17 with window 10
Going to 2 tenants
[1, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 0]
SCALING INDEX = 3
removed
[0, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 0]
SCALING INDEX = 3
removed
[0, 0, 3, 1]
SCALING INDEX = 3
removed
[1, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 0, 2]
SCALING INDEX = 3
removed
[0, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 0, 2, 3]
SCALING INDEX = 3
removed
[1, 0, 0, 3]
SCALING INDEX = 3
removed
[1, 0, 2, 0]
SCALING INDEX = 3
removed
[2, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 1, 3]
SCALING INDEX = 3
removed
[0, 1, 3, 0]
SCALING INDEX = 3
removed
[1, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 3, 2]
SCALING INDEX = 3
removed
[1, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 0, 3]
SCALING INDEX = 3
removed
[0, 2, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 0, 0]
SCALING INDEX = 3
removed
[0, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 0]
SCALING INDEX = 3
removed
[1, 0, 2, 1]
SCALING INDEX = 3
removed
[2, 0, 0, 1]
SCALING INDEX = 3
removed
Starting at index 47 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 3
removed
[0, 1, 3, 1]
SCALING INDEX = 3
removed
[1, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 0, 2]
SCALING INDEX = 3
removed
[0, 0, 3, 3]
SCALING INDEX = 3
removed
[1, 0, 1, 3]
SCALING INDEX = 3
removed
[1, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 0, 1, 0]
SCALING INDEX = 3
removed
[0, 2, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 3
removed
[1, 1, 0, 3]
SCALING INDEX = 3
removed
[1, 1, 2, 0]
SCALING INDEX = 3
removed
[2, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 1, 1]
SCALING INDEX = 3
removed
[1, 0, 2, 2]
SCALING INDEX = 3
removed
[2, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 1, 3]
SCALING INDEX = 3
removed
[0, 2, 3, 0]
SCALING INDEX = 3
removed
[1, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 1, 3, 2]
SCALING INDEX = 3
removed
[1, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 0, 3]
SCALING INDEX = 3
removed
[0, 3, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 0, 0]
SCALING INDEX = 3
removed
[1, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 0, 1, 1]
SCALING INDEX = 3
removed
[0, 2, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 0, 2]
SCALING INDEX = 3
removed
[1, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 77 with window 10
Going to 2 tenants
[2, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 1, 2]
SCALING INDEX = 3
removed
[1, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 0, 0, 3]
SCALING INDEX = 3
removed
[2, 0, 2, 0]
SCALING INDEX = 3
removed
[3, 0, 0, 0]
SCALING INDEX = 3
removed
[0, 2, 3, 1]
SCALING INDEX = 3
removed
[1, 2, 1, 1]
SCALING INDEX = 3
removed
[0, 1, 3, 3]
SCALING INDEX = 3
removed
[1, 1, 1, 3]
SCALING INDEX = 3
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 1, 1, 0]
SCALING INDEX = 3
removed
[0, 3, 2, 1]
SCALING INDEX = 3
removed
[1, 3, 0, 1]
SCALING INDEX = 3
removed
[1, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 0, 1, 2]
SCALING INDEX = 3
removed
[0, 2, 2, 3]
SCALING INDEX = 3
removed
[1, 2, 0, 3]
SCALING INDEX = 3
removed
[1, 2, 2, 0]
SCALING INDEX = 3
removed
[2, 2, 0, 0]
SCALING INDEX = 3
removed
Starting at index 97 with window 10
Going to 2 tenants
[1, 1, 2, 2]
SCALING INDEX = 3
removed
[2, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 1, 3]
SCALING INDEX = 3
removed
[0, 3, 3, 0]
SCALING INDEX = 3
removed
[1, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 0, 2, 1]
SCALING INDEX = 3
removed
[3, 0, 0, 1]
SCALING INDEX = 3
removed
[0, 2, 3, 2]
SCALING INDEX = 3
removed
[1, 2, 1, 2]
SCALING INDEX = 3
removed
[1, 1, 3, 1]
SCALING INDEX = 3
removed
Starting at index 107 with window 10
Going to 2 tenants
[2, 1, 1, 1]
SCALING INDEX = 3
removed
[0, 3, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 0, 2]
SCALING INDEX = 3
removed
[1, 0, 3, 3]
SCALING INDEX = 3
removed
[2, 0, 1, 3]
SCALING INDEX = 3
removed
[2, 0, 3, 0]
SCALING INDEX = 3
removed
[3, 0, 1, 0]
SCALING INDEX = 3
removed
[1, 2, 2, 1]
SCALING INDEX = 3
removed
[2, 2, 0, 1]
SCALING INDEX = 3
removed
[1, 1, 2, 3]
SCALING INDEX = 3
removed
Starting at index 117 with window 10
Going to 2 tenants
[2, 1, 0, 3]
SCALING INDEX = 3
removed
[2, 1, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 0, 0]
SCALING INDEX = 3
removed
[0, 3, 3, 1]
SCALING INDEX = 3
removed
[1, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 0, 2, 2]
SCALING INDEX = 3
removed
[3, 0, 0, 2]
SCALING INDEX = 3
removed
[0, 2, 3, 3]
SCALING INDEX = 3
removed
[1, 2, 1, 3]
SCALING INDEX = 3
removed
[1, 2, 3, 0]
SCALING INDEX = 3
removed
Starting at index 127 with window 10
Going to 2 tenants
[2, 2, 1, 0]
SCALING INDEX = 3
removed
[1, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 1, 1, 2]
SCALING INDEX = 3
removed
[0, 3, 2, 3]
SCALING INDEX = 3
removed
[1, 3, 0, 3]
SCALING INDEX = 3
removed
[1, 3, 2, 0]
SCALING INDEX = 3
removed
[2, 3, 0, 0]
SCALING INDEX = 3
removed
[2, 0, 3, 1]
SCALING INDEX = 3
removed
[3, 0, 1, 1]
SCALING INDEX = 3
removed
[1, 2, 2, 2]
SCALING INDEX = 3
removed
Starting at index 137 with window 10
Going to 2 tenants
[2, 2, 0, 2]
SCALING INDEX = 3
removed
[2, 1, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 0, 1]
SCALING INDEX = 3
removed
[0, 3, 3, 2]
SCALING INDEX = 3
removed
[1, 3, 1, 2]
SCALING INDEX = 3
removed
[2, 0, 2, 3]
SCALING INDEX = 3
removed
[3, 0, 0, 3]
SCALING INDEX = 3
removed
[3, 0, 2, 0]
SCALING INDEX = 3
removed
[1, 2, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 1, 1]
SCALING INDEX = 3
removed
Starting at index 147 with window 10
Going to 2 tenants
[1, 1, 3, 3]
SCALING INDEX = 3
removed
[2, 1, 1, 3]
SCALING INDEX = 3
removed
[2, 1, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 1, 0]
SCALING INDEX = 3
removed
[1, 3, 2, 1]
SCALING INDEX = 3
removed
[2, 3, 0, 1]
SCALING INDEX = 3
removed
[2, 0, 3, 2]
SCALING INDEX = 3
removed
[3, 0, 1, 2]
SCALING INDEX = 3
removed
[1, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 0, 3]
SCALING INDEX = 3
removed
Starting at index 157 with window 10
Going to 2 tenants
[2, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 0, 0]
SCALING INDEX = 3
removed
[2, 1, 2, 2]
SCALING INDEX = 3
removed
[3, 1, 0, 2]
SCALING INDEX = 3
removed
[0, 3, 3, 3]
SCALING INDEX = 3
removed
[1, 3, 1, 3]
SCALING INDEX = 3
removed
[1, 3, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 1, 0]
SCALING INDEX = 3
removed
[3, 0, 2, 1]
SCALING INDEX = 3
removed
[1, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 167 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 3
removed
[2, 1, 3, 1]
SCALING INDEX = 3
removed
[3, 1, 1, 1]
SCALING INDEX = 3
removed
[1, 3, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 0, 2]
SCALING INDEX = 3
removed
[2, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 0, 1, 3]
SCALING INDEX = 3
removed
[3, 0, 3, 0]
SCALING INDEX = 3
removed
[2, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 0, 1]
SCALING INDEX = 3
removed
Starting at index 177 with window 10
Going to 2 tenants
[2, 1, 2, 3]
SCALING INDEX = 3
removed
[3, 1, 0, 3]
SCALING INDEX = 3
removed
[3, 1, 2, 0]
SCALING INDEX = 3
removed
[1, 3, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 1, 1]
SCALING INDEX = 3
removed
[3, 0, 2, 2]
SCALING INDEX = 3
removed
[1, 2, 3, 3]
SCALING INDEX = 3
removed
[2, 2, 1, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 1, 0]
SCALING INDEX = 3
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 1, 3, 2]
SCALING INDEX = 3
removed
[3, 1, 1, 2]
SCALING INDEX = 3
removed
[1, 3, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 0, 3]
SCALING INDEX = 3
removed
[2, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 3, 0, 0]
SCALING INDEX = 3
removed
[3, 0, 3, 1]
SCALING INDEX = 3
removed
[2, 2, 2, 2]
SCALING INDEX = 3
removed
[3, 2, 0, 2]
SCALING INDEX = 3
removed
[3, 1, 2, 1]
SCALING INDEX = 3
removed
Starting at index 197 with window 10
Going to 2 tenants
[1, 3, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 0, 2, 3]
SCALING INDEX = 3
removed
[2, 2, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 1, 1]
SCALING INDEX = 3
removed
[2, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 1, 1, 3]
SCALING INDEX = 3
removed
[3, 1, 3, 0]
SCALING INDEX = 3
removed
[2, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 3, 0, 1]
SCALING INDEX = 3
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 3, 2]
SCALING INDEX = 3
removed
[2, 2, 2, 3]
SCALING INDEX = 3
removed
[3, 2, 0, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 0]
SCALING INDEX = 3
removed
[3, 1, 2, 2]
SCALING INDEX = 3
removed
[1, 3, 3, 3]
SCALING INDEX = 3
removed
[2, 3, 1, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 3, 1, 0]
SCALING INDEX = 3
removed
[2, 2, 3, 2]
SCALING INDEX = 3
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 3
removed
[3, 1, 3, 1]
SCALING INDEX = 3
removed
[2, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 0, 2]
SCALING INDEX = 3
removed
[3, 0, 3, 3]
SCALING INDEX = 3
removed
[3, 2, 2, 1]
SCALING INDEX = 3
removed
[3, 1, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 3, 1, 1]
SCALING INDEX = 3
removed
[2, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 2, 1, 3]
SCALING INDEX = 3
removed
[3, 2, 3, 0]
SCALING INDEX = 3
removed
[3, 1, 3, 2]
SCALING INDEX = 3
removed
[2, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 0, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 0]
SCALING INDEX = 3
removed
[3, 2, 2, 2]
SCALING INDEX = 3
removed
[2, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 1, 2]
SCALING INDEX = 3
removed
[3, 2, 3, 1]
SCALING INDEX = 3
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 1, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 1]
SCALING INDEX = 3
removed
[3, 2, 2, 3]
SCALING INDEX = 3
removed
[2, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 1, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 0]
SCALING INDEX = 3
removed
[3, 2, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 2, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 1]
SCALING INDEX = 3
removed
[3, 2, 3, 3]
SCALING INDEX = 3
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
[3, 3, 3, 2]
SCALING INDEX = 3
removed
[3, 3, 3, 3]
SCALING INDEX = 3
removed
[3, 3, 2, 3]
SCALING INDEX = 3
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0020', '0101', '1000', '0110', '0200', '0021', '0030', '0102', '1001', '0111', '1010', '0120', '0013', '0201', '1100', '0022', '0210', '0031', '0103', '1002', '0112', '0300', '1011', '0121', '1020', '0130', '0202', '1101', '0023', '2000', '0211', '1110', '0032', '0220', '1003', '0113', '0301', '1012', '1200', '0122', '0310', '1021', '0131', '1030', '0203', '1102', '2001', '0212', '1111', '0033', '2010', '0221', '1120', '0230', '0302', '1013', '1201', '0123', '2100', '0311', '1022', '1210', '0132', '0320', '1031', '1103', '2002', '0213', '1112', '1300', '2011', '0222', '1121', '2020', '0231', '1130', '0303', '1202', '2101', '0312', '1023', '3000', '1211', '0133', '2110', '0321', '1032', '1220', '0330', '2003', '1113', '1301', '2012', '0223', '2200', '1122', '1310', '2021', '0232', '1131', '2030', '1203', '2102', '0313', '3001', '1212', '2111', '0322', '1033', '3010', '1221', '2120', '0331', '1230', '1302', '2013', '2201', '1123', '3100', '1311', '2022', '0233', '2210', '1132', '1320', '2031', '2103', '3002', '1213', '2112', '0323', '2300', '3011', '1222', '2121', '0332', '3020', '1231', '2130', '1303', '2202', '3101', '1312', '2023', '2211', '1133', '3110', '1321', '2032', '2220', '1330', '3003', '2113', '2301', '3012', '1223', '3200', '2122', '0333', '2310', '3021', '1232', '2131', '3030', '2203', '3102', '1313', '2212', '3111', '1322', '2033', '2221', '3120', '1331', '2230', '2302', '3013', '3201', '2123', '2311', '3022', '1233', '3210', '2132', '2320', '3031', '3103', '2213', '3112', '1323', '3300', '2222', '3121', '1332', '2231', '3130', '2303', '3202', '2312', '3023', '3211', '2133', '2321', '3032', '3220', '2330', '3113', '3301', '2223', '3122', '1333', '3310', '2232', '3131', '3203', '2313', '3212', '2322', '3033', '3221', '2331', '3230', '3302', '3123', '3311', '2233', '3132', '3320', '3213', '2323', '3222', '2332', '3231', '3303', '3312', '3133', '3321', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3332', '3323', '3333']
Starting at index 9 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 0, 1]
SCALING INDEX = 2
removed
[0, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 0, 1, 3]
SCALING INDEX = 2
removed
[0, 2, 0, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 1, 0]
SCALING INDEX = 2
removed
Starting at index 19 with window 10
Going to 2 tenants
[0, 0, 3, 1]
SCALING INDEX = 2
removed
[0, 1, 0, 3]
SCALING INDEX = 2
removed
[1, 0, 0, 2]
SCALING INDEX = 2
removed
[0, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 0, 0]
SCALING INDEX = 2
removed
[1, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 2]
SCALING INDEX = 2
removed
Starting at index 29 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 0]
SCALING INDEX = 2
removed
[0, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 0, 3, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 0, 3]
SCALING INDEX = 2
removed
[0, 1, 1, 3]
SCALING INDEX = 2
removed
[0, 3, 0, 1]
SCALING INDEX = 2
removed
Starting at index 39 with window 10
Going to 2 tenants
[1, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 0, 0]
SCALING INDEX = 2
removed
[0, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 0]
SCALING INDEX = 2
removed
[1, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 0]
SCALING INDEX = 2
removed
[0, 2, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 0, 1]
SCALING INDEX = 2
removed
Starting at index 49 with window 10
Going to 2 tenants
[0, 2, 1, 2]
SCALING INDEX = 2
removed
[1, 1, 1, 1]
SCALING INDEX = 2
removed
[0, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 0, 1, 0]
SCALING INDEX = 2
removed
[0, 2, 2, 1]
SCALING INDEX = 2
removed
[1, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 2]
SCALING INDEX = 2
removed
[1, 0, 1, 3]
SCALING INDEX = 2
removed
[1, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 59 with window 10
Going to 2 tenants
[0, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 0]
SCALING INDEX = 2
removed
[0, 3, 1, 1]
SCALING INDEX = 2
removed
[1, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 0]
SCALING INDEX = 2
removed
[0, 1, 3, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 0]
SCALING INDEX = 2
removed
[1, 0, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 0, 3]
SCALING INDEX = 2
removed
[2, 0, 0, 2]
SCALING INDEX = 2
removed
Starting at index 69 with window 10
Going to 2 tenants
[0, 2, 1, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 0, 1, 1]
SCALING INDEX = 2
removed
[0, 2, 2, 2]
SCALING INDEX = 2
removed
[1, 1, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 0]
SCALING INDEX = 2
removed
[0, 2, 3, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 0]
SCALING INDEX = 2
removed
[0, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 79 with window 10
Going to 2 tenants
[1, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 1, 0, 1]
SCALING INDEX = 2
removed
[0, 3, 1, 2]
SCALING INDEX = 2
removed
[1, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 0]
SCALING INDEX = 2
removed
[1, 2, 1, 1]
SCALING INDEX = 2
removed
[0, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 0]
SCALING INDEX = 2
removed
[0, 3, 2, 1]
SCALING INDEX = 2
removed
[1, 0, 3, 2]
SCALING INDEX = 2
removed
Starting at index 89 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 0]
SCALING INDEX = 2
removed
[2, 0, 0, 3]
SCALING INDEX = 2
removed
[1, 1, 1, 3]
SCALING INDEX = 2
removed
[1, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 0, 1, 2]
SCALING INDEX = 2
removed
[0, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 0]
SCALING INDEX = 2
removed
[1, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 0]
SCALING INDEX = 2
removed
Starting at index 99 with window 10
Going to 2 tenants
[2, 0, 2, 1]
SCALING INDEX = 2
removed
[0, 2, 3, 2]
SCALING INDEX = 2
removed
[1, 1, 3, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 0]
SCALING INDEX = 2
removed
[1, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 0, 2]
SCALING INDEX = 2
removed
[0, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 0, 0, 1]
SCALING INDEX = 2
removed
[1, 2, 1, 2]
SCALING INDEX = 2
removed
[2, 1, 1, 1]
SCALING INDEX = 2
removed
Starting at index 109 with window 10
Going to 2 tenants
[0, 3, 2, 2]
SCALING INDEX = 2
removed
[1, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 0, 1, 0]
SCALING INDEX = 2
removed
[1, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 0]
SCALING INDEX = 2
removed
[0, 3, 3, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 2]
SCALING INDEX = 2
removed
[2, 0, 1, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 1]
SCALING INDEX = 2
removed
Starting at index 119 with window 10
Going to 2 tenants
[1, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 0]
SCALING INDEX = 2
removed
[1, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 0, 2, 2]
SCALING INDEX = 2
removed
[0, 2, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 0]
SCALING INDEX = 2
removed
[1, 1, 3, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 0]
SCALING INDEX = 2
removed
[2, 0, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 129 with window 10
Going to 2 tenants
[3, 0, 0, 2]
SCALING INDEX = 2
removed
[1, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 2]
SCALING INDEX = 2
removed
[0, 3, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 0]
SCALING INDEX = 2
removed
[3, 0, 1, 1]
SCALING INDEX = 2
removed
[1, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 1, 2, 1]
SCALING INDEX = 2
removed
[0, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 0]
SCALING INDEX = 2
removed
Starting at index 139 with window 10
Going to 2 tenants
[1, 2, 3, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 0]
SCALING INDEX = 2
removed
[1, 3, 0, 3]
SCALING INDEX = 2
removed
[2, 2, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 0, 1]
SCALING INDEX = 2
removed
[1, 3, 1, 2]
SCALING INDEX = 2
removed
[2, 0, 2, 3]
SCALING INDEX = 2
removed
[2, 2, 1, 1]
SCALING INDEX = 2
removed
[1, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 0]
SCALING INDEX = 2
removed
Starting at index 149 with window 10
Going to 2 tenants
[1, 3, 2, 1]
SCALING INDEX = 2
removed
[2, 0, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 0, 0, 3]
SCALING INDEX = 2
removed
[2, 1, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 0, 1]
SCALING INDEX = 2
removed
[3, 0, 1, 2]
SCALING INDEX = 2
removed
[1, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 0, 0]
SCALING INDEX = 2
removed
Starting at index 159 with window 10
Going to 2 tenants
[2, 1, 2, 2]
SCALING INDEX = 2
removed
[0, 3, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 0]
SCALING INDEX = 2
removed
[3, 0, 2, 1]
SCALING INDEX = 2
removed
[1, 2, 3, 2]
SCALING INDEX = 2
removed
[2, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 0]
SCALING INDEX = 2
removed
[2, 2, 0, 3]
SCALING INDEX = 2
removed
[3, 1, 0, 2]
SCALING INDEX = 2
removed
[1, 3, 1, 3]
SCALING INDEX = 2
removed
Starting at index 169 with window 10
Going to 2 tenants
[2, 2, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 1, 1]
SCALING INDEX = 2
removed
[1, 3, 2, 2]
SCALING INDEX = 2
removed
[2, 0, 3, 3]
SCALING INDEX = 2
removed
[2, 2, 2, 1]
SCALING INDEX = 2
removed
[3, 1, 2, 0]
SCALING INDEX = 2
removed
[1, 3, 3, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 0, 1, 3]
SCALING INDEX = 2
removed
Starting at index 179 with window 10
Going to 2 tenants
[3, 2, 0, 1]
SCALING INDEX = 2
removed
[2, 1, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 1]
SCALING INDEX = 2
removed
[3, 0, 2, 2]
SCALING INDEX = 2
removed
[1, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 0]
SCALING INDEX = 2
removed
[2, 1, 3, 2]
SCALING INDEX = 2
removed
[2, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 0, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 0, 3]
SCALING INDEX = 2
removed
Starting at index 189 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 2
removed
[3, 1, 1, 2]
SCALING INDEX = 2
removed
[1, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 0, 0]
SCALING INDEX = 2
removed
[2, 2, 2, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 1]
SCALING INDEX = 2
removed
[1, 3, 3, 2]
SCALING INDEX = 2
removed
[2, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 1, 3, 0]
SCALING INDEX = 2
removed
[2, 3, 0, 3]
SCALING INDEX = 2
removed
Starting at index 199 with window 10
Going to 2 tenants
[3, 2, 0, 2]
SCALING INDEX = 2
removed
[2, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 0, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 1]
SCALING INDEX = 2
removed
[2, 1, 3, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 1]
SCALING INDEX = 2
removed
[3, 0, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 2, 0]
SCALING INDEX = 2
removed
[2, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 1, 1, 3]
SCALING INDEX = 2
removed
Starting at index 209 with window 10
Going to 2 tenants
[3, 3, 0, 1]
SCALING INDEX = 2
removed
[2, 2, 2, 3]
SCALING INDEX = 2
removed
[3, 1, 2, 2]
SCALING INDEX = 2
removed
[1, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 0]
SCALING INDEX = 2
removed
[2, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 0, 3]
SCALING INDEX = 2
removed
[2, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 2, 1, 2]
SCALING INDEX = 2
removed
Starting at index 219 with window 10
Going to 2 tenants
[2, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 0, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 1]
SCALING INDEX = 2
removed
[2, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 0]
SCALING INDEX = 2
removed
[3, 3, 0, 2]
SCALING INDEX = 2
removed
[3, 1, 2, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 1]
SCALING INDEX = 2
removed
[2, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 1, 3, 2]
SCALING INDEX = 2
removed
Starting at index 229 with window 10
Going to 2 tenants
[3, 3, 2, 0]
SCALING INDEX = 2
removed
[3, 2, 1, 3]
SCALING INDEX = 2
removed
[2, 3, 2, 3]
SCALING INDEX = 2
removed
[3, 2, 2, 2]
SCALING INDEX = 2
removed
[2, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 2, 3, 1]
SCALING INDEX = 2
removed
[3, 3, 0, 3]
SCALING INDEX = 2
removed
[3, 3, 1, 2]
SCALING INDEX = 2
removed
[3, 1, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 1]
SCALING INDEX = 2
removed
Starting at index 239 with window 10
Going to 2 tenants
[3, 3, 3, 0]
SCALING INDEX = 2
removed
[3, 2, 2, 3]
SCALING INDEX = 2
removed
[2, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 2, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 1, 3]
SCALING INDEX = 2
removed
[3, 3, 2, 2]
SCALING INDEX = 2
removed
[3, 3, 3, 1]
SCALING INDEX = 2
removed
[3, 2, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 2]
SCALING INDEX = 2
removed
[3, 3, 2, 3]
SCALING INDEX = 2
removed
Starting at index 249 with window 10
Going to 2 tenants
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
[3, 3, 3, 3]
SCALING INDEX = 2
removed
Starting at index 259 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
SCALE DOWN DIFF
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0002', '0011', '0101', '0020', '1000', '0110', '0200', '0102', '0021', '1001', '0111', '0201', '0030', '1010', '0120', '1100', '0210', '0300', '0013', '0103', '0022', '1002', '0112', '0202', '0031', '1011', '0121', '1101', '0211', '0301', '1020', '0130', '2000', '1110', '0220', '1200', '0310', '0023', '1003', '0113', '0203', '0032', '1012', '0122', '1102', '0212', '0302', '1021', '0131', '2001', '1111', '0221', '1201', '0311', '1030', '2010', '1120', '0230', '2100', '1210', '0320', '1300', '0033', '1013', '0123', '1103', '0213', '0303', '1022', '0132', '2002', '1112', '0222', '1202', '0312', '1031', '2011', '1121', '0231', '2101', '1211', '0321', '1301', '2020', '1130', '3000', '2110', '1220', '0330', '2200', '1310', '1023', '0133', '2003', '1113', '0223', '1203', '0313', '1032', '2012', '1122', '0232', '2102', '1212', '0322', '1302', '2021', '1131', '3001', '2111', '1221', '0331', '2201', '1311', '2030', '3010', '2120', '1230', '3100', '2210', '1320', '2300', '1033', '2013', '1123', '0233', '2103', '1213', '0323', '1303', '2022', '1132', '3002', '2112', '1222', '0332', '2202', '1312', '2031', '3011', '2121', '1231', '3101', '2211', '1321', '2301', '3020', '2130', '3110', '2220', '1330', '3200', '2310', '2023', '1133', '3003', '2113', '1223', '0333', '2203', '1313', '2032', '3012', '2122', '1232', '3102', '2212', '1322', '2302', '3021', '2131', '3111', '2221', '1331', '3201', '2311', '3030', '3120', '2230', '3210', '2320', '3300', '2033', '3013', '2123', '1233', '3103', '2213', '1323', '2303', '3022', '2132', '3112', '2222', '1332', '3202', '2312', '3031', '3121', '2231', '3211', '2321', '3301', '3130', '3220', '2330', '3310', '3023', '2133', '3113', '2223', '1333', '3203', '2313', '3032', '3122', '2232', '3212', '2322', '3302', '3131', '3221', '2331', '3311', '3230', '3320', '3033', '3123', '2233', '3213', '2323', '3303', '3132', '3222', '2332', '3312', '3231', '3321', '3330', '3133', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 7 with window 10
Going to 2 tenants
[0, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 2, 1]
SCALING INDEX = 1
removed
[1, 0, 0, 1]
SCALING INDEX = 1
removed
[0, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 0, 3, 0]
SCALING INDEX = 1
removed
[1, 0, 1, 0]
SCALING INDEX = 1
removed
[0, 1, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 0, 0]
SCALING INDEX = 1
removed
[0, 2, 1, 0]
SCALING INDEX = 1
removed
Starting at index 17 with window 10
Going to 2 tenants
[0, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 0, 0, 2]
SCALING INDEX = 1
removed
[0, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 0, 3, 1]
SCALING INDEX = 1
removed
[1, 0, 1, 1]
SCALING INDEX = 1
removed
[0, 1, 2, 1]
SCALING INDEX = 1
removed
Starting at index 27 with window 10
Going to 2 tenants
[1, 1, 0, 1]
SCALING INDEX = 1
removed
[0, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 0, 1]
SCALING INDEX = 1
removed
[1, 0, 2, 0]
SCALING INDEX = 1
removed
[0, 1, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 0, 0]
SCALING INDEX = 1
removed
[1, 1, 1, 0]
SCALING INDEX = 1
removed
[0, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 2, 0, 0]
SCALING INDEX = 1
removed
[0, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 37 with window 10
Going to 2 tenants
[0, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 0, 0, 3]
SCALING INDEX = 1
removed
[0, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 0, 3]
SCALING INDEX = 1
removed
[0, 0, 3, 2]
SCALING INDEX = 1
removed
[1, 0, 1, 2]
SCALING INDEX = 1
removed
[0, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 0, 2]
SCALING INDEX = 1
removed
[0, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 0, 2]
SCALING INDEX = 1
removed
Starting at index 47 with window 10
Going to 2 tenants
[1, 0, 2, 1]
SCALING INDEX = 1
removed
[0, 1, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 0, 1]
SCALING INDEX = 1
removed
[1, 1, 1, 1]
SCALING INDEX = 1
removed
[0, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 0, 1]
SCALING INDEX = 1
removed
[0, 3, 1, 1]
SCALING INDEX = 1
removed
[1, 0, 3, 0]
SCALING INDEX = 1
removed
[2, 0, 1, 0]
SCALING INDEX = 1
removed
[1, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 57 with window 10
Going to 2 tenants
[0, 2, 3, 0]
SCALING INDEX = 1
removed
[2, 1, 0, 0]
SCALING INDEX = 1
removed
[1, 2, 1, 0]
SCALING INDEX = 1
removed
[0, 3, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 0, 0]
SCALING INDEX = 1
removed
[0, 0, 3, 3]
SCALING INDEX = 1
removed
[1, 0, 1, 3]
SCALING INDEX = 1
removed
[0, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 0, 3]
SCALING INDEX = 1
removed
[0, 2, 1, 3]
SCALING INDEX = 1
removed
Starting at index 67 with window 10
Going to 2 tenants
[0, 3, 0, 3]
SCALING INDEX = 1
removed
[1, 0, 2, 2]
SCALING INDEX = 1
removed
[0, 1, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 0, 2]
SCALING INDEX = 1
removed
[1, 1, 1, 2]
SCALING INDEX = 1
removed
[0, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 0, 2]
SCALING INDEX = 1
removed
[0, 3, 1, 2]
SCALING INDEX = 1
removed
[1, 0, 3, 1]
SCALING INDEX = 1
removed
[2, 0, 1, 1]
SCALING INDEX = 1
removed
Starting at index 77 with window 10
Going to 2 tenants
[1, 1, 2, 1]
SCALING INDEX = 1
removed
[0, 2, 3, 1]
SCALING INDEX = 1
removed
[2, 1, 0, 1]
SCALING INDEX = 1
removed
[1, 2, 1, 1]
SCALING INDEX = 1
removed
[0, 3, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 0, 1]
SCALING INDEX = 1
removed
[2, 0, 2, 0]
SCALING INDEX = 1
removed
[1, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 0, 0]
SCALING INDEX = 1
removed
[2, 1, 1, 0]
SCALING INDEX = 1
removed
Starting at index 87 with window 10
Going to 2 tenants
[1, 2, 2, 0]
SCALING INDEX = 1
removed
[0, 3, 3, 0]
SCALING INDEX = 1
removed
[2, 2, 0, 0]
SCALING INDEX = 1
removed
[1, 3, 1, 0]
SCALING INDEX = 1
removed
[1, 0, 2, 3]
SCALING INDEX = 1
removed
[0, 1, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 0, 3]
SCALING INDEX = 1
removed
[1, 1, 1, 3]
SCALING INDEX = 1
removed
[0, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 0, 3]
SCALING INDEX = 1
removed
Starting at index 97 with window 10
Going to 2 tenants
[0, 3, 1, 3]
SCALING INDEX = 1
removed
[1, 0, 3, 2]
SCALING INDEX = 1
removed
[2, 0, 1, 2]
SCALING INDEX = 1
removed
[1, 1, 2, 2]
SCALING INDEX = 1
removed
[0, 2, 3, 2]
SCALING INDEX = 1
removed
[2, 1, 0, 2]
SCALING INDEX = 1
removed
[1, 2, 1, 2]
SCALING INDEX = 1
removed
[0, 3, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 0, 2]
SCALING INDEX = 1
removed
[2, 0, 2, 1]
SCALING INDEX = 1
removed
Starting at index 107 with window 10
Going to 2 tenants
[1, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 0, 1]
SCALING INDEX = 1
removed
[2, 1, 1, 1]
SCALING INDEX = 1
removed
[1, 2, 2, 1]
SCALING INDEX = 1
removed
[0, 3, 3, 1]
SCALING INDEX = 1
removed
[2, 2, 0, 1]
SCALING INDEX = 1
removed
[1, 3, 1, 1]
SCALING INDEX = 1
removed
[2, 0, 3, 0]
SCALING INDEX = 1
removed
[3, 0, 1, 0]
SCALING INDEX = 1
removed
[2, 1, 2, 0]
SCALING INDEX = 1
removed
Starting at index 117 with window 10
Going to 2 tenants
[1, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 0, 0]
SCALING INDEX = 1
removed
[2, 2, 1, 0]
SCALING INDEX = 1
removed
[1, 3, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 0, 0]
SCALING INDEX = 1
removed
[1, 0, 3, 3]
SCALING INDEX = 1
removed
[2, 0, 1, 3]
SCALING INDEX = 1
removed
[1, 1, 2, 3]
SCALING INDEX = 1
removed
[0, 2, 3, 3]
SCALING INDEX = 1
removed
[2, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 127 with window 10
Going to 2 tenants
[1, 2, 1, 3]
SCALING INDEX = 1
removed
[0, 3, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 0, 3]
SCALING INDEX = 1
removed
[2, 0, 2, 2]
SCALING INDEX = 1
removed
[1, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 0, 2]
SCALING INDEX = 1
removed
[2, 1, 1, 2]
SCALING INDEX = 1
removed
[1, 2, 2, 2]
SCALING INDEX = 1
removed
[0, 3, 3, 2]
SCALING INDEX = 1
removed
[2, 2, 0, 2]
SCALING INDEX = 1
removed
Starting at index 137 with window 10
Going to 2 tenants
[1, 3, 1, 2]
SCALING INDEX = 1
removed
[2, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 0, 1, 1]
SCALING INDEX = 1
removed
[2, 1, 2, 1]
SCALING INDEX = 1
removed
[1, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 0, 1]
SCALING INDEX = 1
removed
[2, 2, 1, 1]
SCALING INDEX = 1
removed
[1, 3, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 0, 2, 0]
SCALING INDEX = 1
removed
Starting at index 147 with window 10
Going to 2 tenants
[2, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 1, 0]
SCALING INDEX = 1
removed
[2, 2, 2, 0]
SCALING INDEX = 1
removed
[1, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 0, 0]
SCALING INDEX = 1
removed
[2, 3, 1, 0]
SCALING INDEX = 1
removed
[2, 0, 2, 3]
SCALING INDEX = 1
removed
[1, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 0, 3]
SCALING INDEX = 1
removed
[2, 1, 1, 3]
SCALING INDEX = 1
removed
Starting at index 157 with window 10
Going to 2 tenants
[1, 2, 2, 3]
SCALING INDEX = 1
removed
[0, 3, 3, 3]
SCALING INDEX = 1
removed
[2, 2, 0, 3]
SCALING INDEX = 1
removed
[1, 3, 1, 3]
SCALING INDEX = 1
removed
[2, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 0, 1, 2]
SCALING INDEX = 1
removed
[2, 1, 2, 2]
SCALING INDEX = 1
removed
[1, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 0, 2]
SCALING INDEX = 1
removed
[2, 2, 1, 2]
SCALING INDEX = 1
removed
Starting at index 167 with window 10
Going to 2 tenants
[1, 3, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 0, 2, 1]
SCALING INDEX = 1
removed
[2, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 1, 1]
SCALING INDEX = 1
removed
[2, 2, 2, 1]
SCALING INDEX = 1
removed
[1, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 0, 1]
SCALING INDEX = 1
removed
[2, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 0, 3, 0]
SCALING INDEX = 1
removed
Starting at index 177 with window 10
Going to 2 tenants
[3, 1, 2, 0]
SCALING INDEX = 1
removed
[2, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 1, 0]
SCALING INDEX = 1
removed
[2, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 3, 0, 0]
SCALING INDEX = 1
removed
[2, 0, 3, 3]
SCALING INDEX = 1
removed
[3, 0, 1, 3]
SCALING INDEX = 1
removed
[2, 1, 2, 3]
SCALING INDEX = 1
removed
[1, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 0, 3]
SCALING INDEX = 1
removed
Starting at index 187 with window 10
Going to 2 tenants
[2, 2, 1, 3]
SCALING INDEX = 1
removed
[1, 3, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 0, 2, 2]
SCALING INDEX = 1
removed
[2, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 1, 2]
SCALING INDEX = 1
removed
[2, 2, 2, 2]
SCALING INDEX = 1
removed
[1, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 0, 2]
SCALING INDEX = 1
removed
[2, 3, 1, 2]
SCALING INDEX = 1
removed
Starting at index 197 with window 10
Going to 2 tenants
[3, 0, 3, 1]
SCALING INDEX = 1
removed
[3, 1, 2, 1]
SCALING INDEX = 1
removed
[2, 2, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 1, 1]
SCALING INDEX = 1
removed
[2, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 0, 1]
SCALING INDEX = 1
removed
[3, 1, 3, 0]
SCALING INDEX = 1
removed
[3, 2, 2, 0]
SCALING INDEX = 1
removed
[2, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 1, 0]
SCALING INDEX = 1
removed
Starting at index 207 with window 10
Going to 2 tenants
[3, 0, 2, 3]
SCALING INDEX = 1
removed
[2, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 1, 1, 3]
SCALING INDEX = 1
removed
[2, 2, 2, 3]
SCALING INDEX = 1
removed
[1, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 0, 3]
SCALING INDEX = 1
removed
[2, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 0, 3, 2]
SCALING INDEX = 1
removed
[3, 1, 2, 2]
SCALING INDEX = 1
removed
[2, 2, 3, 2]
SCALING INDEX = 1
removed
Starting at index 217 with window 10
Going to 2 tenants
[3, 2, 1, 2]
SCALING INDEX = 1
removed
[2, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 0, 2]
SCALING INDEX = 1
removed
[3, 1, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 2, 1]
SCALING INDEX = 1
removed
[2, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 3, 1, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 0]
SCALING INDEX = 1
removed
[3, 3, 2, 0]
SCALING INDEX = 1
removed
[3, 0, 3, 3]
SCALING INDEX = 1
removed
Starting at index 227 with window 10
Going to 2 tenants
[3, 1, 2, 3]
SCALING INDEX = 1
removed
[2, 2, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 1, 3]
SCALING INDEX = 1
removed
[2, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 0, 3]
SCALING INDEX = 1
removed
[3, 1, 3, 2]
SCALING INDEX = 1
removed
[3, 2, 2, 2]
SCALING INDEX = 1
removed
[2, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 1, 2]
SCALING INDEX = 1
removed
[3, 2, 3, 1]
SCALING INDEX = 1
removed
Starting at index 237 with window 10
Going to 2 tenants
[3, 3, 2, 1]
SCALING INDEX = 1
removed
[3, 3, 3, 0]
SCALING INDEX = 1
removed
[3, 1, 3, 3]
SCALING INDEX = 1
removed
[3, 2, 2, 3]
SCALING INDEX = 1
removed
[2, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 1, 3]
SCALING INDEX = 1
removed
[3, 2, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 2, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 1]
SCALING INDEX = 1
removed
[3, 2, 3, 3]
SCALING INDEX = 1
removed
Starting at index 247 with window 10
Going to 2 tenants
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
[3, 3, 3, 2]
SCALING INDEX = 1
removed
[3, 3, 3, 3]
SCALING INDEX = 1
removed
[3, 3, 2, 3]
SCALING INDEX = 1
removed
Starting at index 257 with window 10
Going to 2 tenants
No config exists that meets all filtering constraints
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dd4c4850>, <src.sla.WorkerConf object at 0x7fa2dd4c4b90>, <src.sla.WorkerConf object at 0x7fa2dd4c47d0>, <src.sla.WorkerConf object at 0x7fa2dd4c4a90>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dac33290>, <src.sla.WorkerConf object at 0x7fa2dac33610>, <src.sla.WorkerConf object at 0x7fa2dac33550>, <src.sla.WorkerConf object at 0x7fa2dac33090>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2db8af790>, <src.sla.WorkerConf object at 0x7fa2db8afe90>, <src.sla.WorkerConf object at 0x7fa2dd4d5390>, <src.sla.WorkerConf object at 0x7fa2dd4d5110>]], [{}, [0, 1, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad306d0>, <src.sla.WorkerConf object at 0x7fa2dad30bd0>, <src.sla.WorkerConf object at 0x7fa2dad30710>, <src.sla.WorkerConf object at 0x7fa2dad30590>]]]
Conf 0:
127
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '127', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 7 with window 1
[0, 1, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;2:
Returning adaptive scaler for  2 tenants and 0;1;0;2:
1
255
['0011', '0020', '0101', '1000', '0110', '0200', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '1020', '0202', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '1021', '0203', '1102', '2001', '0131', '1030', '0212', '1111', '2010', '0221', '1120', '0302', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '1031', '0213', '1112', '2011', '0222', '1121', '2020', '0303', '1202', '2101', '3000', '0231', '1130', '0312', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '2021', '1203', '2102', '3001', '0232', '1131', '2030', '0313', '1212', '2111', '3010', '0322', '1221', '2120', '1302', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '2031', '1213', '2112', '3011', '0323', '1222', '2121', '3020', '1303', '2202', '3101', '0332', '1231', '2130', '1312', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '3021', '2203', '3102', '0333', '1232', '2131', '3030', '1313', '2212', '3111', '1322', '2221', '3120', '2302', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '3031', '2213', '3112', '1323', '2222', '3121', '2303', '3202', '1332', '2231', '3130', '2312', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '3131', '2313', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}
Starting at: 7
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 136.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '149', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;2:
Returning adaptive scaler for  3 tenants and 0;1;0;2:
1
255
['0102', '0120', '1001', '0111', '0021', '1010', '0030', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '145', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 2]
Measured completion time is 145.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;3:
Returning adaptive scaler for  4 tenants and 0;0;1;3:
1
255
['0013', '0120', '1001', '0021', '0111', '1010', '0030', '0201', '1100', '0022', '0210', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '139', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 3]
Measured completion time is 139.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;2:
Returning adaptive scaler for  5 tenants and 0;0;2;2:
1
255
['0022', '0111', '0120', '0201', '1001', '0021', '0103', '1010', '0030', '0300', '1100', '1002', '0210', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 2]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '130', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;2;0;2:
Returning adaptive scaler for  6 tenants and 0;2;0;2:
1
255
['0021', '1001', '1010', '0030', '0201', '1100', '0120', '0210', '0022', '1002', '0300', '0112', '0031', '1011', '0121', '0202', '1101', '1020', '2000', '0211', '0130', '1110', '0301', '0023', '0220', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
Starting at: 15
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 129.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad30d50>, <src.sla.WorkerConf object at 0x7fa2dad30e90>, <src.sla.WorkerConf object at 0x7fa2dad30e10>, <src.sla.WorkerConf object at 0x7fa2dad30390>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO COST EFFECTIVE RESULT
Starting with0_2_0_2
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE DOWN DIFF
difference between resource_cost optimal conf and predicted total cost -1
5
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}, [0, 2, 0, 2], [<src.sla.WorkerConf object at 0x7fa2dad30d50>, <src.sla.WorkerConf object at 0x7fa2dad30e90>, <src.sla.WorkerConf object at 0x7fa2dad30e10>, <src.sla.WorkerConf object at 0x7fa2dad30390>]]]
Conf 0:
129
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;2;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '129', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=True}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=True}
Double checking scaling function:
[]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Starting at index 15 with window 1
[0, 2, 0, 2]
Saving optimal results into matrix for previous results
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;1;2:
Returning adaptive scaler for  7 tenants and 0;1;1;2:
1
255
['0022', '1002', '0021', '0111', '1100', '0031', '0201', '0300', '0210', '1010', '0030', '0120', '0112', '0202', '1001', '1110', '1011', '0121', '0023', '1020', '1101', '2000', '0130', '0211', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}
Starting at: 12
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 1, 2]
Measured completion time is 143.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '147', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;2;0;2:
Returning adaptive scaler for  8 tenants and 0;2;0;2:
1
255
['0210', '0022', '0103', '0202', '1011', '0023', '0121', '0211', '1020', '0300', '1101', '1110', '0220', '0301', '0031', '2000', '0130', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '0131', '0212', '2001', '1030', '1111', '0221', '0302', '2010', '1120', '1201', '0033', '0230', '0311', '2100', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '0132', '0213', '2002', '1031', '1112', '0222', '0303', '2011', '1121', '1202', '0231', '0312', '2020', '2101', '1130', '1211', '0321', '3000', '2110', '1023', '1220', '1301', '0133', '0330', '2003', '2200', '1032', '1113', '1310', '0223', '2012', '1122', '1203', '0232', '0313', '2021', '2102', '1131', '1212', '0322', '3001', '2030', '2111', '1221', '1302', '0331', '3010', '2120', '2201', '1033', '1230', '1311', '3100', '2013', '2210', '1123', '1320', '0233', '2022', '2103', '2300', '1132', '1213', '0323', '3002', '2031', '2112', '1222', '1303', '0332', '3011', '2121', '2202', '1231', '1312', '3020', '3101', '2130', '2211', '1321', '3110', '2023', '2220', '2301', '1133', '1330', '3003', '3200', '2032', '2113', '2310', '1223', '0333', '3012', '2122', '2203', '1232', '1313', '3021', '3102', '2131', '2212', '1322', '3030', '3111', '2221', '2302', '1331', '3120', '3201', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '1233', '3022', '3103', '3300', '2132', '2213', '1323', '3031', '3112', '2222', '2303', '1332', '3121', '3202', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '1333', '3122', '3203', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 3
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 0, 2]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;2;1;1:
Returning adaptive scaler for  9 tenants and 0;2;1;1:
1
255
['0022', '0121', '0211', '0023', '1101', '0301', '2000', '1110', '0300', '1011', '0031', '1003', '0220', '0130', '1020', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}
Starting at: 2
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
RESULT FOUND
[0, 2, 1, 1]
Measured completion time is 143.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  10 tenants and 0;2;0;2:
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '127', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.24', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '145', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '139', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '129', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}