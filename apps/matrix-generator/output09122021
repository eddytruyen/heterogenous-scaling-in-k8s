 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
Starting at: 0
using curve-fitted scaling function to estimate configuration for tenants 9
1
255
total_cost = 19
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 1;0;1;0:
1
255
Getting next batch of experiments for 9 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 17 with window 10
Starting at index 17 with window 10
[1, 0, 1, 0]
not removed
[0, 1, 2, 0]
not removed
[0, 2, 0, 1]
not removed
[1, 1, 0, 0]
not removed
[0, 0, 1, 3]
not removed
[0, 2, 1, 0]
not removed
[0, 0, 2, 2]
not removed
[0, 1, 0, 3]
not removed
[0, 3, 0, 0]
not removed
[1, 0, 0, 2]
not removed
Starting at index 17 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 1 0 1 0
min_conf_dec: 17
17
[1, 0, 1, 0]
18
[0, 1, 2, 0]
19
[0, 2, 0, 1]
20
[1, 1, 0, 0]
21
[0, 0, 1, 3]
22
[0, 2, 1, 0]
23
[0, 0, 2, 2]
24
[0, 1, 0, 3]
25
[0, 3, 0, 0]
26
[1, 0, 0, 2]
{'1': [[0, 1, 0], [1, 0, 0], [0, 0, 2]], '0': [[1, 2, 0], [2, 0, 1], [0, 1, 3], [2, 1, 0], [0, 2, 2], [1, 0, 3], [3, 0, 0]]}
{'0': [[1, 0, 1], [1, 3, 0], [2, 2, 0], [0, 2, 1]], '1': [[2, 0, 0], [0, 0, 1], [0, 3, 0]], '2': [[0, 1, 0], [1, 0, 0]], '3': [[0, 0, 0]]}
{'1': [[0, 1, 0], [3, 0, 0], [0, 0, 2]], '2': [[0, 0, 1], [2, 0, 0]], '0': [[1, 0, 2], [0, 1, 1], [3, 0, 1], [0, 0, 3], [2, 1, 0]]}
{'0': [[1, 0, 1], [0, 1, 2], [1, 1, 0], [0, 2, 1], [0, 3, 0]], '1': [[0, 2, 0]], '3': [[0, 0, 1], [0, 1, 0]], '2': [[0, 0, 2], [1, 0, 0]]}
Next possible experiments for next nb of tenants
{'1': [[0, 1, 0], [1, 0, 0], [0, 0, 2]], '0': [[1, 2, 0], [2, 0, 1], [0, 1, 3], [2, 1, 0], [0, 2, 2], [1, 0, 3], [3, 0, 0]]}
Elementstr: [[1,0,1,0];[1,1,0,0];[1,0,0,2]]
Min replicacount:1 0 1 0
Max replicacount:1 0 0 2
Elementstr: [[0,1,2,0];[0,2,0,1];[0,0,1,3];[0,2,1,0];[0,0,2,2];[0,1,0,3];[0,3,0,0]]
Min replicacount:0 1 2 0
Max replicacount:0 3 0 0
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 1, 0] -> 1e-09
[1, 1, 0, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 2, 2] -> 1e-09
[0, 2, 1, 0] -> 1e-09
[0, 3, 0, 0] -> 1e-09
[0, 1, 2, 0] -> 1e-09
[0, 0, 1, 3] -> 1e-09
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2', 'config': '0', 'score': '-0.2', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;0;1;0:
Returning adaptive scaler for  9 tenants and 1;0;1;0:
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '199', 'Successfull': 'true'}
Starting at: 17
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '199', 'Successfull': 'true'}]
Filtered results
[0, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[1, 0, 1, 0]
Runtime manager:: Removing sample for the following conf: [1,0,1,0]
Runtime manager:: Sample list before remove:
[[1, 0, 1, 0], [1, 1, 0, 0]]
[[0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Sample list after remove:
[[1, 1, 0, 0]]
[[0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..9
Left over configs in runtime manager: 
[[1, 1, 0, 0], [0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Moving filtered samples in sorted combinations after the window
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 4 with window 10
Starting at index 4 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[1, 1, 0, 0]
removed
[0, 0, 1, 3]
removed
[0, 2, 1, 0]
removed
[0, 0, 2, 2]
removed
[0, 1, 0, 3]
removed
[0, 3, 0, 0]
removed
[1, 0, 0, 2]
removed
[0, 0, 3, 1]
removed
[0, 1, 1, 2]
removed
[1, 0, 1, 1]
not removed
Going to 10 tenants
Starting at index 4 with window 1
['0030', '0111', '0120', '0201', '1011', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Removing conf 1100 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [1,1,0,0]
Runtime manager:: Sample list before remove:
[[1, 1, 0, 0]]
[[0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
[]
[[0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Removing conf 0022 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,0,2,2]
Runtime manager:: Sample list before remove:
[]
[[0, 0, 2, 2], [0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Sample list after remove:
[]
[[0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Removing conf 0210 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,2,1,0]
Runtime manager:: Sample list before remove:
[]
[[0, 2, 1, 0], [0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Sample list after remove:
[]
[[0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Removing conf 0300 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,3,0,0]
Runtime manager:: Sample list before remove:
[]
[[0, 3, 0, 0], [0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Sample list after remove:
[]
[[0, 1, 2, 0], [0, 0, 1, 3]]
Removing conf 0120 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,1,2,0]
Runtime manager:: Sample list before remove:
[]
[[0, 1, 2, 0], [0, 0, 1, 3]]
Runtime manager:: Sample list after remove:
[]
[[0, 0, 1, 3]]
Removing conf 0013 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,0,1,3]
Runtime manager:: Sample list before remove:
[]
[[0, 0, 1, 3]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7f3872ebde90>, <src.sla.WorkerConf object at 0x7f3872ebdc10>, <src.sla.WorkerConf object at 0x7f3872eca0d0>, <src.sla.WorkerConf object at 0x7f3872eca150>], '[[1,0,1,0];[1,1,0,0];[1,0,0,2]]', '1 0 1 0', '1 0 0 2', 3], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.2', 'best_score': '-0.2', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 1, 0] -> 199
[1, 1, 0, 0] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 1, 0] -> 199
[1, 1, 0, 0] -> 1e-09
[0, 0, 2, 2] -> 1e-09
[0, 2, 1, 0] -> 1e-09
[0, 3, 0, 0] -> 1e-09
[0, 1, 2, 0] -> 1e-09
[0, 0, 1, 3] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.3266666666666667', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '199', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.21333333333333335', 'best_score': '-0.21333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.24', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '3', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.24', 'best_score': '-0.22666666666666666', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '3', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.21333333333333335', 'best_score': '-0.21333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '4', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.22666666666666666', 'best_score': '-0.21333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7f3873715810>, <src.sla.WorkerConf object at 0x7f3873715910>, <src.sla.WorkerConf object at 0x7f38737154d0>, <src.sla.WorkerConf object at 0x7f3873715610>]], [{}, [], [<src.sla.WorkerConf object at 0x7f387241a5d0>, <src.sla.WorkerConf object at 0x7f3872467410>, <src.sla.WorkerConf object at 0x7f3872467710>, <src.sla.WorkerConf object at 0x7f3872467c10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
Moving filtered samples in sorted combinations after the window
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '1011', '0031', '0112', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 0 with window 10
Starting at index 0 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[0, 0, 3, 0]
removed
[0, 1, 1, 1]
removed
[0, 1, 2, 0]
removed
[0, 2, 0, 1]
removed
[1, 1, 0, 0]
removed
[0, 0, 1, 3]
removed
[0, 2, 1, 0]
removed
[0, 0, 2, 2]
removed
[0, 1, 0, 3]
removed
[0, 3, 0, 0]
removed
Starting at index 10 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[1, 0, 0, 2]
removed
[1, 0, 1, 1]
not removed
[0, 0, 3, 1]
removed
[0, 1, 1, 2]
removed
[0, 1, 2, 1]
removed
[0, 2, 0, 2]
removed
[1, 0, 2, 0]
not removed
[1, 1, 0, 1]
removed
[2, 0, 0, 0]
removed
[0, 1, 3, 0]
removed
Going to 10 tenants
Starting at index 10 with window 2
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1011', '1020', '1002', '0211', '0031', '0112', '0121', '0202', '1110', '1101', '2000', '0130', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Getting next batch of experiments for 9 tenants
min_conf: 1 0 1 1
min_conf_dec: 10
10
[1, 0, 1, 1]
11
[1, 0, 2, 0]
{'1': [[0, 1, 1], [0, 2, 0]]}
{'0': [[1, 1, 1], [2, 0, 1]]}
{'1': [[1, 1, 0]], '2': [[0, 1, 0]]}
{'1': [[1, 0, 1]], '0': [[1, 0, 2]]}
Next possible experiments for next nb of tenants
{'1': [[0, 1, 1], [0, 2, 0]]}
Elementstr: [[1,0,1,1];[1,0,2,0]]
Min replicacount:1 0 1 1
Max replicacount:1 0 2 0
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 1, 1] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7f387241aed0>, <src.sla.WorkerConf object at 0x7f387241ae90>, <src.sla.WorkerConf object at 0x7f3873715210>, <src.sla.WorkerConf object at 0x7f3873715ad0>]], [{}, [], [<src.sla.WorkerConf object at 0x7f3873715690>, <src.sla.WorkerConf object at 0x7f3873715450>, <src.sla.WorkerConf object at 0x7f3873715b90>, <src.sla.WorkerConf object at 0x7f3873715c10>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;0;1;1:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.25333333333333335', 'config': '0', 'score': '-0.25333333333333335', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;0;1;1:
Returning adaptive scaler for  9 tenants and 1;0;1;1:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1011', '1020', '1002', '0211', '0031', '0112', '0121', '0202', '1110', '1101', '2000', '0130', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}
Starting at: 10
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..9
Left over configs in runtime manager: 
[]
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 1, 1] -> 167
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 0, 1, 1] -> 167
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.1133333333333333', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '167', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[[{}, [], [<src.sla.WorkerConf object at 0x7f387241aed0>, <src.sla.WorkerConf object at 0x7f387241ae90>, <src.sla.WorkerConf object at 0x7f3873715210>, <src.sla.WorkerConf object at 0x7f3873715ad0>]], [{}, [], [<src.sla.WorkerConf object at 0x7f3873715690>, <src.sla.WorkerConf object at 0x7f3873715450>, <src.sla.WorkerConf object at 0x7f3873715b90>, <src.sla.WorkerConf object at 0x7f3873715c10>]], [{}, [], [<src.sla.WorkerConf object at 0x7f38723f7250>, <src.sla.WorkerConf object at 0x7f38723f7290>, <src.sla.WorkerConf object at 0x7f38723f7950>, <src.sla.WorkerConf object at 0x7f38723f7310>]], [{}, [], [<src.sla.WorkerConf object at 0x7f3872467b50>, <src.sla.WorkerConf object at 0x7f38724672d0>, <src.sla.WorkerConf object at 0x7f3872467e10>, <src.sla.WorkerConf object at 0x7f3872467550>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
NO RESULT
TIPPED_OVER_CONFS
[[1, 0, 1, 1]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
SCALE UP DIFF
difference between resource_cost optimal conf and predicted total cost -1
41
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Removing tipped over conf
[1, 0, 1, 1]
Moving filtered samples in sorted combinations after the window
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '1002', '0211', '0031', '0112', '0121', '0202', '1110', '1101', '2000', '0130', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 10 with window 10
Starting at index 10 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[1, 0, 2, 0]
not removed
[1, 0, 0, 2]
not removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
not removed
[0, 1, 1, 2]
not removed
[0, 1, 2, 1]
not removed
[0, 2, 0, 2]
removed
[1, 1, 1, 0]
not removed
[1, 1, 0, 1]
not removed
[2, 0, 0, 0]
removed
Going to 10 tenants
Starting at index 10 with window 8
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '1002', '0211', '0031', '0112', '0121', '1110', '1101', '0130', '0023', '0220', '0301', '1003', '1200', '0202', '0032', '0113', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Starting at index 10 with window 8
Getting next batch of experiments for 9 tenants
min_conf: 1 0 2 0
min_conf_dec: 10
10
[1, 0, 2, 0]
11
[1, 0, 0, 2]
12
[0, 2, 1, 1]
13
[0, 0, 3, 1]
14
[0, 1, 1, 2]
15
[0, 1, 2, 1]
16
[1, 1, 1, 0]
17
[1, 1, 0, 1]
{'1': [[0, 2, 0], [0, 0, 2], [1, 1, 0], [1, 0, 1]], '0': [[2, 1, 1], [0, 3, 1], [1, 1, 2], [1, 2, 1]]}
{'0': [[2, 0, 1], [0, 2, 1], [3, 1, 0]], '2': [[1, 1, 0]], '1': [[1, 2, 0], [2, 1, 0], [1, 0, 1], [0, 1, 1]]}
{'2': [[0, 1, 0], [1, 0, 1]], '0': [[2, 1, 0], [1, 1, 1]], '1': [[1, 0, 2], [2, 0, 1], [0, 1, 1]], '3': [[1, 0, 0]]}
{'0': [[1, 0, 2], [1, 1, 1]], '2': [[1, 0, 0], [0, 1, 1]], '1': [[0, 2, 1], [0, 0, 3], [0, 1, 2], [1, 1, 0]]}
Next possible experiments for next nb of tenants
{'1': [[0, 2, 0], [0, 0, 2], [1, 1, 0], [1, 0, 1]], '0': [[2, 1, 1], [0, 3, 1], [1, 1, 2], [1, 2, 1]]}
Elementstr: [[1,0,2,0];[1,0,0,2];[1,1,1,0];[1,1,0,1]]
Min replicacount:1 0 2 0
Max replicacount:1 1 0 1
Elementstr: [[0,2,1,1];[0,0,3,1];[0,1,1,2];[0,1,2,1]]
Min replicacount:0 2 1 1
Max replicacount:0 1 2 1
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 1, 1, 0] -> 1e-09
[1, 0, 2, 0] -> 1e-09
[1, 1, 0, 1] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[0, 1, 1, 2] -> 1e-09
[0, 1, 2, 1] -> 1e-09
[0, 2, 1, 1] -> 1e-09
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '0', 'score': '-0.28', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '1002', '0211', '0031', '0112', '0121', '1110', '1101', '0130', '0023', '0220', '0301', '1003', '1200', '0202', '0032', '0113', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}
Starting at: 16
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
Left over configs in runtime manager: 
[[1, 0, 2, 0], [1, 1, 0, 1], [0, 1, 1, 2], [0, 1, 2, 1], [0, 2, 1, 1]]
Moving filtered samples in sorted combinations after the window
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '1002', '0211', '0031', '0112', '0121', '1110', '1101', '0130', '0023', '0220', '0301', '1003', '1200', '0202', '0032', '0113', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 10 with window 10
Starting at index 10 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[1, 0, 2, 0]
not removed
[1, 0, 0, 2]
removed
[0, 2, 1, 1]
not removed
[0, 0, 3, 1]
removed
[0, 1, 1, 2]
not removed
[0, 1, 2, 1]
not removed
[1, 1, 1, 0]
not removed
[1, 1, 0, 1]
not removed
[0, 1, 3, 0]
not removed
[0, 0, 2, 3]
removed
Going to 10 tenants
Starting at index 10 with window 7
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '0211', '0112', '0121', '1110', '1101', '0130', '0220', '1002', '0301', '0031', '1003', '1200', '0202', '0032', '0113', '0023', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 1, 1, 0] -> 143
[1, 0, 2, 0] -> 1e-09
[1, 1, 0, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  9 tenants and 1;0;2;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.26666666666666666', 'config': '1', 'score': '-0.26666666666666666', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;0;2;0:
Returning adaptive scaler for  9 tenants and 1;0;2;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '0211', '0112', '0121', '1110', '1101', '0130', '0220', '1002', '0301', '0031', '1003', '1200', '0202', '0032', '0113', '0023', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '151', 'Successfull': 'true'}
Starting at: 10
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '151', 'Successfull': 'true'}]
Filtered results
Current result is NO RESULT, therefore, we remove all configs with higher resource_cost than current result for higher number of tenants: 10..9
Left over configs in runtime manager: 
[[1, 1, 0, 1], [0, 1, 1, 2], [0, 1, 2, 1], [0, 2, 1, 1]]
Moving filtered samples in sorted combinations after the window
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '0211', '0112', '0121', '1110', '1101', '0130', '0220', '1002', '0301', '0031', '1003', '1200', '0202', '0032', '0113', '0023', '2000', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 15 with window 10
Starting at index 15 with window 10
Going to 2 tenants
Going to 3 tenants
Going to 4 tenants
Going to 5 tenants
Going to 6 tenants
Going to 7 tenants
Going to 8 tenants
Going to 9 tenants
[1, 1, 0, 1]
removed
[0, 1, 3, 0]
not removed
[0, 2, 2, 0]
not removed
[1, 0, 0, 2]
removed
[0, 3, 0, 1]
removed
[0, 0, 3, 1]
not removed
[1, 0, 0, 3]
removed
[1, 2, 0, 0]
removed
[0, 2, 0, 2]
removed
[0, 0, 3, 2]
removed
Going to 10 tenants
Starting at index 15 with window 3
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1020', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Removing conf 1101 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [1,1,0,1]
Runtime manager:: Sample list before remove:
[[1, 1, 1, 0], [1, 0, 2, 0], [1, 1, 0, 1]]
[[0, 1, 1, 2], [0, 1, 2, 1], [0, 2, 1, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 1, 1, 2], [0, 1, 2, 1], [0, 2, 1, 1]]
Removing conf 0112 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,1,1,2]
Runtime manager:: Sample list before remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 1, 1, 2], [0, 1, 2, 1], [0, 2, 1, 1]]
Runtime manager:: Sample list after remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 1, 2, 1], [0, 2, 1, 1]]
Removing conf 0121 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,1,2,1]
Runtime manager:: Sample list before remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 1, 2, 1], [0, 2, 1, 1]]
Runtime manager:: Sample list after remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 2, 1, 1]]
Removing conf 0211 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [0,2,1,1]
Runtime manager:: Sample list before remove:
[[1, 1, 1, 0], [1, 0, 2, 0]]
[[0, 2, 1, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7f3872403550>, <src.sla.WorkerConf object at 0x7f3872403590>, <src.sla.WorkerConf object at 0x7f3872403390>, <src.sla.WorkerConf object at 0x7f3872403050>], '[[1,0,2,0];[1,0,0,2];[1,1,1,0];[1,1,0,1]]', '1 0 2 0', '1 1 0 1', 4], 'experiment_nb': 0, 'sample_nb': 1, 'sample': {'config': '1', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
let k8-resource-optimizer process the inputted previous result
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[1, 1, 1, 0] -> 143
[1, 0, 2, 0] -> 151
[1, 1, 0, 1] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 1, 1, 0] -> 143
[1, 0, 2, 0] -> 151
[1, 1, 0, 1] -> 1e-09
[0, 1, 1, 2] -> 1e-09
[0, 1, 2, 1] -> 1e-09
[0, 2, 1, 1] -> 1e-09
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.28', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-1.0066666666666666', 'best_score': '-0.28', 'SLAName': 'silver', 'CompletionTime': '151', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.26666666666666666', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.25333333333333335', 'best_score': '-0.25333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.26666666666666666', 'best_score': '-0.25333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '2', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.25333333333333335', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.28', 'best_score': '-0.28', 'SLAName': 'silver', 'CompletionTime': '143', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 143.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
Removing tipped over conf
[1, 0, 2, 0]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '143', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.28', 'config': '0', 'score': '-0.28', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '150', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 150.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '150', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '142', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 142.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '142', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 1;1;1;0:
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
['0030', '0111', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '0211', '0112', '0121', '1110', '0130', '0220', '0031', '1101', '0113', '0023', '1002', '0301', '2000', '1003', '1200', '0202', '0032', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '141', 'Successfull': 'true'}]
RESULT FOUND
[1, 1, 1, 0]
Measured completion time is 141.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDozn
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Returning adaptive scaler for  9 tenants and 1;1;1;0:
1
255
Saving optimal results into matrix
{'silver': {'9': {'CompletionTime': '141', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '1', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
