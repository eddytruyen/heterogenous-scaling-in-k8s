 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
1
255
Processing request for 1 tenants
Searching from the smallest possible combination
1
255
Getting next batch of experiments for 1 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 0, 0, 1]
not removed
[0, 0, 1, 0]
not removed
[0, 1, 0, 0]
not removed
[0, 0, 0, 2]
not removed
[0, 0, 1, 1]
not removed
[0, 0, 2, 0]
not removed
[0, 1, 0, 1]
not removed
[1, 0, 0, 0]
not removed
[0, 1, 1, 0]
not removed
[0, 0, 0, 3]
not removed
Starting at index 0 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
min_conf: 0 0 0 1
min_conf_dec: 0
0
[0, 0, 0, 1]
1
[0, 0, 1, 0]
2
[0, 1, 0, 0]
3
[0, 0, 0, 2]
4
[0, 0, 1, 1]
5
[0, 0, 2, 0]
6
[0, 1, 0, 1]
7
[1, 0, 0, 0]
8
[0, 1, 1, 0]
9
[0, 0, 0, 3]
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 0], [1, 0, 1], [1, 1, 0], [0, 0, 3]], '1': [[0, 0, 0]]}
{'0': [[0, 1, 0], [1, 0, 0], [0, 2, 0], [1, 1, 0], [2, 0, 0], [0, 0, 1], [0, 3, 0]], '1': [[0, 0, 0], [0, 1, 0], [1, 0, 0]]}
{'0': [[1, 0, 0], [0, 0, 1], [2, 0, 0], [1, 0, 1], [0, 1, 0], [3, 0, 0]], '1': [[0, 0, 0], [1, 0, 0], [0, 0, 1]], '2': [[0, 0, 0]]}
{'1': [[0, 0, 0], [0, 0, 1], [0, 1, 0]], '0': [[0, 0, 1], [0, 1, 0], [0, 0, 2], [1, 0, 0], [0, 1, 1]], '2': [[0, 0, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 0], [1, 0, 1], [1, 1, 0], [0, 0, 3]], '1': [[0, 0, 0]]}
Elementstr: [[0,0,0,1];[0,0,1,0];[0,1,0,0];[0,0,0,2];[0,0,1,1];[0,0,2,0];[0,1,0,1];[0,1,1,0];[0,0,0,3]]
Min replicacount:0 0 0 1
Max replicacount:0 0 0 3
Elementstr: [[1,0,0,0]]
Min replicacount:1 0 0 0
Max replicacount:1 0 0 0
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 0] -> 1e-09
Starting at: 0
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.16', 'config': '0', 'score': '-0.16', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;0;0;3:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200', '0032', '0113', '0310', '1012', '0122', '0203', '1021', '1102', '2001', '0131', '0212', '1030', '1111', '2010', '0221', '0302', '1120', '1201', '2100', '0033', '0230', '0311', '1013', '1210', '0123', '0320', '1022', '1103', '1300', '2002', '0132', '0213', '1031', '1112', '2011', '0222', '0303', '1121', '1202', '2020', '2101', '3000', '0231', '0312', '1130', '1211', '2110', '0321', '1023', '1220', '1301', '2003', '2200', '0133', '0330', '1032', '1113', '1310', '2012', '0223', '1122', '1203', '2021', '2102', '3001', '0232', '0313', '1131', '1212', '2030', '2111', '3010', '0322', '1221', '1302', '2120', '2201', '3100', '0331', '1033', '1230', '1311', '2013', '2210', '1123', '1320', '2022', '2103', '2300', '3002', '0233', '1132', '1213', '2031', '2112', '3011', '0323', '1222', '1303', '2121', '2202', '3020', '3101', '0332', '1231', '1312', '2130', '2211', '3110', '1321', '2023', '2220', '2301', '3003', '3200', '1133', '1330', '2032', '2113', '2310', '3012', '1223', '2122', '2203', '3021', '3102', '0333', '1232', '1313', '2131', '2212', '3030', '3111', '1322', '2221', '2302', '3120', '3201', '1331', '2033', '2230', '2311', '3013', '3210', '2123', '2320', '3022', '3103', '3300', '1233', '2132', '2213', '3031', '3112', '1323', '2222', '2303', '3121', '3202', '1332', '2231', '2312', '3130', '3211', '2321', '3023', '3220', '3301', '2133', '2330', '3032', '3113', '3310', '2223', '3122', '3203', '1333', '2232', '2313', '3131', '3212', '2322', '3221', '3302', '2331', '3033', '3230', '3311', '3123', '3320', '2233', '3132', '3213', '2323', '3222', '3303', '2332', '3231', '3312', '3321', '3133', '3330', '3223', '2333', '3232', '3313', '3322', '3331', '3233', '3323', '3332', '3333']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '52', 'Successfull': 'true'}
Starting at: 9
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '52', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '52', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '52', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '52', 'Successfull': 'true'}]
For 1 tenants, the current sample equals 0_0_0_3 and is positioned at index 9
[0, 0, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 0, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 1, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 3, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 0, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 2, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 1, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 3, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 2, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 3, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[3, 3, 3, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 9
Left over configs in runtime manager: 
[[0, 0, 0, 2], [0, 0, 1, 0], [0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 4, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 2, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 2, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 0, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 2 tenants
Starting at index 1 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 52
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
1
255
Processing request for 1 tenants
currentResult found:
[0, 0, 0, 2]
Using currentResult as basis
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.10666666666666667', 'config': '1', 'score': '-0.10666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;0;0;2:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002', '0031', '0112', '1011', '0121', '0202', '1020', '1101', '2000', '0130', '0211', '1110', '0023', '0220', '0301', '1003', '1200']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '47', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 4
Starting at: 3
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '47', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '47', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '47', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '47', 'Successfull': 'true'}]
For 1 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
[0, 0, 3, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 1, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 2, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[2, 0, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 3, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 1, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 0, 2, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 2, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 3
Left over configs in runtime manager: 
[[0, 0, 1, 0], [0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002']
Filtering from index 1 with window 10
Starting at index 1 with window 10
Going to 2 tenants
Starting at index 1 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 52
[0, 0, 0, 2] -> 47
[0, 0, 1, 0] -> 1e-09
[0, 1, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
1
255
Processing request for 2 tenants
previousResult found:
[0, 0, 0, 2]
Transferring direct result from  to 2:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 47.0, 'Successfull': 'true'}
Returning adaptive scaler for  1 tenants and 0;0;0;2:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 2 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002']
Filtering from index 3 with window 1
Starting at index 3 with window 1
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
Going to 3 tenants
Starting at index 3 with window 1
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002']
min_conf: 0 0 0 2
min_conf_dec: 3
3
[0, 0, 0, 2]
{'0': [[0, 0, 2]]}
{'0': [[0, 2, 0]]}
{'0': [[2, 0, 0]]}
{'2': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 2]]}
Elementstr: [[0,0,0,2]]
Min replicacount:0 0 0 2
Max replicacount:0 0 0 2
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 2] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,0,0,2]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 2]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac71d76290>, <src.sla.WorkerConf object at 0x7fac71d76b10>, <src.sla.WorkerConf object at 0x7fac71d91e50>, <src.sla.WorkerConf object at 0x7fac71d91c90>], '[[0,0,0,2]]', '0 0 0 2', '0 0 0 2', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100', '0013', '0210', '0022', '0103', '0300', '1002']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 4
Starting at: 3
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 1
New index positioned at 1
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 2] -> 68
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 2] -> 68
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 0, 2]
Measured completion time is 68.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_0_0_2
[]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
3
1
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 3 with window 10
Starting at index 3 with window 10
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 0, 2]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 0, 2]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 0, 2]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 0, 2]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Going to 2 tenants
Going to 3 tenants
Starting at index 3 with window 2
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
RETRYING WITH ANOTHER WORKER CONFIGURATION
Starting at index 3 with window 2
[0, 0, 0, 2]
Saving optimal results into matrix for previous results
1
255
Processing request for 3 tenants
Searching from the smallest possible combination
1
255
Getting next batch of experiments for 3 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 0, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 0, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
Starting at index 0 with window 10
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 0 0 1
min_conf_dec: 0
0
[0, 0, 0, 1]
1
[0, 0, 1, 0]
2
[0, 1, 0, 0]
3
[0, 0, 0, 2]
4
[0, 0, 1, 1]
5
[0, 0, 2, 1]
6
[1, 0, 0, 1]
7
[0, 1, 0, 1]
8
[0, 0, 0, 3]
9
[0, 0, 2, 0]
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0]], '1': [[0, 0, 1]]}
{'0': [[0, 1, 0], [1, 0, 0], [0, 2, 0], [1, 1, 0], [2, 1, 0], [0, 1, 1], [0, 3, 0], [2, 0, 0]], '1': [[0, 0, 0], [0, 1, 0]]}
{'0': [[1, 0, 0], [0, 0, 1], [2, 0, 0], [1, 1, 0], [1, 0, 1], [3, 0, 0]], '1': [[0, 0, 0], [1, 0, 0]], '2': [[1, 0, 0], [0, 0, 0]]}
{'1': [[0, 0, 0], [0, 0, 1], [0, 0, 2], [1, 0, 0], [0, 1, 0]], '0': [[0, 0, 1], [0, 1, 0], [0, 0, 2]], '2': [[0, 0, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0]], '1': [[0, 0, 1]]}
Elementstr: [[0,0,0,1];[0,0,1,0];[0,1,0,0];[0,0,0,2];[0,0,1,1];[0,0,2,1];[0,1,0,1];[0,0,0,3];[0,0,2,0]]
Min replicacount:0 0 0 1
Max replicacount:0 0 2 0
Elementstr: [[1,0,0,1]]
Min replicacount:1 0 0 1
Max replicacount:1 0 0 1
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 1] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;0;0;3:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
1
255
Processing request for 4 tenants
previousResult found:
[0, 0, 0, 3]
Transferring direct result from  to 4:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 146.0, 'Successfull': 'true'}
Returning adaptive scaler for  3 tenants and 0;0;0;3:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 4 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 8 with window 1
Starting at index 8 with window 1
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 0, 0, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 3, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
Starting at index 8 with window 1
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 0 0 3
min_conf_dec: 8
8
[0, 0, 0, 3]
{'0': [[0, 0, 3]]}
{'0': [[0, 3, 0]]}
{'0': [[3, 0, 0]]}
{'3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 3]]}
Elementstr: [[0,0,0,3]]
Min replicacount:0 0 0 3
Max replicacount:0 0 0 3
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,0,0,3]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 3]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac71d60050>, <src.sla.WorkerConf object at 0x7fac71d60ad0>, <src.sla.WorkerConf object at 0x7fac71d60a50>, <src.sla.WorkerConf object at 0x7fac71d60790>], '[[0,0,0,3]]', '0 0 0 3', '0 0 0 3', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Returning adaptive scaler for  3 tenants and 0;0;0;3:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 8
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
New index positioned at 3
Returning adaptive scaler for  4 tenants and 0;0;0;3:
1
255
For 4 tenants, the current sample equals 0_0_0_3 and is positioned at index 8
New index positioned at 8
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
For 3 tenants, the current sample equals 0_0_0_3 and is positioned at index 8
New index positioned at 8
Left over configs in runtime manager: 
[[0, 0, 0, 2], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1], [1, 0, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 3, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 5 tenants
Starting at index 1 with window 10
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 146
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;0;3:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '160', 'Successfull': 'true'}
shared_replicas: 3
shared_resources for resource type cpu: 3
shared_resources for resource type memory: 6
1
255
Processing request for 5 tenants
Searching from the smallest possible combination
1
255
Getting next batch of experiments for 5 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 0, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 0, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 0, 0, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 0, 0, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 0, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 3, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 5 tenants
Starting at index 0 with window 10
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 0 0 1
min_conf_dec: 0
0
[0, 0, 0, 1]
1
[0, 0, 1, 0]
2
[0, 1, 0, 0]
3
[0, 0, 0, 2]
4
[0, 0, 1, 1]
5
[0, 0, 2, 1]
6
[1, 0, 0, 1]
7
[0, 1, 0, 1]
8
[0, 0, 0, 3]
9
[0, 0, 2, 0]
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0]], '1': [[0, 0, 1]]}
{'0': [[0, 1, 0], [1, 0, 0], [0, 2, 0], [1, 1, 0], [2, 1, 0], [0, 1, 1], [0, 3, 0], [2, 0, 0]], '1': [[0, 0, 0], [0, 1, 0]]}
{'0': [[1, 0, 0], [0, 0, 1], [2, 0, 0], [1, 1, 0], [1, 0, 1], [3, 0, 0]], '1': [[0, 0, 0], [1, 0, 0]], '2': [[1, 0, 0], [0, 0, 0]]}
{'1': [[0, 0, 0], [0, 0, 1], [0, 0, 2], [1, 0, 0], [0, 1, 0]], '0': [[0, 0, 1], [0, 1, 0], [0, 0, 2]], '2': [[0, 0, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 2], [0, 1, 1], [0, 2, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0]], '1': [[0, 0, 1]]}
Elementstr: [[0,0,0,1];[0,0,1,0];[0,1,0,0];[0,0,0,2];[0,0,1,1];[0,0,2,1];[0,1,0,1];[0,0,0,3];[0,0,2,0]]
Min replicacount:0 0 0 1
Max replicacount:0 0 2 0
Elementstr: [[1,0,0,1]]
Min replicacount:1 0 0 1
Max replicacount:1 0 0 1
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 1] -> 1e-09
Returning adaptive scaler for  4 tenants and 0;0;0;3:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 8
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '160', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  5 tenants and 0;0;0;3:
1
255
For 5 tenants, the current sample equals 0_0_0_3 and is positioned at index 8
Current result is NO RESULT, therefore, we remove all configs with lower resource_cost than current result for higher number of tenants: 5..5
REMOVING CONFS FOR NB OF TENANTS: 5
[0, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Runtime manager:: Removing sample for the following conf: [0,0,1,0]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 3], [0, 0, 0, 2], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
Runtime manager:: Sample list after remove:
[[0, 0, 0, 3], [0, 0, 0, 2], [0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
[0, 1, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Runtime manager:: Removing sample for the following conf: [0,1,0,0]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 3], [0, 0, 0, 2], [0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
Runtime manager:: Sample list after remove:
[[0, 0, 0, 3], [0, 0, 0, 2], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
[0, 0, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Runtime manager:: Removing sample for the following conf: [0,0,0,2]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 3], [0, 0, 0, 2], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
Runtime manager:: Sample list after remove:
[[0, 0, 0, 3], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 0, 3]
Runtime manager:: Removing sample for the following conf: [0,0,0,3]
Runtime manager:: Sample list before remove:
[[0, 0, 0, 3], [0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
Runtime manager:: Sample list after remove:
[[0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
New index positioned at 2
SHIFTING TO NEXT SAMPLE FOR HIGHER NB OF TENANTS: 5
Left over configs in runtime manager: 
[[0, 0, 2, 0], [0, 1, 0, 1], [1, 0, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 3, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 3, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Removing conf 1001 from left experiments in runtime manager because of this conf violates transition constraints
Runtime manager:: Removing sample for the following conf: [1,0,0,1]
Runtime manager:: Sample list before remove:
[[0, 0, 2, 0], [0, 1, 0, 1]]
[[1, 0, 0, 1]]
Runtime manager:: Sample list after remove:
[[0, 0, 2, 0], [0, 1, 0, 1]]
[]
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 5 :
NEXT SAMPLE FOR HIGHER NUMBER OF TENANTS 5 :
[0, 0, 2, 0]
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '160', 'Successfull': 'true'}]
Filtered results
For 4 tenants, the current sample equals 0_1_0_1 and is positioned at index 2
New index positioned at 2
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 160
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 160
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-1.0666666666666667', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '160', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853]
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 0, 3]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
3
2
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0020', '1000', '0110', '0003', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
[0, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
Removing failed conf
[0, 0, 0, 3]
Removing [0, 0, 0, 3] from tipped_over_results in rm
Tipped over conf already removed:
[0, 0, 0, 3]
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 6 tenants
Starting at index 0 with window 10
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Starting at index 0 with window 10
Getting next batch of experiments for 4 tenants
min_conf: 0 1 0 1
min_conf_dec: 0
0
[0, 1, 0, 1]
1
[0, 0, 2, 0]
2
[1, 0, 0, 0]
3
[0, 1, 1, 0]
4
[0, 2, 0, 0]
5
[0, 0, 1, 2]
6
[0, 0, 2, 1]
7
[1, 0, 0, 1]
8
[0, 1, 0, 2]
9
[0, 1, 1, 1]
{'0': [[1, 0, 1], [0, 2, 0], [1, 1, 0], [2, 0, 0], [0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 1, 1]], '1': [[0, 0, 0], [0, 0, 1]]}
{'1': [[0, 1, 0], [1, 0, 0], [0, 2, 0], [1, 1, 0]], '0': [[2, 0, 0], [0, 0, 1], [1, 2, 0], [2, 1, 0], [0, 1, 1]], '2': [[0, 0, 0]]}
{'0': [[1, 0, 1], [0, 1, 0], [0, 0, 2], [1, 1, 0], [2, 0, 1]], '2': [[0, 0, 0], [1, 0, 0]], '1': [[0, 0, 1], [2, 0, 0], [1, 0, 1]]}
{'1': [[0, 1, 0], [0, 0, 2], [1, 0, 0], [0, 1, 1]], '0': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]], '2': [[0, 0, 1], [0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 1], [0, 2, 0], [1, 1, 0], [2, 0, 0], [0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 1, 1]], '1': [[0, 0, 0], [0, 0, 1]]}
Elementstr: [[0,1,0,1];[0,0,2,0];[0,1,1,0];[0,2,0,0];[0,0,1,2];[0,0,2,1];[0,1,0,2];[0,1,1,1]]
Min replicacount:0 1 0 1
Max replicacount:0 1 1 1
Elementstr: [[1,0,0,0];[1,0,0,1]]
Min replicacount:1 0 0 0
Max replicacount:1 0 0 1
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 1e-09
[0, 1, 1, 1] -> 1e-09
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 0] -> 1e-09
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '4', 'score': '-0.1388888888888889', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;0;2;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 3
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 3
Returning adaptive scaler for  4 tenants and 0;0;2;1:
1
255
For 4 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}]
For 5 tenants, the current sample equals 0_0_2_0 and is positioned at index 3
New index positioned at 3
Left over configs in runtime manager: 
[[0, 1, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 119
[0, 1, 0, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '5', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0021', '1001', '0101', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 2
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 3
Returning adaptive scaler for  4 tenants and 0;0;2;1:
1
255
For 4 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 2
New index positioned at 2
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 119
[0, 1, 0, 1] -> 126
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 2, 0] -> 119
[0, 1, 0, 1] -> 126
Results
[{'config': '4', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1388888888888889', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}, {'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}, {'config': '4', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1388888888888889', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '119', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 126.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_1_0_1
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0020', '0101', '1000', '0110', '0012', '0021', '0200', '0102', '0030', '1001', '0111', '0013', '1010', '0120', '0022', '0201', '0103', '1100', '1002', '0210', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 1, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 11 with window 10
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0201', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
Starting at index 0 with window 1
['0101', '0201', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
RETRYING WITH ANOTHER WORKER CONFIGURATION
Starting at index 0 with window 1
[0, 1, 0, 1]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '3', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0201', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '3', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 1
shared_resources for resource type memory: 2
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '3', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[[{'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d92ad0>, <src.sla.WorkerConf object at 0x7fac71d91b50>, <src.sla.WorkerConf object at 0x7fac71d91f50>, <src.sla.WorkerConf object at 0x7fac71d91cd0>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d92410>, <src.sla.WorkerConf object at 0x7fac7283eb10>, <src.sla.WorkerConf object at 0x7fac7283e510>, <src.sla.WorkerConf object at 0x7fac71d91ad0>]]]
False
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  4 tenants and 0;0;2;1:
1
255
For 4 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '3', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '153', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853, 8544343532]
NO RESULT
Previous scale action undone
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
6
4
3
1
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d92ad0>, <src.sla.WorkerConf object at 0x7fac71d91b50>, <src.sla.WorkerConf object at 0x7fac71d91f50>, <src.sla.WorkerConf object at 0x7fac71d91cd0>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d92410>, <src.sla.WorkerConf object at 0x7fac7283eb10>, <src.sla.WorkerConf object at 0x7fac7283e510>, <src.sla.WorkerConf object at 0x7fac71d91ad0>]], [{}, [], [<src.sla.WorkerConf object at 0x7fac71d13d10>, <src.sla.WorkerConf object at 0x7fac71d76310>, <src.sla.WorkerConf object at 0x7fac71d76890>, <src.sla.WorkerConf object at 0x7fac71d76990>]]]
Conf 0:
126
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;1 and result
{'config': '5', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Starting at index 0 with window 1
Getting next batch of experiments for 5 tenants
min_conf: 0 1 0 1
min_conf_dec: 0
0
[0, 1, 0, 1]
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 1]]}
Elementstr: [[0,1,0,1]]
Min replicacount:0 1 0 1
Max replicacount:0 1 0 1
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 126
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Conf [0, 0, 0, 3] with completion time 160.0s has smaller or equal resource amount
Conf [0, 0, 2, 0] with completion time 119.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 1
shared_resources for resource type memory: 2
Starting at: 6
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;0;2:
1
255
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 3
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}]
For 4 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Left over configs in runtime manager: 
[[0, 1, 1, 1], [0, 0, 1, 2], [0, 1, 0, 2], [0, 2, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 6 tenants
Starting at index 1 with window 10
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 100
[0, 1, 1, 1] -> 1e-09
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.08333333333333333', 'config': '1', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;0;0;2:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 1
shared_resources for resource type memory: 2
Starting at: 3
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
[0, 0, 1, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 1, 0, 3]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 1
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
[0, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 3
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}]
For 3 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
[0, 2, 1, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 3, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 3
Left over configs in runtime manager: 
[[0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1], [1, 0, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 6 tenants
Starting at index 1 with window 10
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 146
[0, 0, 0, 2] -> 148
[0, 0, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Conf [0, 0, 0, 2] with completion time 148.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 2
shared_resources for resource type memory: 4
Starting at: 3
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}, [0, 0, 0, 2], [<src.sla.WorkerConf object at 0x7fac728534d0>, <src.sla.WorkerConf object at 0x7fac72853550>, <src.sla.WorkerConf object at 0x7fac72853450>, <src.sla.WorkerConf object at 0x7fac728539d0>]]]
False
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
1
255
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 1
New index positioned at 1
Returning adaptive scaler for  3 tenants and 0;0;1;0:
1
255
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 0, 2]
Measured completion time is 122.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943, 8544343532]
NO COST EFFECTIVE RESULT
Previous scale down undone
Starting with0_0_0_2
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
6
4
3
2
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': '-0.10666666666666667', 'best_score': '-0.10666666666666667', 'SLAName': 'silver', 'CompletionTime': '68', 'Successfull': 'true'}, [0, 0, 0, 2], [<src.sla.WorkerConf object at 0x7fac728534d0>, <src.sla.WorkerConf object at 0x7fac72853550>, <src.sla.WorkerConf object at 0x7fac72853450>, <src.sla.WorkerConf object at 0x7fac728539d0>]], [{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}, [0, 0, 0, 2], [<src.sla.WorkerConf object at 0x7fac7447ad50>, <src.sla.WorkerConf object at 0x7fac7447afd0>, <src.sla.WorkerConf object at 0x7fac7447ac10>, <src.sla.WorkerConf object at 0x7fac7447a690>]]]
Conf 0:
68
Conf 1:
122
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 2, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 1
Going back to worker configuration with lowest cost for combination 0;0;0;2 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '122', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [0], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Filtering from index 3 with window 1
Starting at index 3 with window 1
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
Going to 3 tenants
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 4 tenants
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 5 tenants
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 6 tenants
Starting at index 3 with window 1
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Starting at index 3 with window 1
[0, 0, 0, 2]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '2', 'score': '-0.06666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '122', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010', '0120', '0201', '1100']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '93', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 1
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '93', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '93', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;1;0:
1
255
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '93', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '93', 'Successfull': 'true'}]
For 1 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
[0, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 2, 0, 1]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 1
Left over configs in runtime manager: 
[[0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 52
[0, 0, 0, 2] -> 47
[0, 0, 1, 0] -> 93
[0, 1, 1, 0] -> 1e-09
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '3', 'score': '-0.14666666666666667', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '122', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;1;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Conf [0, 0, 0, 2] with completion time 47.0s has smaller or equal resource amount
Conf [0, 0, 1, 0] with completion time 93.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 68.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 122.0s has smaller or equal resource amount
Conf [0, 0, 0, 3] with completion time 146.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 148.0s has smaller or equal resource amount
Conf [0, 0, 0, 3] with completion time 160.0s has smaller or equal resource amount
Conf [0, 0, 2, 0] with completion time 119.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 3
shared_resources for resource type memory: 2
Starting at: 8
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;1;0:
1
255
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
For 1 tenants, the current sample equals 0_1_1_0 and is positioned at index 8
New index positioned at 8
Left over configs in runtime manager: 
[[0, 1, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 1, 1, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 52
[0, 0, 0, 2] -> 47
[0, 0, 1, 0] -> 93
[0, 1, 1, 0] -> 53
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
1
255
Processing request for 1 tenants
currentResult found:
[0, 1, 0, 0]
Using currentResult as basis
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '4', 'score': '-0.08', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '122', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  1 tenants and 0;1;0;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Conf [0, 0, 1, 0] with completion time 93.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 122.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 148.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 2
Starting at: 2
Tenant_nb: 1, maxTenants: 1
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  2 tenants and 0;0;0;2:
1
255
For 2 tenants, the current sample equals 0_0_0_2 and is positioned at index 3
New index positioned at 3
Returning adaptive scaler for  3 tenants and 0;0;1;0:
1
255
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
For 1 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Left over configs in runtime manager: 
[[0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Filtering from index 5 with window 10
Starting at index 5 with window 10
Going to 2 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 6 tenants
Starting at index 5 with window 10
['0001', '0010', '0100', '0002', '0011', '0020', '0101', '1000', '0110', '0003', '0200', '0012', '0021', '0102', '1001', '0030', '0111', '1010']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/1_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 52
[0, 0, 0, 2] -> 47
[0, 0, 1, 0] -> 93
[0, 1, 1, 0] -> 53
[0, 1, 0, 0] -> 53
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
1
255
Processing request for 2 tenants
currentResult found:
[0, 0, 0, 2]
previousResult found:
[0, 0, 1, 0]
Transferring direct result from  to 2:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 93.0, 'Successfull': 'true'}
Returning adaptive scaler for  1 tenants and 0;0;1;0:
Returning adaptive scaler for  2 tenants and 0;0;0;2:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Using currentResult as basis
1
255
Exploration phase started...
Testing from the smallest possible conf
Getting next batch of experiments for 2 tenants
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 0, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
Going to 3 tenants
[0, 0, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Mot moved
Going to 4 tenants
[0, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Mot moved
Going to 5 tenants
[0, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_1: 0
Mot moved
Going to 6 tenants
Starting at index 0 with window 1
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
min_conf: 0 0 0 1
min_conf_dec: 0
0
[0, 0, 0, 1]
{'0': [[0, 0, 1]]}
{'0': [[0, 1, 0]]}
{'0': [[1, 0, 0]]}
{'1': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[0, 0, 1]]}
Elementstr: [[0,0,0,1]]
Min replicacount:0 0 0 1
Max replicacount:0 0 0 1
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 1] -> 1e-09
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.041666666666666664', 'config': '0', 'score': '-0.041666666666666664', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  2 tenants and 0;1;0;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Conf [0, 0, 0, 2] with completion time 122.0s has smaller or equal resource amount
Conf [0, 0, 0, 2] with completion time 148.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 2
Starting at: 2
Tenant_nb: 2, maxTenants: 2
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 1
New index positioned at 5
Returning adaptive scaler for  3 tenants and 0;0;1;0:
1
255
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
New index positioned at 1
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '53', 'Successfull': 'true'}]
For 2 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 1] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
Results
[]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853]
NO RESULT
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
Going to 3 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
Getting next batch of experiments for 2 tenants
min_conf: 0 1 0 0
min_conf_dec: 2
2
[0, 1, 0, 0]
3
[0, 0, 0, 2]
4
[0, 0, 1, 1]
5
[0, 1, 0, 1]
6
[0, 0, 0, 3]
7
[0, 0, 2, 0]
8
[1, 0, 0, 0]
9
[0, 1, 1, 0]
10
[0, 0, 1, 2]
11
[0, 2, 0, 0]
{'0': [[1, 0, 0], [0, 0, 2], [0, 1, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0], [1, 1, 0], [0, 1, 2], [2, 0, 0]], '1': [[0, 0, 0]]}
{'1': [[0, 0, 0], [0, 1, 0], [1, 0, 0]], '0': [[0, 2, 0], [1, 1, 0], [0, 3, 0], [2, 0, 0], [0, 0, 1], [1, 2, 0]], '2': [[0, 0, 0]]}
{'0': [[0, 0, 1], [2, 0, 0], [1, 0, 1], [3, 0, 0], [0, 1, 0], [0, 0, 2]], '1': [[1, 0, 0], [0, 0, 1], [2, 0, 0]], '2': [[0, 0, 0]]}
{'0': [[0, 1, 0], [0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]], '2': [[0, 0, 0], [0, 0, 1]], '1': [[0, 0, 1], [0, 1, 0]], '3': [[0, 0, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 0], [0, 0, 2], [0, 1, 1], [1, 0, 1], [0, 0, 3], [0, 2, 0], [1, 1, 0], [0, 1, 2], [2, 0, 0]], '1': [[0, 0, 0]]}
Elementstr: [[0,1,0,0];[0,0,0,2];[0,0,1,1];[0,1,0,1];[0,0,0,3];[0,0,2,0];[0,1,1,0];[0,0,1,2];[0,2,0,0]]
Min replicacount:0 1 0 0
Max replicacount:0 2 0 0
Elementstr: [[1,0,0,0]]
Min replicacount:1 0 0 0
Max replicacount:1 0 0 0
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 1, 2] -> 1e-09
[0, 0, 0, 2] -> 1e-09
[0, 1, 0, 1] -> 1e-09
[0, 0, 1, 1] -> 1e-09
[0, 0, 0, 3] -> 1e-09
[0, 1, 0, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/2_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 0] -> 1e-09
Saving optimal results into matrix for previous results
1
255
Processing request for 3 tenants
currentResult found:
[0, 0, 1, 0]
0_0_0_2 has already been sampled for the following workers:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Using currentResult as basis
1
255
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;0;1;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103', '0120', '1100', '0022', '1002']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 1
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
[0, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 10
Returning adaptive scaler for  4 tenants and 0;1;1;1:
1
255
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}]
For 3 tenants, the current sample equals 0_0_1_0 and is positioned at index 1
[0, 1, 2, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 1, 0, 0]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[0, 0, 2, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
[1, 0, 0, 2]
Removing config because it has a higher resource cost than the current optimal result and therefore this config and all higher configs are not cost effective for the currrent or lower number of tenants
New index positioned at 1
Left over configs in runtime manager: 
[[0, 1, 0, 0], [0, 0, 2, 0], [0, 1, 0, 1], [1, 0, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103']
Filtering from index 2 with window 10
Starting at index 2 with window 10
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 6 tenants
Starting at index 2 with window 10
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 146
[0, 0, 0, 2] -> 148
[0, 0, 1, 0] -> 128
[0, 1, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;1;1;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Conf [0, 0, 0, 3] with completion time 160.0s has smaller or equal resource amount
Conf [0, 0, 2, 1] with completion time 100.0s has smaller or equal resource amount
Conf [0, 0, 2, 0] with completion time 119.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 3
shared_resources for resource type memory: 2
Starting at: 9
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 2
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}]
For 4 tenants, the current sample equals 0_1_1_1 and is positioned at index 9
New index positioned at 9
Left over configs in runtime manager: 
[[0, 0, 1, 2], [0, 1, 0, 2], [0, 2, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 6 tenants
Starting at index 1 with window 10
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 100
[0, 1, 1, 1] -> 85
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '126', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 109
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/5_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 109
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 109.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_1_0_1
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0020', '0101', '1000', '0110', '0012', '0021', '0200', '0102', '0030', '1001', '0111', '0013', '1010', '0120', '0022', '0201', '0103', '1100', '1002', '0210', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 1, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 11 with window 10
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0201', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
0_1_0_1 has already been sampled for the following workers:
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 10 with window 10
[0, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 20 with window 10
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 30 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d53e90>, <src.sla.WorkerConf object at 0x7fac71d53f10>, <src.sla.WorkerConf object at 0x7fac71d53390>, <src.sla.WorkerConf object at 0x7fac71d53fd0>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71de9cd0>, <src.sla.WorkerConf object at 0x7fac71de9410>, <src.sla.WorkerConf object at 0x7fac71de9b90>, <src.sla.WorkerConf object at 0x7fac71de9bd0>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d91750>, <src.sla.WorkerConf object at 0x7fac71d91810>, <src.sla.WorkerConf object at 0x7fac71d91c90>, <src.sla.WorkerConf object at 0x7fac71d915d0>]]]
Conf 0:
109
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;1 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '109', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Starting at index 0 with window 1
[0, 1, 0, 1]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '109', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 109.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
1
255
Processing request for 6 tenants
previousResult found:
[0, 1, 0, 1]
Transferring direct result from  to 6:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 126.0, 'Successfull': 'true'}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 6 tenants
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
Going to 7 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 1 0 1
min_conf_dec: 0
0
[0, 1, 0, 1]
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 1]]}
Elementstr: [[0,1,0,1]]
Min replicacount:0 1 0 1
Max replicacount:0 1 0 1
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,1,0,1]
Runtime manager:: Sample list before remove:
[[0, 1, 0, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac71d5a310>, <src.sla.WorkerConf object at 0x7fac71d5ab50>, <src.sla.WorkerConf object at 0x7fac71d5ae50>, <src.sla.WorkerConf object at 0x7fac71d5abd0>], '[[0,1,0,1]]', '0 1 0 1', '0 1 0 1', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 115.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_1_0_1
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0020', '0101', '1000', '0110', '0012', '0021', '0200', '0102', '0030', '1001', '0111', '0013', '1010', '0120', '0022', '0201', '0103', '1100', '1002', '0210', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 1, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 11 with window 10
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0201', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
0_1_0_1 has already been sampled for the following workers:
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 10 with window 10
[0, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 20 with window 10
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 30 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac7285a050>, <src.sla.WorkerConf object at 0x7fac7285a250>, <src.sla.WorkerConf object at 0x7fac71d781d0>, <src.sla.WorkerConf object at 0x7fac7283e290>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71d92690>, <src.sla.WorkerConf object at 0x7fac71d92850>, <src.sla.WorkerConf object at 0x7fac71d92750>, <src.sla.WorkerConf object at 0x7fac71d92910>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac7309f5d0>, <src.sla.WorkerConf object at 0x7fac7283e1d0>, <src.sla.WorkerConf object at 0x7fac7283e190>, <src.sla.WorkerConf object at 0x7fac71d13f10>]]]
Conf 0:
115
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;1 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '115', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Starting at index 0 with window 1
[0, 1, 0, 1]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
1
255
Processing request for 7 tenants
previousResult found:
[0, 1, 0, 1]
Transferring direct result from  to 7:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 135.0, 'Successfull': 'true'}
Returning adaptive scaler for  6 tenants and 0;1;0;1:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 7 tenants
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
Going to 8 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 1 0 1
min_conf_dec: 0
0
[0, 1, 0, 1]
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
{'0': [[1, 0, 1]]}
{'1': [[0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 1]]}
Elementstr: [[0,1,0,1]]
Min replicacount:0 1 0 1
Max replicacount:0 1 0 1
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,1,0,1]
Runtime manager:: Sample list before remove:
[[0, 1, 0, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac71d5a890>, <src.sla.WorkerConf object at 0x7fac71d5ad10>, <src.sla.WorkerConf object at 0x7fac744d4e50>, <src.sla.WorkerConf object at 0x7fac744d4610>], '[[0,1,0,1]]', '0 1 0 1', '0 1 0 1', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Returning adaptive scaler for  6 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 0
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 135
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/6_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 135
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '135', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 135.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
1
255
Processing request for 8 tenants
Searching from the smallest possible combination
1
255
Getting next batch of experiments for 8 tenants
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
Starting at index 0 with window 10
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 1 0 1
min_conf_dec: 0
0
[0, 1, 0, 1]
1
[0, 0, 2, 0]
2
[1, 0, 0, 0]
3
[0, 1, 1, 0]
4
[0, 0, 1, 2]
5
[0, 2, 0, 0]
6
[0, 1, 0, 2]
7
[0, 0, 2, 1]
8
[1, 0, 0, 1]
9
[0, 1, 1, 1]
{'0': [[1, 0, 1], [0, 2, 0], [1, 1, 0], [0, 1, 2], [2, 0, 0], [1, 0, 2], [0, 2, 1], [1, 1, 1]], '1': [[0, 0, 0], [0, 0, 1]]}
{'1': [[0, 1, 0], [1, 0, 0], [0, 2, 0], [1, 1, 0]], '0': [[2, 0, 0], [0, 0, 1], [1, 2, 0], [2, 1, 0], [0, 1, 1]], '2': [[0, 0, 0]]}
{'0': [[1, 0, 1], [0, 1, 0], [0, 0, 2], [2, 0, 1], [1, 1, 0]], '2': [[0, 0, 0], [1, 0, 0]], '1': [[0, 0, 1], [2, 0, 0], [1, 0, 1]]}
{'1': [[0, 1, 0], [0, 0, 2], [1, 0, 0], [0, 1, 1]], '0': [[0, 0, 2], [1, 0, 0], [0, 1, 1], [0, 2, 0]], '2': [[0, 0, 1], [0, 1, 0]]}
Next possible experiments for next nb of tenants
{'0': [[1, 0, 1], [0, 2, 0], [1, 1, 0], [0, 1, 2], [2, 0, 0], [1, 0, 2], [0, 2, 1], [1, 1, 1]], '1': [[0, 0, 0], [0, 0, 1]]}
Elementstr: [[0,1,0,1];[0,0,2,0];[0,1,1,0];[0,0,1,2];[0,2,0,0];[0,1,0,2];[0,0,2,1];[0,1,1,1]]
Min replicacount:0 1 0 1
Max replicacount:0 1 1 1
Elementstr: [[1,0,0,0];[1,0,0,1]]
Min replicacount:1 0 0 0
Max replicacount:1 0 0 1
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 1e-09
[0, 1, 1, 1] -> 1e-09
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 0] -> 1e-09
Returning adaptive scaler for  7 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 0
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 7
Current result is NO RESULT, therefore, we remove all configs with lower resource_cost than current result for higher number of tenants: 8..8
REMOVING CONFS FOR NB OF TENANTS: 8
Removing failed conf
[0, 1, 0, 1]
New index positioned at 7
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 152
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/7_tenants-ex0/op/
SAMPLE_LIST
[0, 1, 0, 1] -> 152
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-1.0133333333333334', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853]
NO RESULT
TIPPED_OVER_CONFS
[[0, 1, 0, 1]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
3
2
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
Going to 8 tenants
[0, 1, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 9 tenants
Starting at index 0 with window 1
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
RETRYING WITH ANOTHER WORKER CONFIGURATION
Starting at index 0 with window 1
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 1
shared_resources for resource type memory: 2
1
255
Processing request for 9 tenants
previousResult found:
[0, 0, 2, 1]
Transferring direct result from  to 9:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 140.0, 'Successfull': 'true'}
Returning adaptive scaler for  8 tenants and 0;0;2;1:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 9 tenants
Moving filtered samples in sorted combinations after the window
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 6 with window 1
Starting at index 6 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
Starting at index 6 with window 1
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 0 2 1
min_conf_dec: 6
6
[0, 0, 2, 1]
{'0': [[0, 2, 1]]}
{'0': [[2, 1, 0]]}
{'2': [[1, 0, 0]]}
{'1': [[0, 0, 2]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 1]]}
Elementstr: [[0,0,2,1]]
Min replicacount:0 0 2 1
Max replicacount:0 0 2 1
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,0,2,1]
Runtime manager:: Sample list before remove:
[[0, 0, 2, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac7447a6d0>, <src.sla.WorkerConf object at 0x7fac7447a650>, <src.sla.WorkerConf object at 0x7fac7447ab90>, <src.sla.WorkerConf object at 0x7fac7447ad10>], '[[0,0,2,1]]', '0 0 2 1', '0 0 2 1', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Returning adaptive scaler for  8 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 6
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  9 tenants and 0;0;2;1:
1
255
For 9 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}]
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Left over configs in runtime manager: 
[[0, 1, 1, 1], [0, 0, 1, 2], [0, 1, 0, 2], [0, 2, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
Going to 9 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
Starting at index 0 with window 10
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 140
[0, 1, 1, 1] -> 1e-09
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
There still remains configs to be tested in the current k8-resource-optimizer experiment batch
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}
shared_replicas: 3
shared_resources for resource type cpu: 9
shared_resources for resource type memory: 10
1
255
Processing request for 10 tenants
previousResult found:
[0, 0, 2, 1]
Transferring direct result from  to 10:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': 146.0, 'Successfull': 'true'}
Returning adaptive scaler for  9 tenants and 0;0;2;1:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Using previousResult as basis
1
255
Getting next batch of experiments for 10 tenants
Moving filtered samples in sorted combinations after the window
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 6 with window 1
Starting at index 6 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
Going to 11 tenants
Starting at index 6 with window 1
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
min_conf: 0 0 2 1
min_conf_dec: 6
6
[0, 0, 2, 1]
{'0': [[0, 2, 1]]}
{'0': [[2, 1, 0]]}
{'2': [[1, 0, 0]]}
{'1': [[0, 0, 2]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 1]]}
Elementstr: [[0,0,2,1]]
Min replicacount:0 0 2 1
Max replicacount:0 0 2 1
Generating new experiment. Saving results on Results/exp3/silver/10_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 1e-09
Runtime manager:: Removing sample for the following conf: [0,0,2,1]
Runtime manager:: Sample list before remove:
[[0, 0, 2, 1]]
Runtime manager:: Going to next experiment
Runtime manager:: Sample list after remove:
Runtime manager:: No experiments left.
Runtime manager:: last_executed_experiment:
{'experiment_spec': [[<src.sla.WorkerConf object at 0x7fac71d58190>, <src.sla.WorkerConf object at 0x7fac71d58990>, <src.sla.WorkerConf object at 0x7fac7447ac90>, <src.sla.WorkerConf object at 0x7fac7447a950>], '[[0,0,2,1]]', '0 0 2 1', '0 0 2 1', 1], 'experiment_nb': 0, 'sample_nb': 0, 'sample': {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '1e-09', 'Successfull': 'true'}}
Returning adaptive scaler for  9 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
Starting at: 6
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;1;1;1:
1
255
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 8
New index positioned at 8
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
For 9 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 146
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 146
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 1]
Measured completion time is 146.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  10 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}
shared_replicas: 3
shared_resources for resource type cpu: 9
shared_resources for resource type memory: 10
Starting at: 6
Tenant_nb: 10, maxTenants: 10
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;1;1;1:
1
255
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
New index positioned at 8
Returning adaptive scaler for  9 tenants and 0;0;2;1:
1
255
For 9 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}]
Filtered results
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Left over configs in runtime manager: 
[]
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/10_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 156
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 1 experiments
Generating new experiment. Saving results on Results/exp3/silver/10_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 156
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-1.04', 'best_score': '-1', 'SLAName': 'silver', 'CompletionTime': '156', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853]
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 2, 1]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
3
2
Moving filtered samples in sorted combinations after the window
['0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 6 with window 1
Starting at index 6 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 2, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 11 tenants
Starting at index 6 with window 1
['0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
RETRYING WITH ANOTHER WORKER CONFIGURATION
Starting at index 6 with window 1
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  10 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Conf [0, 0, 2, 1] with completion time 156.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 4
Starting at: 6
Tenant_nb: 10, maxTenants: 10
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
False
True
[[0, 0, 2, 1]]
[0, 0, 2, 1]
[[{}, [], [<src.sla.WorkerConf object at 0x7fac71d91a50>, <src.sla.WorkerConf object at 0x7fac71d91110>, <src.sla.WorkerConf object at 0x7fac71d91090>, <src.sla.WorkerConf object at 0x7fac71d91310>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;1;1;1:
1
255
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
New index positioned at 8
Returning adaptive scaler for  9 tenants and 0;0;2;1:
1
255
For 9 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '152', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[9880593853, 8544343532]
NO RESULT
Previous scale action undone
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
4
1
Moving filtered samples in sorted combinations after the window
['1000', '0020', '0110', '0012', '0200', '0102', '1001', '0021', '0111', '0013', '0201', '0103', '1010', '1100', '1002', '0030', '0120', '0022', '0210', '0300']
Filtering from index 7 with window 1
Starting at index 7 with window 1
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 11 tenants
Starting at index 7 with window 1
['1000', '0020', '0110', '0012', '0200', '0102', '1001', '0021', '0111', '0013', '0201', '0103', '1010', '1100', '1002', '0030', '0120', '0022', '0210', '0300']
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
RETRYING WITH ANOTHER WORKER CONFIGURATION
Starting at index 7 with window 1
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  10 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['1000', '0020', '0110', '0012', '0200', '0102', '1001', '0021', '0111', '0013', '0201', '0103', '1010', '1100', '1002', '0030', '0120', '0022', '0210', '0300']
Conf [0, 0, 2, 1] with completion time 156.0s has smaller or equal resource amount
Conf [0, 0, 2, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 7
Tenant_nb: 10, maxTenants: 10
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
False
True
[[0, 0, 2, 1]]
[0, 0, 2, 1]
[[{}, [], [<src.sla.WorkerConf object at 0x7fac71d91a50>, <src.sla.WorkerConf object at 0x7fac71d91110>, <src.sla.WorkerConf object at 0x7fac71d91090>, <src.sla.WorkerConf object at 0x7fac71d91310>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;1;1;1:
1
255
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 8
Returning adaptive scaler for  9 tenants and 0;0;2;1:
1
255
For 9 tenants, the current sample equals 0_0_2_1 and is positioned at index 6
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 9
New index positioned at 6
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 1]
Measured completion time is 133.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '146', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  9 tenants and 0;0;2;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 0, 2, 1] with completion time 146.0s has smaller or equal resource amount
!!!!!!!!!!!!!!!!!!!!!!It seems the alphabet does not scale monotonically anymore: ADJUSTING transition constraints for TENANT NB from 9concurrent jobs and higher number of concurrent jobs!!!!!!!!!!!!!!!!!!!!!!!!:
!!!!!! ADJUSTING shared_resources for resource type cpu: 0 -> 2
1
255
1
255
Starting at: 13
Tenant_nb: 9, maxTenants: 9
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}]
Filtered results
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;1;1;1:
1
255
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
New index positioned at 8
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 13
Current result is NO RESULT, therefore, we remove all configs with lower resource_cost than current result for higher number of tenants: 10..10
REMOVING CONFS FOR NB OF TENANTS: 10
[0, 0, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 0, 3]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 1]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[1, 0, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 2, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 0, 1, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 1, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 1, 0, 2]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
[0, 2, 0, 0]
Removing config because it has a lower resource cost than the failed result and we assume it will therefore fail for this tenant
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '163', 'Successfull': 'true'}]
Filtered results
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[9880593853]
NO RESULT
TIPPED_OVER_CONFS
[[0, 0, 2, 1]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 4
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
6
4
3
2
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0020', '1000', '0110', '0003', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300', '0112', '0031', '1011', '0202', '0121', '1101', '1020', '2000', '0211', '0130', '1110', '0023', '1003', '0301', '0220', '1200', '0113', '0032', '1012', '0310', '0203', '0122', '1102', '1021', '2001', '0212', '0131', '1111', '1030', '2010', '0302', '0221', '1201', '1120', '2100', '0033', '1013', '0311', '0230', '1210', '0123', '1103', '1022', '2002', '0320', '1300', '0213', '0132', '1112', '1031', '2011', '0303', '0222', '1202', '1121', '2101', '2020', '3000', '0312', '0231', '1211', '1130', '2110', '1023', '2003', '0321', '1301', '1220', '2200', '0133', '1113', '1032', '2012', '0330', '1310', '0223', '1203', '1122', '2102', '2021', '3001', '0313', '0232', '1212', '1131', '2111', '2030', '3010', '0322', '1302', '1221', '2201', '2120', '3100', '1033', '2013', '0331', '1311', '1230', '2210', '1123', '2103', '2022', '3002', '1320', '2300', '0233', '1213', '1132', '2112', '2031', '3011', '0323', '1303', '1222', '2202', '2121', '3101', '3020', '0332', '1312', '1231', '2211', '2130', '3110', '2023', '3003', '1321', '2301', '2220', '3200', '1133', '2113', '2032', '3012', '1330', '2310', '1223', '2203', '2122', '3102', '3021', '0333', '1313', '1232', '2212', '2131', '3111', '3030', '1322', '2302', '2221', '3201', '3120', '2033', '3013', '1331', '2311', '2230', '3210', '2123', '3103', '3022', '2320', '3300', '1233', '2213', '2132', '3112', '3031', '1323', '2303', '2222', '3202', '3121', '1332', '2312', '2231', '3211', '3130', '3023', '2321', '3301', '3220', '2133', '3113', '3032', '2330', '3310', '2223', '3203', '3122', '1333', '2313', '2232', '3212', '3131', '2322', '3302', '3221', '3033', '2331', '3311', '3230', '3123', '3320', '2233', '3213', '3132', '2323', '3303', '3222', '2332', '3312', '3231', '3321', '3133', '3330', '3223', '2333', '3313', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 13 with window 1
Starting at index 13 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
SCALING INDEX = 3
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 14 with window 1
[1, 0, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 15 with window 1
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 16 with window 1
[0, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 17 with window 1
[1, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 18 with window 1
[0, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 19 with window 1
[0, 1, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 20 with window 1
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 1
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 22 with window 1
[0, 2, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 23 with window 1
[0, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 24 with window 1
[0, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 25 with window 1
[1, 0, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 26 with window 1
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 27 with window 1
[0, 1, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 28 with window 1
[0, 0, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 29 with window 1
[1, 0, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 30 with window 1
[0, 2, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 31 with window 1
[0, 1, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 32 with window 1
[1, 1, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 33 with window 1
[1, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 34 with window 1
[2, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 35 with window 1
[0, 2, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 36 with window 1
[0, 1, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 37 with window 1
[1, 1, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 38 with window 1
[0, 0, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 39 with window 1
[1, 0, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 40 with window 1
[0, 3, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 41 with window 1
[0, 2, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 42 with window 1
[1, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 43 with window 1
[0, 1, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 44 with window 1
[0, 0, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 45 with window 1
[1, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 46 with window 1
[0, 3, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 47 with window 1
[0, 2, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 48 with window 1
[0, 1, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 49 with window 1
[1, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 50 with window 1
[1, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 51 with window 1
[2, 0, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 52 with window 1
[0, 2, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 53 with window 1
[0, 1, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 54 with window 1
[1, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 55 with window 1
[1, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 56 with window 1
[2, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 57 with window 1
[0, 3, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 58 with window 1
[0, 2, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 59 with window 1
[1, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 60 with window 1
[1, 1, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 61 with window 1
[2, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 62 with window 1
[0, 0, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 63 with window 1
[1, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 64 with window 1
[0, 3, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 65 with window 1
[0, 2, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 66 with window 1
[1, 2, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 67 with window 1
[0, 1, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 68 with window 1
[1, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 69 with window 1
[1, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 70 with window 1
[2, 0, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 71 with window 1
[0, 3, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 72 with window 1
[1, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 73 with window 1
[0, 2, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 74 with window 1
[0, 1, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 75 with window 1
[1, 1, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 76 with window 1
[1, 0, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 77 with window 1
[2, 0, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 78 with window 1
[0, 3, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 79 with window 1
[0, 2, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 80 with window 1
[1, 2, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 81 with window 1
[1, 1, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 82 with window 1
[2, 1, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 83 with window 1
[2, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 84 with window 1
[3, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 85 with window 1
[0, 3, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 86 with window 1
[0, 2, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 87 with window 1
[1, 2, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 88 with window 1
[1, 1, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 89 with window 1
[2, 1, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 90 with window 1
[1, 0, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 91 with window 1
[2, 0, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 92 with window 1
[0, 3, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 93 with window 1
[1, 3, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 94 with window 1
[1, 2, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 95 with window 1
[2, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 96 with window 1
[0, 1, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 97 with window 1
[1, 1, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 98 with window 1
[1, 0, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 99 with window 1
[2, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 100 with window 1
[0, 3, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 101 with window 1
[1, 3, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 102 with window 1
[0, 2, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 103 with window 1
[1, 2, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 104 with window 1
[1, 1, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 105 with window 1
[2, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 106 with window 1
[2, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 107 with window 1
[3, 0, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 108 with window 1
[0, 3, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 109 with window 1
[0, 2, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 110 with window 1
[1, 2, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 111 with window 1
[1, 1, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 112 with window 1
[2, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 113 with window 1
[2, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 114 with window 1
[3, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 115 with window 1
[0, 3, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 116 with window 1
[1, 3, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 117 with window 1
[1, 2, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 118 with window 1
[2, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 119 with window 1
[2, 1, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 120 with window 1
[3, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 121 with window 1
[1, 0, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 122 with window 1
[2, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 123 with window 1
[0, 3, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 124 with window 1
[1, 3, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 125 with window 1
[1, 2, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 126 with window 1
[2, 2, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 127 with window 1
[1, 1, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 128 with window 1
[2, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 129 with window 1
[2, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 130 with window 1
[3, 0, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 131 with window 1
[1, 3, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 132 with window 1
[2, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 133 with window 1
[0, 2, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 134 with window 1
[1, 2, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 135 with window 1
[1, 1, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 136 with window 1
[2, 1, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 137 with window 1
[2, 0, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 138 with window 1
[3, 0, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 139 with window 1
[0, 3, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 140 with window 1
[1, 3, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 141 with window 1
[1, 2, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 142 with window 1
[2, 2, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 143 with window 1
[2, 1, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 144 with window 1
[3, 1, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 145 with window 1
[3, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 146 with window 1
[0, 3, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 147 with window 1
[1, 3, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 148 with window 1
[1, 2, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 149 with window 1
[2, 2, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 150 with window 1
[2, 1, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 151 with window 1
[3, 1, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 152 with window 1
[2, 0, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 153 with window 1
[3, 0, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 154 with window 1
[1, 3, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 155 with window 1
[2, 3, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 156 with window 1
[2, 2, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 157 with window 1
[3, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 158 with window 1
[1, 1, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 159 with window 1
[2, 1, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 160 with window 1
[2, 0, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 161 with window 1
[3, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 162 with window 1
[1, 3, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 163 with window 1
[2, 3, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 164 with window 1
[1, 2, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 165 with window 1
[2, 2, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 166 with window 1
[2, 1, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 167 with window 1
[3, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 168 with window 1
[3, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 169 with window 1
[0, 3, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 170 with window 1
[1, 3, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 171 with window 1
[1, 2, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 172 with window 1
[2, 2, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 173 with window 1
[2, 1, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 174 with window 1
[3, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 175 with window 1
[3, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 176 with window 1
[1, 3, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 177 with window 1
[2, 3, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 178 with window 1
[2, 2, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 179 with window 1
[3, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 180 with window 1
[3, 1, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 181 with window 1
[2, 0, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 182 with window 1
[3, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 183 with window 1
[1, 3, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 184 with window 1
[2, 3, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 185 with window 1
[2, 2, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 186 with window 1
[3, 2, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 187 with window 1
[2, 1, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 188 with window 1
[3, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 189 with window 1
[3, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 190 with window 1
[2, 3, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 191 with window 1
[3, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 192 with window 1
[1, 2, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 193 with window 1
[2, 2, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 194 with window 1
[2, 1, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 195 with window 1
[3, 1, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 196 with window 1
[3, 0, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 197 with window 1
[1, 3, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 198 with window 1
[2, 3, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 199 with window 1
[2, 2, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 200 with window 1
[3, 2, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 201 with window 1
[3, 1, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 202 with window 1
[1, 3, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 203 with window 1
[2, 3, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 204 with window 1
[2, 2, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 205 with window 1
[3, 2, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 206 with window 1
[3, 1, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 207 with window 1
[3, 0, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 208 with window 1
[2, 3, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 209 with window 1
[3, 3, 0, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 210 with window 1
[3, 2, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 211 with window 1
[2, 1, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 212 with window 1
[3, 1, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 213 with window 1
[3, 0, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 214 with window 1
[2, 3, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 215 with window 1
[3, 3, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 216 with window 1
[2, 2, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 217 with window 1
[3, 2, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 218 with window 1
[3, 1, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 219 with window 1
[1, 3, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 220 with window 1
[2, 3, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 221 with window 1
[2, 2, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 222 with window 1
[3, 2, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 223 with window 1
[3, 1, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 224 with window 1
[2, 3, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 225 with window 1
[3, 3, 0, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 226 with window 1
[3, 2, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 227 with window 1
[3, 0, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 228 with window 1
[2, 3, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 229 with window 1
[3, 3, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 230 with window 1
[3, 2, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 231 with window 1
[3, 1, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 232 with window 1
[3, 3, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 233 with window 1
[2, 2, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 234 with window 1
[3, 2, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 235 with window 1
[3, 1, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 236 with window 1
[2, 3, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 237 with window 1
[3, 3, 0, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 238 with window 1
[3, 2, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 239 with window 1
[2, 3, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 240 with window 1
[3, 3, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 241 with window 1
[3, 2, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 242 with window 1
[3, 3, 2, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 243 with window 1
[3, 1, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 244 with window 1
[3, 3, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 245 with window 1
[3, 2, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 246 with window 1
[2, 3, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 247 with window 1
[3, 3, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 248 with window 1
[3, 2, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 249 with window 1
[3, 3, 2, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 250 with window 1
[3, 3, 3, 1]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 251 with window 1
[3, 2, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 252 with window 1
[3, 3, 2, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 253 with window 1
[3, 3, 3, 2]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 254 with window 1
[3, 3, 3, 3]
Resource cost is too high in comparison with initial conf [0, 0, 2, 1]
SCALING INDEX = 3
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 255 with window 1
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 4, 'memory': 2}
{'cpu': 1, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '1000', '0020', '0110', '0200', '0012', '0102', '1001', '0021', '0111', '0201', '0013', '0103', '1010', '1100', '1002', '0030', '0120', '0210', '0022', '0300', '0112', '0202', '1011', '1101', '1003', '2000', '0031', '0121', '0211', '0023', '0301', '0113', '0203', '1020', '1110', '1200', '1012', '1102', '2001', '0130', '0220', '0032', '0310', '0122', '0212', '0302', '1021', '1111', '1201', '1013', '1103', '2010', '2100', '2002', '0131', '0221', '0033', '0311', '0123', '0213', '0303', '1030', '1120', '1210', '1022', '1300', '1112', '1202', '2011', '2101', '2003', '0230', '0320', '0132', '0222', '3000', '0312', '1031', '1121', '1211', '1023', '1301', '1113', '1203', '2020', '2110', '2200', '2012', '2102', '0231', '0321', '0133', '0223', '3001', '0313', '1130', '1220', '1032', '1310', '1122', '1212', '1302', '2021', '2111', '2201', '2013', '2103', '0330', '0232', '3010', '0322', '3100', '3002', '1131', '1221', '1033', '1311', '1123', '1213', '1303', '2030', '2120', '2210', '2022', '2300', '2112', '2202', '0331', '0233', '3011', '0323', '3101', '3003', '1230', '1320', '1132', '1222', '1312', '2031', '2121', '2211', '2023', '2301', '2113', '2203', '3020', '0332', '3110', '3200', '3012', '3102', '1231', '1321', '1133', '1223', '1313', '2130', '2220', '2032', '2310', '2122', '2212', '2302', '3021', '0333', '3111', '3201', '3013', '3103', '1330', '1232', '1322', '2131', '2221', '2033', '2311', '2123', '2213', '2303', '3030', '3120', '3210', '3022', '3300', '3112', '3202', '1331', '1233', '1323', '2230', '2320', '2132', '2222', '2312', '3031', '3121', '3211', '3023', '3301', '3113', '3203', '1332', '2231', '2321', '2133', '2223', '2313', '3130', '3220', '3032', '3310', '3122', '3212', '3302', '1333', '2330', '2232', '2322', '3131', '3221', '3033', '3311', '3123', '3213', '3303', '2331', '2233', '2323', '3230', '3320', '3132', '3222', '3312', '2332', '3231', '3321', '3133', '3223', '3313', '2333', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
No config exists that meets all filtering constraints
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0101', '0003', '1000', '0020', '0110', '0200', '0012', '0102', '1001', '0021', '0111', '0201', '0013', '0103', '1010', '1100', '1002', '0030', '0120', '0210', '0022', '0300', '0112', '0202', '1011', '1101', '1003', '2000', '0031', '0121', '0211', '0023', '0301', '0113', '0203', '1020', '1110', '1200', '1012', '1102', '2001', '0130', '0220', '0032', '0310', '0122', '0212', '0302', '1021', '1111', '1201', '1013', '1103', '2010', '2100', '2002', '0131', '0221', '0033', '0311', '0123', '0213', '0303', '1030', '1120', '1210', '1022', '1300', '1112', '1202', '2011', '2101', '2003', '0230', '0320', '0132', '0222', '3000', '0312', '1031', '1121', '1211', '1023', '1301', '1113', '1203', '2020', '2110', '2200', '2012', '2102', '0231', '0321', '0133', '0223', '3001', '0313', '1130', '1220', '1032', '1310', '1122', '1212', '1302', '2021', '2111', '2201', '2013', '2103', '0330', '0232', '3010', '0322', '3100', '3002', '1131', '1221', '1033', '1311', '1123', '1213', '1303', '2030', '2120', '2210', '2022', '2300', '2112', '2202', '0331', '0233', '3011', '0323', '3101', '3003', '1230', '1320', '1132', '1222', '1312', '2031', '2121', '2211', '2023', '2301', '2113', '2203', '3020', '0332', '3110', '3200', '3012', '3102', '1231', '1321', '1133', '1223', '1313', '2130', '2220', '2032', '2310', '2122', '2212', '2302', '3021', '0333', '3111', '3201', '3013', '3103', '1330', '1232', '1322', '2131', '2221', '2033', '2311', '2123', '2213', '2303', '3030', '3120', '3210', '3022', '3300', '3112', '3202', '1331', '1233', '1323', '2230', '2320', '2132', '2222', '2312', '3031', '3121', '3211', '3023', '3301', '3113', '3203', '1332', '2231', '2321', '2133', '2223', '2313', '3130', '3220', '3032', '3310', '3122', '3212', '3302', '1333', '2330', '2232', '2322', '3131', '3221', '3033', '3311', '3123', '3213', '3303', '2331', '2233', '2323', '3230', '3320', '3132', '3222', '3312', '2332', '3231', '3321', '3133', '3223', '3313', '2333', '3330', '3232', '3322', '3331', '3233', '3323', '3332', '3333']
Filtering from index 13 with window 10
Starting at index 13 with window 10
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 4 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 23 with window 10
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 2]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 2 tenants
[0, 1, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 1, 2]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 1, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 4 tenants
[0, 1, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 1, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 1, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 2]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 1, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 33 with window 10
[1, 0, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 1, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 3]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 3]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 2 tenants
[0, 2, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 3]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 3]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 1, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 3]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 3]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 2, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 3]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 2, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 3]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 1, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 3]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 1, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 1, 1, 3]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 1, 1, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 2, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 43 with window 10
[2, 0, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 0, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 3, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 2, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 1, 2]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 2 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 3, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 2, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 3, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 2, 2]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 1, 2]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 2, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 2]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 2]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 2, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 3, 1, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 1, 2, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 2, 1, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 1, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 53 with window 10
[1, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 0, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 3]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 0, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 0, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 3, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 1, 3]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 3, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 1, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 3, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 2, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 3, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 3, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 3, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 3, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 3, 1]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 2, 2, 1]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 1, 3, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_3_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_3_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_3_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 63 with window 10
[2, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 0, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 2, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 2, 2]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 2 tenants
[0, 1, 2, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 3, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 2, 2]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 2, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 3, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 2, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 4 tenants
[0, 1, 2, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 1, 2, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 2, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 2, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 2, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 2, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 2, 1, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 1, 2, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 73 with window 10
[0, 3, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 0, 1, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 0, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 0, 3]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 3, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 2, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 3, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 2 tenants
[2, 0, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 3, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[2, 0, 1, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 3, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 2, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 3, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 3, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 3, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 3, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 2, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 3, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 3, 2, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 1, 3, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 2, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 2, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 3, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_3_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_3_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_3_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 83 with window 10
[1, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 2, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 3, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 1, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 2, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 2, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 1, 2, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 2, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 2, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 1, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 0, 2, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 1, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[1, 1, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[1, 1, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 3]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[1, 1, 2, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[1, 1, 2, 1]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 2, 1, 1]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 1, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[2, 1, 1, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[1, 1, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_2_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_2_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_2_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 93 with window 10
[3, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 3, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[0, 3, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 3, 3]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 2, 3]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 0, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 1, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 1, 3, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 3, 3]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 2, 3]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 3, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 3, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 3, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[0, 2, 2, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 2, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 2, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 3, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 3, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 3, 2, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 1, 3, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[0, 2, 3, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_3_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_3_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_3_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 103 with window 10
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 0, 1]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 1, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 0, 2]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 0, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 0, 1, 3]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 2, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 1, 3]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 1, 2, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 2, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 0, 2, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 0, 1, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Going to 4 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[1, 3, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 2, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[1, 3, 1, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 1, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 2, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[2, 1, 1, 1]
cost: 2, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[1, 3, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_3_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_3_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_3_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_2_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_2_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_2_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 113 with window 10
[0, 2, 3, 2]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 0, 2]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 2, 2]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 0, 0, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 3, 3]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 3, 2]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 2, 2]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 3, 3]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 3, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 1, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 2, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 1, 3, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 2, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 3, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Going to 4 tenants
[1, 1, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[1, 1, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[1, 1, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[1, 1, 3, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 2, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[1, 1, 3, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 2, 2, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[1, 1, 3, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_3_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_3_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_3_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_2_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_2_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_2_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 123 with window 10
[2, 2, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 0, 0, 2]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 3, 0, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[2, 0, 3, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 2, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 0, 2, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 3, 0, 0]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[2, 0, 3, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 2, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[2, 0, 3, 0]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 0, 2, 2]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 2]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[2, 1, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 1, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[2, 1, 2, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[2, 2, 1, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[2, 1, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[2, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 1, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_1_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_1_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_1_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 133 with window 10
[0, 3, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 3, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 1, 1]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 3, 0, 0]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 3, 2, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 0, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 3, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 2, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 3, 2]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 3, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 0, 1, 1]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 3, 2]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 3, 3, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 1, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 1, 3, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Going to 4 tenants
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[1, 2, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 3, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[1, 2, 3, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[1, 3, 2, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[1, 2, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_2_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_2_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_2_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 3, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_3_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_3_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_3_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 143 with window 10
[3, 1, 0, 1]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 0, 0, 3]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 0, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 0, 2, 3]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 3, 0, 1]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 1, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 2, 0, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 0, 2, 0]
cost: 3, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[2, 0, 3, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 2, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 0, 2, 3]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 0, 2, 0]
cost: 4, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[2, 0, 3, 1]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 2, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 0, 2, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 0, 2, 0]
cost: 5, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 4 tenants
[2, 1, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 2, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[2, 1, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[2, 1, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[2, 1, 2, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[2, 2, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[2, 1, 2, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[2, 2, 1, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[2, 1, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_1_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_1_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_1_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[2, 2, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_2_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_2_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_2_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 153 with window 10
[3, 0, 1, 2]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 3, 0, 1]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 1, 3]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 2, 0, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 0, 2]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 3, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 3, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 2, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 3, 1, 3]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Going to 2 tenants
[3, 0, 1, 2]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 2, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 3, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[3, 0, 1, 2]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 3, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 3, 2, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Starting at index 163 with window 10
[1, 1, 3, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 2, 2, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 3, 1, 3]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 2, 2]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 1, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 0, 2]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 0, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 3, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 1, 2, 2]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 0, 2, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 1, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[2, 1, 2, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 2, 1]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 1, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 1, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 1, 1, 1]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[2, 3, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 1, 1, 1]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[2, 3, 1, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[3, 1, 1, 1]
cost: 3, nb_shrd_repls: 3, shrd_resources: {'cpu': 13, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[2, 3, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 2_3_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 2_3_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 2_3_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 3_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 3_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 3_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 173 with window 10
[2, 3, 0, 2]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 0, 3]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[0, 3, 3, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[1, 3, 3, 0]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 2, 3, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[1, 3, 2, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 2, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 0, 3, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 1, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Going to 2 tenants
[1, 3, 3, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[2, 2, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[2, 1, 3, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 2, 2, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Starting at index 183 with window 10
[2, 3, 0, 3]
cost: 8, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[2, 0, 3, 3]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 1, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 3, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 1, 2, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 2, 2]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 3, 0, 0]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 1, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 2, 0, 2]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Going to 2 tenants
[3, 0, 3, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 0, 2, 2]
cost: 4, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[3, 0, 3, 0]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[3, 0, 2, 2]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Going to 4 tenants
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[3, 1, 2, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[3, 2, 1, 0]
cost: 5, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[3, 1, 2, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[3, 2, 1, 0]
cost: 4, nb_shrd_repls: 2, shrd_resources: {'cpu': 10, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
Going to 10 tenants
[3, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 3_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 3_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 3_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[3, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 3_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 3_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 3_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 193 with window 10
[2, 2, 3, 0]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 3, 0, 0]
cost: 6, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 1, 2]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 2, 0, 2]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[2, 3, 2, 0]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[2, 1, 3, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 2, 2, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 1, 2]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 0, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 1, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[2, 2, 3, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 2, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 3, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[3, 1, 2, 1]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[3, 0, 3, 1]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 2, 1]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Starting at index 203 with window 10
[2, 2, 2, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 1, 2]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 3, 0, 1]
cost: 7, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 1, 3]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 2, 0, 3]
cost: 8, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[1, 3, 3, 2]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[2, 2, 3, 1]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 3, 2, 1]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[2, 1, 3, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[2, 2, 2, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Starting at index 213 with window 10
[2, 3, 1, 3]
cost: 8, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 1, 3, 0]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 2, 2, 0]
cost: 5, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[3, 0, 3, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 3, 1, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 2, 2]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 2, 1, 2]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 3, 0, 2]
cost: 8, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[1, 3, 3, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[2, 3, 3, 0]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Going to 2 tenants
[3, 1, 3, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 2, 2, 0]
cost: 6, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
Starting at index 223 with window 10
[1, 3, 3, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[2, 3, 3, 0]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 3, 1]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 2, 2, 1]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 0, 3, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 3, 1, 1]
cost: 7, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 1, 2, 3]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 2, 1, 3]
cost: 8, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 3, 0, 3]
cost: 9, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[2, 3, 3, 1]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Starting at index 233 with window 10
[2, 2, 3, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[2, 3, 2, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 2, 3, 0]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 3, 2, 0]
cost: 6, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 1 replicas
[3, 1, 3, 2]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 2, 2, 2]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 3, 1, 2]
cost: 8, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[2, 3, 3, 2]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 2, 3, 1]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 3, 2, 1]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
Starting at index 243 with window 10
[3, 1, 3, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 2, 2, 3]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 3, 1, 3]
cost: 9, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[2, 3, 3, 3]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 0]
cost: 7, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 2 replicas
[3, 2, 3, 2]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 3, 2, 2]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 3, 3, 1]
cost: 8, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 3 replicas
[3, 2, 3, 3]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 2, 3]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
Starting at index 253 with window 10
[3, 3, 3, 2]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 3]
cost: 10, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 5 replicas
[3, 3, 3, 2]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 3]
cost: 10, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 5 replicas
[3, 3, 3, 2]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 3]
cost: 10, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 5 replicas
[3, 3, 3, 2]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 3]
cost: 10, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 5 replicas
[3, 3, 3, 2]
cost: 9, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 4 replicas
[3, 3, 3, 3]
cost: 10, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding maximum transition cost (5) with 5 replicas
Starting at index 263 with window 10
No config exists that meets all filtering constraints
Previous_conf:
[0, 0, 2, 1]
Starting at index 14 with window 10
Getting next batch of experiments for 9 tenants
min_conf: 0 0 2 1
min_conf_dec: 14
14
[0, 0, 2, 1]
15
[1, 0, 0, 1]
16
[0, 0, 1, 3]
17
[1, 0, 1, 0]
18
[0, 0, 3, 0]
19
[0, 1, 2, 0]
20
[0, 2, 1, 0]
21
[0, 2, 0, 1]
22
[0, 0, 2, 2]
23
[0, 1, 1, 2]
{'0': [[0, 2, 1], [0, 1, 3], [0, 3, 0], [1, 2, 0], [2, 1, 0], [2, 0, 1], [0, 2, 2], [1, 1, 2]], '1': [[0, 0, 1], [0, 1, 0]]}
{'0': [[2, 1, 0], [0, 1, 1], [1, 3, 0], [1, 0, 1], [3, 0, 0], [2, 2, 0]], '1': [[2, 0, 0], [1, 2, 0]], '2': [[1, 0, 0], [0, 1, 0]]}
{'2': [[1, 0, 0], [0, 0, 1], [2, 0, 0]], '0': [[1, 1, 0], [1, 0, 2]], '1': [[3, 0, 0], [0, 1, 0], [0, 0, 2], [2, 0, 1]], '3': [[0, 0, 0]]}
{'1': [[0, 0, 2], [1, 0, 0], [0, 2, 0]], '3': [[0, 0, 1]], '0': [[1, 0, 1], [0, 0, 3], [0, 1, 2], [0, 2, 1]], '2': [[0, 0, 2], [0, 1, 1]]}
Next possible experiments for next nb of tenants
{'0': [[0, 2, 1], [0, 1, 3], [0, 3, 0], [1, 2, 0], [2, 1, 0], [2, 0, 1], [0, 2, 2], [1, 1, 2]], '1': [[0, 0, 1], [0, 1, 0]]}
Elementstr: [[0,0,2,1];[0,0,1,3];[0,0,3,0];[0,1,2,0];[0,2,1,0];[0,2,0,1];[0,0,2,2];[0,1,1,2]]
Min replicacount:0 0 2 1
Max replicacount:0 1 1 2
Elementstr: [[1,0,0,1];[1,0,1,0]]
Min replicacount:1 0 0 1
Max replicacount:1 0 1 0
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 2] -> 1e-09
[0, 1, 1, 2] -> 1e-09
[0, 0, 1, 3] -> 1e-09
[0, 0, 2, 1] -> 146
[0, 2, 1, 0] -> 1e-09
[0, 1, 2, 0] -> 1e-09
Generating new experiment. Saving results on Results/exp3/silver/9_tenants-ex1/op/
SAMPLE_LIST
[1, 0, 0, 1] -> 1e-09
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '1', 'score': '-0.19444444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  8 tenants and 0;1;1;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 0, 2, 1] with completion time 140.0s has smaller or equal resource amount
Conf [0, 0, 2, 1] with completion time 146.0s has smaller or equal resource amount
Conf [0, 0, 2, 1] with completion time 156.0s has smaller or equal resource amount
Conf [0, 0, 2, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 5
shared_resources for resource type memory: 6
Starting at: 8
Tenant_nb: 8, maxTenants: 8
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 7
New index positioned at 0
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
For 8 tenants, the current sample equals 0_1_1_1 and is positioned at index 8
New index positioned at 8
Left over configs in runtime manager: 
[[0, 0, 1, 2], [0, 1, 0, 2], [0, 2, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
Going to 9 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 10 with window 10
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 2]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 2]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 2, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
Going to 9 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 4, shrd_resources: {'cpu': 10, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 10 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 20 with window 10
No config meets the filtering constraints
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 140
[0, 1, 1, 1] -> 126
[0, 0, 1, 2] -> 1e-09
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/8_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 140
[0, 1, 1, 1] -> 126
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.19444444444444445', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '140', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.19444444444444445', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '126', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 2, 1]
Measured completion time is 140.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': 1000149.0, 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  7 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Conf [0, 1, 0, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 2
Starting at: 0
Tenant_nb: 7, maxTenants: 7
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
False
True
[[0, 1, 0, 1]]
[0, 1, 0, 1]
[[{}, [], [<src.sla.WorkerConf object at 0x7fac7309f990>, <src.sla.WorkerConf object at 0x7fac7309fa50>, <src.sla.WorkerConf object at 0x7fac7309f6d0>, <src.sla.WorkerConf object at 0x7fac7309f890>]]]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 6
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '136', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 136.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 2, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '135', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.125', 'config': '0', 'score': '-0.125', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 1, 0, 1] with completion time 135.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 4
shared_resources for resource type memory: 2
Starting at: 0
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 133.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  6 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 1, 0, 1] with completion time 135.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 133.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
Starting at: 0
Tenant_nb: 6, maxTenants: 6
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 5
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 5
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '133', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 133.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[50240434322]
COST-EFFECTIVE-RESULT
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '115', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  5 tenants and 0;1;0;1:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 109.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 115.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 135.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 133.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 133.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 152.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}
shared_replicas: 2
shared_resources for resource type cpu: 6
shared_resources for resource type memory: 6
Starting at: 0
Tenant_nb: 5, maxTenants: 5
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 2
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 4
New index positioned at 5
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}]
RESULT FOUND
[0, 1, 0, 1]
Measured completion time is 114.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_1_0_1
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0020', '0101', '1000', '0110', '0012', '0021', '0200', '0102', '0030', '1001', '0111', '0013', '1010', '0120', '0022', '0201', '0103', '1100', '1002', '0210', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 1, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 11 with window 10
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Rescaling worker 2
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0102', '0021', '1001', '0111', '0201', '0013', '0103', '0030', '1010', '0120', '1100', '0210', '0300', '0022', '1002']
Filtering from index 0 with window 10
Starting at index 0 with window 10
[0, 1, 0, 1]
0_1_0_1 has already been sampled for the following workers:
{'cpu': 6, 'memory': 4}
{'cpu': 3, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 10 with window 10
[0, 2, 0, 1]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 2, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Resource cost is too high in comparison with initial conf [0, 1, 0, 1]
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 20 with window 10
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 1
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 30 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71ccf850>, <src.sla.WorkerConf object at 0x7fac71ccf690>, <src.sla.WorkerConf object at 0x7fac71ccf490>, <src.sla.WorkerConf object at 0x7fac71ccf250>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71c6a990>, <src.sla.WorkerConf object at 0x7fac71c6a710>, <src.sla.WorkerConf object at 0x7fac71c6a690>, <src.sla.WorkerConf object at 0x7fac71c6a3d0>]], [{}, [0, 1, 0, 1], [<src.sla.WorkerConf object at 0x7fac71c6aed0>, <src.sla.WorkerConf object at 0x7fac71c6a210>, <src.sla.WorkerConf object at 0x7fac71c6a8d0>, <src.sla.WorkerConf object at 0x7fac71c9c350>]]]
Conf 0:
114
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;1;0;1 and result
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '114', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0200', '0102', '0021', '1001', '0111', '0013', '0201', '0103', '0030', '1010', '0120', '1100', '0022', '1002', '0210', '0300']
Filtering from index 0 with window 1
Starting at index 0 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 1 with window 1
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 2 with window 1
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 3 with window 1
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 9 tenants
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 10 tenants
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 4 with window 1
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 5 with window 1
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 6 with window 1
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 7 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 8 with window 1
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 9 with window 1
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 10 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 10 with window 1
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 11 with window 1
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 2, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 12 with window 1
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 13 with window 1
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 7 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 8 tenants
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 9 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 10 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 14 with window 1
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 7 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 8 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 9 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 10 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 15 with window 1
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 7 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 8 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 9 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 10 tenants
[0, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 16 with window 1
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 7 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 8 tenants
[1, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 9 tenants
[1, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 17 with window 1
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 4, shrd_resources: {'cpu': 10, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 18 with window 1
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 10 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 19 with window 1
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 7 tenants
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 8 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 9 tenants
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 10 tenants
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 20 with window 1
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
Going to 6 tenants
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 7 tenants
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 8 tenants
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 9 tenants
[0, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 21 with window 1
No config exists that meets all filtering constraints
Previous_conf:
[0, 1, 0, 1]
Starting at index 0 with window 1
[0, 1, 0, 1]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '114', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  4 tenants and 0;0;1;2:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Conf [0, 0, 0, 3] with completion time 160.0s has smaller or equal resource amount
Conf [0, 0, 2, 0] with completion time 119.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 126.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 153.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 109.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 115.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 114.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 135.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 133.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 133.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 152.0s has smaller or equal resource amount
Conf [0, 1, 0, 1] with completion time 136.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}
shared_replicas: 1
shared_resources for resource type cpu: 1
shared_resources for resource type memory: 2
Starting at: 5
Tenant_nb: 4, maxTenants: 4
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 10
Returning adaptive scaler for  3 tenants and 0;1;0;0:
1
255
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 3
New index positioned at 2
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}]
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 5
New index positioned at 5
Left over configs in runtime manager: 
[[0, 1, 0, 2], [0, 2, 0, 0], [0, 0, 2, 0], [1, 0, 0, 0]]
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0200', '0012', '0021', '1001', '0102', '0111', '0030', '1010', '0201', '0120', '1100', '0013', '0210', '0103', '0022', '1002', '0300']
Filtering from index 1 with window 10
Starting at index 1 with window 10
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 11 with window 10
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 1, 0, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 6 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 1, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
[1, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 4, shrd_resources: {'cpu': 10, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
[0, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 10 tenants
[0, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 21 with window 10
No config meets the filtering constraints
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 100
[0, 1, 1, 1] -> 85
[0, 0, 1, 2] -> 113
[0, 1, 0, 2] -> 1e-09
[0, 2, 0, 0] -> 1e-09
[0, 0, 2, 0] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/4_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 2, 1] -> 100
[0, 1, 1, 1] -> 85
[0, 0, 1, 2] -> 113
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.19444444444444445', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1527777777777778', 'best_score': '-0.1527777777777778', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}]
Filtered results
[{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1527777777777778', 'best_score': '-0.1527777777777778', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.18055555555555555', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '100', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.19444444444444445', 'best_score': '-0.18055555555555555', 'SLAName': 'silver', 'CompletionTime': '85', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 2]
Measured completion time is 113.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_0_1_2
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0020', '0101', '0110', '0012', '1000', '0021', '0102', '0030', '0200', '0111', '0013', '1001', '1010', '0120', '0022', '0201', '0103', '0210', '1002', '1100', '0300']
Filtering from index 3 with window 10
Starting at index 3 with window 10
Setting adaptive scaler for  5 tenants:
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
Updated performed!!!!!!
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Going to 2 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
SCALING INDEX = 2
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Going to 10 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
SCALING INDEX = 2
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 13 with window 10
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 3, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 2]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 23 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1527777777777778', 'best_score': '-0.1527777777777778', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}, [0, 0, 1, 2], [<src.sla.WorkerConf object at 0x7fac7448c190>, <src.sla.WorkerConf object at 0x7fac7448c210>, <src.sla.WorkerConf object at 0x7fac7448c3d0>, <src.sla.WorkerConf object at 0x7fac7448c050>]], [{}, [0, 0, 1, 2], [<src.sla.WorkerConf object at 0x7fac71d21610>, <src.sla.WorkerConf object at 0x7fac71d21fd0>, <src.sla.WorkerConf object at 0x7fac71d21cd0>, <src.sla.WorkerConf object at 0x7fac71d60e90>]]]
Conf 0:
113
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;0;1;2 and result
{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.1527777777777778', 'best_score': '-0.1527777777777778', 'SLAName': 'silver', 'CompletionTime': '113', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0101', '0020', '1000', '0110', '0012', '0102', '0200', '0021', '1001', '0111', '0013', '0030', '0201', '0103', '1010', '0120', '0022', '1002', '1100', '0210', '0300']
Filtering from index 4 with window 1
Starting at index 4 with window 1
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 1, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 5 with window 1
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 6 with window 1
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 6 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 7 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 8 with window 1
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 6 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 9 with window 1
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 6 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 10 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 10 with window 1
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 1, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 11 with window 1
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 6 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 7 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 8 tenants
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 9 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 10 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 12 with window 1
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 2, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 6 tenants
[0, 2, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 13 with window 1
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 0, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 14 with window 1
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 6 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 7 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 8 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 9 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 10 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 15 with window 1
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 6 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 7 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 8 tenants
[0, 1, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 9 tenants
[0, 1, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Mot moved
Going to 10 tenants
[0, 1, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 16 with window 1
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 0, 2, 2]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 2]
cost: 0, nb_shrd_repls: 4, shrd_resources: {'cpu': 10, 'memory': 12}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 17 with window 1
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 0, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 6 tenants
[1, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Mot moved
Going to 10 tenants
[1, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 18 with window 1
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 1, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 6 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 7 tenants
[1, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 8 tenants
[1, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Mot moved
Going to 9 tenants
[1, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 19 with window 1
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 6 tenants
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 7 tenants
[0, 2, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 8 tenants
[0, 2, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 9 tenants
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Mot moved
Going to 10 tenants
[0, 2, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 20 with window 1
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
[0, 3, 0, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 4 tenants
Going to 5 tenants
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 6 tenants
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 7 tenants
[0, 3, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 8 tenants
[0, 3, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Mot moved
Going to 9 tenants
[0, 3, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_3_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_3_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_3_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 21 with window 1
No config exists that meets all filtering constraints
Previous_conf:
[0, 0, 1, 2]
Starting at index 4 with window 1
[0, 0, 1, 2]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '3', 'score': '-0.08333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '113', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '114', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
Returning adaptive scaler for  3 tenants and 0;1;0;0:
Checking consistency of rm with runtime manager
Checking consistency of adaptive_scalers with stored results in matrix
1
255
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103']
Conf [0, 0, 0, 2] with completion time 148.0s has smaller or equal resource amount
Conf [0, 0, 1, 0] with completion time 128.0s has smaller or equal resource amount
ADDING CORRECT RESULT TO HISTORY:
{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}
shared_replicas: 0
shared_resources for resource type cpu: 0
shared_resources for resource type memory: 0
Starting at: 2
Tenant_nb: 3, maxTenants: 3
SLO is 150.0
Removing all configs that are useless to actually test as a result of the current result
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}]
State of adaptive_scaler
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Returning adaptive scaler for  1 tenants and 0;0;2;0:
1
255
For 1 tenants, the current sample equals 0_0_2_0 and is positioned at index 5
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
New index positioned at 5
Returning adaptive scaler for  2 tenants and 0;0;1;2:
1
255
For 2 tenants, the current sample equals 0_0_1_2 and is positioned at index 10
RESULT FOUND,  we remove all configs with higher resource_cost than current result for lower number of tenants: 1 .. 2
New index positioned at 10
Returning adaptive scaler for  4 tenants and 0;0;1;2:
1
255
For 4 tenants, the current sample equals 0_0_1_2 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  5 tenants and 0;1;0;1:
1
255
For 5 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  6 tenants and 0;1;0;1:
1
255
For 6 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  7 tenants and 0;1;0;1:
1
255
For 7 tenants, the current sample equals 0_1_0_1 and is positioned at index 0
New index positioned at 0
Returning adaptive scaler for  8 tenants and 0;0;2;1:
1
255
For 8 tenants, the current sample equals 0_0_2_1 and is positioned at index 4
New index positioned at 4
Returning adaptive scaler for  9 tenants and 0;0;2;2:
1
255
For 9 tenants, the current sample equals 0_0_2_2 and is positioned at index 22
New index positioned at 22
Returning adaptive scaler for  10 tenants and 0;0;2;1:
1
255
For 10 tenants, the current sample equals 0_0_2_1 and is positioned at index 0
New index positioned at 0
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}]
Filtered results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': 'n/a', 'best_score': 'n/a', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}]
For 3 tenants, the current sample equals 0_1_0_0 and is positioned at index 2
New index positioned at 2
Left over configs in runtime manager: 
[[0, 0, 2, 0], [0, 1, 0, 1], [1, 0, 0, 1]]
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0021', '1001', '0101', '0003', '0020', '1000', '0110', '0012', '0200', '0102', '0111', '0013', '0030', '1010', '0201', '0103']
Filtering from index 7 with window 10
Starting at index 7 with window 10
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[1, 0, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 17 with window 10
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
No config meets the filtering constraints
Processing current sample
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 146
[0, 0, 0, 2] -> 148
[0, 0, 1, 0] -> 128
[0, 1, 0, 0] -> 105
[0, 0, 2, 0] -> 1e-09
[0, 1, 0, 1] -> 1e-09
All useful experiment samples have been tested. We let k8-resource-optimizer return all the samples and we calculate the most optimal result from the set of samples that meet the slo
Running 2 experiments
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex0/op/
Generating new experiment. Saving results on Results/exp3/silver/3_tenants-ex1/op/
SAMPLE_LIST
[0, 0, 0, 3] -> 146
[0, 0, 0, 2] -> 148
[0, 0, 1, 0] -> 128
[0, 1, 0, 0] -> 105
Results
[{'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.08333333333333333', 'best_score': '-0.08333333333333333', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}, {'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.06944444444444445', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, {'config': '3', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.08333333333333333', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}]
Filtered results
[{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.06944444444444445', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, {'config': '1', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.08333333333333333', 'best_score': '-0.08333333333333333', 'SLAName': 'silver', 'CompletionTime': '148', 'Successfull': 'true'}, {'config': '3', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.08333333333333333', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '105', 'Successfull': 'true'}, {'config': '0', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '3', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.125', 'best_score': '-0.125', 'SLAName': 'silver', 'CompletionTime': '146', 'Successfull': 'true'}]
RESULT FOUND
[0, 0, 1, 0]
Measured completion time is 128.0
New adaptive scaling cycle...Current resources of workers are:
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
[553583943]
NO COST EFFECTIVE RESULT
Starting with0_0_1_0
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Rescaling worker 3
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
6
4
2
1
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0020', '0003', '0101', '0110', '0012', '1000', '0021', '0102', '0030', '0200', '1001', '0111', '0013', '1010', '0201', '0103']
Filtering from index 1 with window 10
Starting at index 1 with window 10
Setting adaptive scaler for  4 tenants:
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
Setting adaptive scaler for  5 tenants:
ScalingDownPhase, ScalingUpPhase, Tipped_over_confs, Current_tipped_over_conf, initial_confs, StartScalingDown, Worker resources
True
False
[]
None
[]
True
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 2, 'memory': 2}
{'cpu': 1, 'memory': 2}
Updated performed!!!!!!
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
[0, 1, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 2, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 2]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Going to 2 tenants
[0, 0, 1, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 2, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
SCALING INDEX = 2
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 11 with window 10
[1, 0, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 2]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 3, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 0]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 1, 1]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 0, 1, 3]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[1, 0, 1, 0]
Resource cost is too high in comparison with initial conf [0, 0, 1, 0]
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 2, 0, 1]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
[0, 1, 0, 3]
Failed check of worker for vertical scaling
SCALING INDEX = 2
Moved because:
due to failed worker check triggered by vertical scaling or too high resource cost or conf has already been sampled
Starting at index 21 with window 10
No config exists that meets all filtering constraints
list index out of range
Recursive down scaling disabled
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
difference between resource_cost optimal conf and predicted total cost -1
1
Passing over worker in previously failed scaling
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
TIPPED_OVER_CONFS
[]
CURRENT CONFS
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
INITIAL CONFS:
[[{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.06944444444444445', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}, [0, 0, 1, 0], [<src.sla.WorkerConf object at 0x7fac71cb0c10>, <src.sla.WorkerConf object at 0x7fac71cb0990>, <src.sla.WorkerConf object at 0x7fac71cb0810>, <src.sla.WorkerConf object at 0x7fac71cb0bd0>]], [{}, [0, 0, 1, 0], [<src.sla.WorkerConf object at 0x7fac71d9ac10>, <src.sla.WorkerConf object at 0x7fac71d9a950>, <src.sla.WorkerConf object at 0x7fac71cb07d0>, <src.sla.WorkerConf object at 0x7fac71cb0e50>]]]
Conf 0:
128
INITIALS WORKER_CONFS:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
cheapest_worker_index: 0
Going back to worker configuration with lowest cost for combination 0;0;1;0 and result
{'config': '2', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2', 'score': '-0.06944444444444445', 'best_score': '-0.06944444444444445', 'SLAName': 'silver', 'CompletionTime': '128', 'Successfull': 'true'}
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
---------------------------------
Updating scaling function
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking worker configuration:
{workerId=1, resources: {cpu: { size: 6, cost: 1}, memory: { size: 4, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=2, resources: {cpu: { size: 4, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=3, resources: {cpu: { size: 3, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=0, max_replicas0, flagged=False}
{workerId=4, resources: {cpu: { size: 1, cost: 1}, memory: { size: 2, cost: 1}}, min_replicas=1, max_replicas3, flagged=False}
Double checking scaling function:
[[1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [1, {'cpu': [], 'memory': []}], [2, {'cpu': [1], 'memory': [0]}]]
NO BETTER COST EFFECTIVE ALTERNATIVE IN SIGHT
REDOING_CHEAPEST_SCALED_DOWN
{'cpu': 6, 'memory': 4}
{'cpu': 4, 'memory': 2}
{'cpu': 3, 'memory': 2}
{'cpu': 1, 'memory': 2}
Adding stronger incremental result
Moving filtered samples in sorted combinations after the window
['0001', '0010', '0100', '0002', '0011', '0003', '0101', '0020', '1000', '0110', '0012', '0102', '0200', '0021', '1001', '0111', '0013', '0030', '1010', '0201', '0103']
Filtering from index 1 with window 1
Starting at index 1 with window 1
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 0]
cost: 0, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 2 with window 1
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 3 with window 1
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 5 tenants
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 6 tenants
[0, 0, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 7 tenants
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 8 tenants
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 9 tenants
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Mot moved
Going to 10 tenants
[0, 0, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 4 with window 1
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 5 with window 1
[0, 0, 0, 3]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 5 tenants
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 6 tenants
[0, 0, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 7 tenants
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 8 tenants
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 9 tenants
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Mot moved
Going to 10 tenants
[0, 0, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 6 with window 1
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 7 with window 1
[0, 0, 2, 0]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 8 with window 1
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 0]
cost: 1, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 5 tenants
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 6 tenants
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 9 with window 1
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 5 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 6 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 9 tenants
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Mot moved
Going to 10 tenants
[0, 1, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 10 with window 1
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 2]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 2]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 11 with window 1
[0, 1, 0, 2]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 2]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 2]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 2]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_2: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_2: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_2: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 12 with window 1
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 5 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 6 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 0]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 13 with window 1
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 5 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 6 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 7 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 8 tenants
[0, 0, 2, 1]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 9 tenants
[0, 0, 2, 1]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 9, 'memory': 10}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Mot moved
Going to 10 tenants
[0, 0, 2, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_2_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 14 with window 1
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 5 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 6 tenants
[1, 0, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 7 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 8 tenants
[1, 0, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Mot moved
Going to 9 tenants
[1, 0, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 15 with window 1
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 5 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 6 tenants
[0, 1, 1, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 7 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 8 tenants
[0, 1, 1, 1]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 9 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Mot moved
Going to 10 tenants
[0, 1, 1, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_1_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_1_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_1_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 16 with window 1
[0, 0, 1, 3]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 1, 3]
cost: 0, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 5 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 6 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 7 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 8 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 5, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 9 tenants
[0, 0, 1, 3]
cost: 1, nb_shrd_repls: 3, shrd_resources: {'cpu': 6, 'memory': 8}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Mot moved
Going to 10 tenants
[0, 0, 1, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_1_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 17 with window 1
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 5 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 6 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 7 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 8 tenants
[0, 0, 3, 0]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 9 tenants
[0, 0, 3, 0]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Mot moved
Going to 10 tenants
[0, 0, 3, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_3_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_0_3_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_3_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 18 with window 1
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[1, 0, 1, 0]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 5 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 6 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 7 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 8 tenants
[1, 0, 1, 0]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 9 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 3, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Mot moved
Going to 10 tenants
[1, 0, 1, 0]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 1_0_1_0: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 1_0_1_0: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 1_0_1_0: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 19 with window 1
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 5 tenants
[0, 2, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 6 tenants
[0, 2, 0, 1]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 7 tenants
[0, 2, 0, 1]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 8 tenants
[0, 2, 0, 1]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Mot moved
Going to 9 tenants
[0, 2, 0, 1]
cost: 3, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_2_0_1: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_2_0_1: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_2_0_1: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 20 with window 1
[0, 1, 0, 3]
cost: 4, nb_shrd_repls: 0, shrd_resources: {'cpu': 0, 'memory': 0}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_2_0: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_2_0: 0
Mot moved
Going to 2 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_0_1_2: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_0_1_2: 0
Mot moved
Going to 3 tenants
Going to 4 tenants
[0, 1, 0, 3]
cost: 1, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 5 tenants
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 6 tenants
[0, 1, 0, 3]
cost: 0, nb_shrd_repls: 2, shrd_resources: {'cpu': 6, 'memory': 6}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 7 tenants
[0, 1, 0, 3]
cost: 1, nb_shrd_repls: 1, shrd_resources: {'cpu': 4, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 8 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 9 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 2, shrd_resources: {'cpu': 2, 'memory': 4}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Mot moved
Going to 10 tenants
[0, 1, 0, 3]
cost: 2, nb_shrd_repls: 1, shrd_resources: {'cpu': 1, 'memory': 2}
Original minimum_shared_replicas: 0
-->after comparing with previous_tenant_conf 0_1_0_3: 0
Original minimum_shared_resources for cpu: 2
-->after comparing with previous tenant conf 0_1_0_3: 2
Original minimum_shared_resources for memory: 0
-->after comparing with previous tenant conf 0_1_0_3: 0
Moved because:
due to exceeding minimal shared resources (see above for more explanation)
Starting at index 21 with window 1
No config exists that meets all filtering constraints
Previous_conf:
[0, 1, 0, 0]
Starting at index 2 with window 1
[0, 1, 0, 0]
Saving optimal results into matrix for previous results
Saving optimal results into matrix
{'silver': {'1': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06666666666666667', 'config': '5', 'score': '-0.13333333333333333', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '10': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '4', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '2': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '0', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '3': {'CompletionTime': '128', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.06944444444444445', 'config': '2', 'score': '-0.06944444444444445', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '0', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '4': {'CompletionTime': '113', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.1527777777777778', 'config': '2', 'score': '-0.1527777777777778', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '1', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '5': {'CompletionTime': '114', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '6': {'CompletionTime': '133', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '7': {'CompletionTime': '136', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': 'n/a', 'config': '0', 'score': 'n/a', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '1', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '0', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '2', 'worker4.resources.requests.memory': '2'}, '8': {'CompletionTime': '140', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.18055555555555555', 'config': '0', 'score': '-0.18055555555555555', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '1', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}, '9': {'CompletionTime': '1e-09', 'SLAName': 'silver', 'Successfull': 'true', 'best_score': '-0.2222222222222222', 'config': '0', 'score': '-0.2222222222222222', 'worker1.replicaCount': '0', 'worker1.resources.requests.cpu': '6', 'worker1.resources.requests.memory': '4', 'worker2.replicaCount': '0', 'worker2.resources.requests.cpu': '4', 'worker2.resources.requests.memory': '2', 'worker3.replicaCount': '2', 'worker3.resources.requests.cpu': '3', 'worker3.resources.requests.memory': '2', 'worker4.replicaCount': '2', 'worker4.resources.requests.cpu': '1', 'worker4.resources.requests.memory': '2'}}}
